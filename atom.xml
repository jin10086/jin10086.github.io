<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>高金的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://igaojin.me/"/>
  <updated>2019-11-14T04:01:30.713Z</updated>
  <id>https://igaojin.me/</id>
  
  <author>
    <name>Gao JIn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>帮用户代付CPU费用--EOS</title>
    <link href="https://igaojin.me/2019/11/13/%E5%B8%AE%E7%94%A8%E6%88%B7%E4%BB%A3%E4%BB%98CPU%E8%B4%B9%E7%94%A8-EOS/"/>
    <id>https://igaojin.me/2019/11/13/帮用户代付CPU费用-EOS/</id>
    <published>2019-11-13T13:12:12.000Z</published>
    <updated>2019-11-14T04:01:30.713Z</updated>
    
    <content type="html"><![CDATA[<p>参考文档 <a href="https://github.com/EOSLaoMao/deploy-eosio-contracts-v1.7.0/blob/master/features/ONLY_BILL_FIRST_AUTHORIZER.md" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/EOSLaoMao/deploy-eosio-contracts-v1.7.0/blob/master/features/ONLY_BILL_FIRST_AUTHORIZER.md</a></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><p>用户可以支付RMB,EOS 等来让我们帮他支付一次转账的费用</p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>主要是负责救急作用（用户账号动不了的时候)</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>用户选择想要操作的合约，方法，以及参数等等</p><ol><li>前端生成如下的数据，此时用户不需要签名</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"expiration"</span>: <span class="string">"2019-10-15T06:02:59"</span>,</span><br><span class="line">  <span class="attr">"ref_block_num"</span>: <span class="number">486</span>,</span><br><span class="line">  <span class="attr">"ref_block_prefix"</span>: <span class="number">2948179210</span>,</span><br><span class="line">  <span class="attr">"max_net_usage_words"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"max_cpu_usage_ms"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"delay_sec"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"context_free_actions"</span>: [],</span><br><span class="line">  <span class="attr">"actions"</span>: [&#123;</span><br><span class="line">      <span class="attr">"account"</span>: <span class="string">"eosio.token"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"transfer"</span>,</span><br><span class="line">      <span class="attr">"authorization"</span>: [&#123;</span><br><span class="line">          <span class="attr">"actor"</span>: <span class="string">"USER"</span>,</span><br><span class="line">          <span class="attr">"permission"</span>: <span class="string">"active"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"data"</span>: <span class="string">"0000000084ab32dd0000000088ab32dd102700000000000004454f530000000000"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"transaction_extensions"</span>: [],</span><br><span class="line">  <span class="attr">"signatures"</span>: [],</span><br><span class="line">  <span class="attr">"context_free_data"</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>判断收费情况，等待用户付费</li><li><p>付费成功后,修改expiration 到20分钟后，并且要代付费的actor添加为first authorization。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"expiration"</span>: <span class="string">"2019-10-15T06:22:59"</span>,</span><br><span class="line">  <span class="attr">"ref_block_num"</span>: <span class="number">486</span>,</span><br><span class="line">  <span class="attr">"ref_block_prefix"</span>: <span class="number">2948179210</span>,</span><br><span class="line">  <span class="attr">"max_net_usage_words"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"max_cpu_usage_ms"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"delay_sec"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"context_free_actions"</span>: [],</span><br><span class="line">  <span class="attr">"actions"</span>: [&#123;</span><br><span class="line">      <span class="attr">"account"</span>: <span class="string">"eosio.token"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">"transfer"</span>,</span><br><span class="line">      <span class="attr">"authorization"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"actor"</span>: <span class="string">"代付的用户"</span>,</span><br><span class="line">          <span class="attr">"permission"</span>: <span class="string">"active"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"actor"</span>: <span class="string">"USER"</span>,</span><br><span class="line">          <span class="attr">"permission"</span>: <span class="string">"active"</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"data"</span>: <span class="string">"0000000084ab32dd0000000088ab32dd102700000000000004454f530000000000"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"transaction_extensions"</span>: [],</span><br><span class="line">  <span class="attr">"signatures"</span>: [],</span><br><span class="line">  <span class="attr">"context_free_data"</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>对生成的交易进行签名</p></li><li>返回给前端，让用户签名，整个流程完成</li></ol><p>如果用户是用EOS支付的，则需要先把eosio.token transfer 给收费账号的放在第一位</p><p>否则是直接只有1个交易</p><h2 id="需要注意的问题"><a href="#需要注意的问题" class="headerlink" title="需要注意的问题"></a>需要注意的问题</h2><h3 id="签名后的交易能多次用吗？"><a href="#签名后的交易能多次用吗？" class="headerlink" title="签名后的交易能多次用吗？"></a>签名后的交易能多次用吗？</h3><p>不能</p><h3 id="如何方便的接入rmb支付？"><a href="#如何方便的接入rmb支付？" class="headerlink" title="如何方便的接入rmb支付？"></a>如何方便的接入rmb支付？</h3><p>后续再弄,第一版只支持EOS付费</p><h3 id="能否使用出active权限以外的其他权限代付"><a href="#能否使用出active权限以外的其他权限代付" class="headerlink" title="能否使用出active权限以外的其他权限代付?"></a>能否使用出active权限以外的其他权限代付?</h3><p>不能,所以代付的这个账号只能里面不存任何钱,里面只有资源费用。</p><h2 id="api"><a href="#api" class="headerlink" title="api"></a>api</h2><p>前端post json格式的数据: <code>{username:&quot;xxx&quot;,data:要过来签名的data,json dumps格式,timestamp:xxx,nonce:xxx}</code></p><p>nonce是类似于uuid的东西…是本次请求的一个标识</p><p>然后一直get {“nonce”:”xxx”} 等待返回的数据</p><p>返回的数据格式</p><p>status为1 表示 成功,0表示错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">status:1,nonce:xxx,data:data</span><br><span class="line">status:0,nonce:xxx,data:&quot;错误信息&quot;</span><br></pre></td></tr></table></figure><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/11/13/帮用户代付CPU费用-EOS/">https://igaojin.me/2019/11/13/帮用户代付CPU费用-EOS/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      参考文档 https://github.com/EOSLaoMao/deploy-eosio-contracts-v1.7.0/blob/master/features/ONLY_BILL_FIRST_AUTHORIZER.md

主要功能
用户可以支付RMB,EOS 等来让我们帮他支付一次转账的费用

使用场景
主要是负责救急作用（用户账号动不了的时候)

流程
用户选择想要操作的合约，方法，以及参数等等

 1. 前端生成如下的数据，此时用户不需要签名

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23


{
  &quot;e
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>法学、经济学与区块链的最潮交会 — 激进市场（Radical Markets）提案入门</title>
    <link href="https://igaojin.me/2019/11/13/%E6%B3%95%E5%AD%B8%E3%80%81%E7%B6%93%E6%BF%9F%E5%AD%B8%E8%88%87%E5%8D%80%E5%A1%8A%E9%8F%88%E7%9A%84%E6%9C%80%E6%BD%AE%E4%BA%A4%E6%9C%83-%E2%80%94-%E6%BF%80%E9%80%B2%E5%B8%82%E5%A0%B4%EF%BC%88Radical-Markets%EF%BC%89%E6%8F%90%E6%A1%88%E5%85%A5%E9%96%80-%E5%90%AB%E9%96%B1%E8%AE%80%E6%B8%85%E5%96%AE/"/>
    <id>https://igaojin.me/2019/11/13/法學、經濟學與區塊鏈的最潮交會-—-激進市場（Radical-Markets）提案入門-含閱讀清單/</id>
    <published>2019-11-13T07:57:05.000Z</published>
    <updated>2019-11-13T12:56:00.176Z</updated>
    
    <content type="html"><![CDATA[<p>本文转载于<a href="https://medium.com/@daaab/%E6%B3%95%E5%AD%B8-%E7%B6%93%E6%BF%9F%E5%AD%B8%E8%88%87%E5%8D%80%E5%A1%8A%E9%8F%88%E7%9A%84%E6%9C%80%E6%BD%AE%E4%BA%A4%E6%9C%83-%E6%BF%80%E9%80%B2%E5%B8%82%E5%A0%B4-radical-markets-%E6%8F%90%E6%A1%88%E5%85%A5%E9%96%80-%E5%90%AB%E9%96%B1%E8%AE%80%E6%B8%85%E5%96%AE-989032d9c2c5" rel="external nofollow noopener noreferrer" target="_blank">法学、经济学与区块链的最潮交会 — 激进市场（Radical Markets）提案入门 [含阅读清单]</a></p><p>只是简单的把繁体中文 转换成了简体中文</p><p>寶博士最新播客,可以边听边看下面的文章</p><p><a href="https://player.soundon.fm/episode/dc138238-bf4e-4a36-b50b-f8a90945c3b0" rel="external nofollow noopener noreferrer" target="_blank">激進市場五大重點，講完下課！</a></p><p><a href="https://player.soundon.fm/episode/dc138238-bf4e-4a36-b50b-f8a90945c3b0" rel="external nofollow noopener noreferrer" target="_blank">https://player.soundon.fm/episode/dc138238-bf4e-4a36-b50b-f8a90945c3b0</a></p><p>下面是原文</p><hr><p>最近迷上了<a href="http://radicalmarkets.com/" rel="external nofollow noopener noreferrer" target="_blank">《激进市场（Radical Markets）》</a> — 由芝加哥大学法学院知名教授、国际法律专家<a href="https://en.wikipedia.org/wiki/Eric_Posner" rel="external nofollow noopener noreferrer" target="_blank">艾瑞克·波斯纳（Eric Posner）</a>和微软首席经济研究员、芝加哥大学经济系有史以来最年轻教授<a href="http://glenweyl.com/" rel="external nofollow noopener noreferrer" target="_blank">格伦·韦尔（Glen Weyl）</a>所共同提出的全新社会经济架构理念。</p><img src="/2019/11/13/法學、經濟學與區塊鏈的最潮交會-—-激進市場（Radical-Markets）提案入門-含閱讀清單/bbs1.jpeg" title="via https://www.slideshare.net/EGlenWeyl/radical-markets"><p>去年（2018）三月这两位法学界、经济学界的金童合写了一本新书<a href="https://www.amazon.com/Radical-Markets-Uprooting-Capitalism-Democracy/dp/0691177503" rel="external nofollow noopener noreferrer" target="_blank">《激进市场：彻底根除资本主义和民主，建设公正社会（Radical Markets:Uprooting Capitalism and Democracy for a Just Society）》</a>，给市场带来了不小的震撼，连区块链界大神/以太坊创办人 Vitalik 都被圈粉；书中试图提出五种相对于社会现状非常 “激进（Radical）”的社会经济革新提案，引发众人迴响。</p><img src="/2019/11/13/法學、經濟學與區塊鏈的最潮交會-—-激進市場（Radical-Markets）提案入門-含閱讀清單/bbs2.jpg" title="神童作者— Glen Weyl. via https://twitter.com/LeuvenEconomics/"><p>其中包括「<strong>共享自评估税则</strong>」「<strong>平方投票法</strong>」「<strong>移民介绍分红</strong>」「<strong>打破投资垄断</strong>」和振奋人心，一听就懂的「<strong>数据即劳动</strong>」（注：细节容后述），作者提出的上述几个激进市场方案，引来不少抨击，有社会主义、共产主义甚至奴隶制度复辟等，都在现有的民粹主义言论下给作者带来不少麻烦。不过，看著这两位<strong>人生胜利组、高智商奇才</strong>，甘冒社会的误解和大不讳，在书裡为当前崩坏现世提出这些意图改进现状的颠覆提案，试图在当代资本主义、社会主义（或其他主流价值）及其附加产生的资本垄断、贫富不均问题之外的一个全新路线、新颖的人类社会价值解决方案，这让我非常感动，也开始对这些提案的真实性和可行性感到好奇。</p><h2 id="激励人心但资讯分散、译本繁杂"><a href="#激励人心但资讯分散、译本繁杂" class="headerlink" title="激励人心但资讯分散、译本繁杂"></a>激励人心但资讯分散、译本繁杂</h2><p><strong>转载注,目前可以在微信读书直接看,也可以在京东购买</strong></p><p>在网路上搜寻了一阵，除了该书的中文翻译还未见付梓（据闻机械工业出版社今年会出，台港未定），网路上的中文书评、翻译目前也还不多。不过由于区块链界大神 — 全球第二大加密货币/链创办人 V 神（维塔利克·布特林 Vitalik Buterin）曾在去年该书出版后秒被圈粉并专文推荐；故单是该篇推荐文就有至少三个不同版本的中文翻译，导致总体资讯不多，却颇混杂。故撰此文，期望给大家整理一些关于<a href="http://radicalmarkets.com/" rel="external nofollow noopener noreferrer" target="_blank">《激进市场（Radical Markets）》</a>的简要资讯/知识和译文入口，能让更多人一起加入激进市场提案的相关理解与讨论。</p><h2 id="1-原始资料"><a href="#1-原始资料" class="headerlink" title="1. 原始资料"></a>1. 原始资料</h2><h3 id="Radical-Markets-书籍官网"><a href="#Radical-Markets-书籍官网" class="headerlink" title="Radical Markets 书籍官网"></a><a href="http://radicalmarkets.com/" rel="external nofollow noopener noreferrer" target="_blank">Radical Markets 书籍官网</a></h3><img src="/2019/11/13/法學、經濟學與區塊鏈的最潮交會-—-激進市場（Radical-Markets）提案入門-含閱讀清單/bbs3.png" title="相比起一般经济学书籍更酷一些的插图"><p>网站裡即明列了有所有书裡提到的主要观点，即书中五大章节：</p><ul><li><p>资产即垄断 / Property is Monopoly</p><p>透过共享自评估税则（全名：Common Ownership Self-Assessed Tax，简称 COST）提高资产流动。</p></li><li><p>激进民主｜Radical Democracy</p><p>透过平方投票法（全名：Quadratic Voting，简称 QV）降低民主漏洞带来的危害，书中以该投票方案如何能够避免川普当选为例（笑）。</p></li><li><p>全世界的工人团结起来｜Uniting the World’s Workers</p><p>透过移民介绍分红（全名：Visas between Individuals Program，简称 VIP）的创新签证制度来扩大各国人民放宽移民入国的意愿。其内涵大致为：只要你介绍好的工作者移民入境，你便可获得该工作者未来工作收入的一定比例作为介绍分红。</p></li><li><p>肢解资本垄断大章鱼｜Dismembering the Octopus</p><p>禁止大财团于同一种产业中透过交叉投资进行社会垄断。书中提到美国六大银行的前几大股东都由大财团贝莱德（BlackRock）等四家大企业所控。</p></li><li><p>数据即劳动 ｜Data as Labor</p><p>透过新方法记录我们为大企业（及这些大企业的 大 AI）所做的努力与劳动（例如每天滑手机、打手游）并且由政府或这些 AI 企业定期付给我们这些劳动应得的收益。白话一点讲：只要现在天天滑手机，让企业蒐集资讯并以之训练取代我们工作的 AI，三十年后我们每个人每个月都该获取数千到数万的「数据劳动补贴」 ;) 。</p></li></ul><p>如果英文较好，可以到<a href="http://radicalmarkets.com/" rel="external nofollow noopener noreferrer" target="_blank">官网</a>或点击上述几个标题连结，应该就能略知一二；若英文不够好的（像我一样），那麽单看上述条列大项和内涵的中文解释，你/你应该也能大致体会<a href="http://radicalmarkets.com/" rel="external nofollow noopener noreferrer" target="_blank">激进市场</a>究竟是怎麽一回事（后续会再写文章更详细一点说明）。</p><h3 id="Amazon-亚马逊书店购买连结：当前评价四颗星"><a href="#Amazon-亚马逊书店购买连结：当前评价四颗星" class="headerlink" title="Amazon 亚马逊书店购买连结：当前评价四颗星"></a><a href="https://www.amazon.com/Radical-Markets-Uprooting-Capitalism-Democracy/dp/0691177503" rel="external nofollow noopener noreferrer" target="_blank">Amazon 亚马逊书店购买连结</a>：当前评价四颗星</h3><img src="/2019/11/13/法學、經濟學與區塊鏈的最潮交會-—-激進市場（Radical-Markets）提案入門-含閱讀清單/bbs4.png" title="Radical Markets — Amazon 购书页面"><p>其实我本来一秒就想上网购书来看，想说这麽有趣又激进的提案，早些入手啃一下英文版好了，没想到却立刻被认识该书作者 Glen Weyl 的宝博士多年好友 Prof. <a href="https://www.clemson.edu/business/about/profiles/TOMLAM" rel="external nofollow noopener noreferrer" target="_blank">Tom Lam</a> 给出手阻止：</p><blockquote><p>Tom：This book is difficult！…This book is really difficult in fact Glens article is always difficult, even for economist.<br>他的书很难，不要清举妄动！ — Tom Lam (2019)</p></blockquote><p>寻思半晌，马上决定改为上网看文章加看演讲影片，并问 Tom 是否这样会比硬啃原文书更好。 Prof. <a href="https://www.clemson.edu/business/about/profiles/TOMLAM" rel="external nofollow noopener noreferrer" target="_blank">Tom Lam</a> 秒回：</p><blockquote><p>Tom：That’s 100 times better, seriously.</p></blockquote><h2 id="2-基本理念介绍"><a href="#2-基本理念介绍" class="headerlink" title="2. 基本理念介绍"></a>2. 基本理念介绍</h2><p>引我首次接触激进市场（RM）的文章，是区块链专案 <a href="https://medium.com/u/fcf0cd0b3216?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">AZTEC</a> 和 <a href="https://medium.com/u/5b533f148162?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">Chronos</a> 的共同创办人 <a href="https://medium.com/u/54ad3aa2f116?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">Paul Berg</a> 所写<a href="https://paulrberg.com/post/2018/12/24/radical-markets/" rel="external nofollow noopener noreferrer" target="_blank">「Intro to Radical Markets」</a>一文中文译版文章「介绍基进市场（Radical Markets）」 — 感谢 <a href="https://medium.com/u/5f710935c1f6?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">Williams</a> @ 区块牛 <a href="https://medium.com/u/6a39cd35a1a9?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">cryptocow</a> 的翻译：</p><p><a href="https://medium.com/cryptocow/%E4%BB%8B%E7%B4%B9%E5%9F%BA%E9%80%B2%E5%B8%82%E5%A0%B4-radical-markets-104a50a20712?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">介绍基进市场(Radical Markets)</a></p><p>该文译者也在区块链专案 <a href="https://talk.nervos.org/t/radical-markets/1529" rel="external nofollow noopener noreferrer" target="_blank">Nervos 论坛发表了简体版</a>。不过不知为何该文把 Radical Market 的 “Radical” 一词选择翻译为「基进」而不是「激进」？也许跟一些国内外的基进党有关？我目前暂时觉得还是译作激进较好。</p><h2 id="3-豆瓣的读者回馈"><a href="#3-豆瓣的读者回馈" class="headerlink" title="3. 豆瓣的读者回馈"></a>3. 豆瓣的读者回馈</h2><blockquote><h3 id="两个把读者当成学术研讨会与会人员的作者，真的高估了我们普通人的智商和理性"><a href="#两个把读者当成学术研讨会与会人员的作者，真的高估了我们普通人的智商和理性" class="headerlink" title="两个把读者当成学术研讨会与会人员的作者，真的高估了我们普通人的智商和理性"></a><a href="https://book.douban.com/review/9335250/" rel="external nofollow noopener noreferrer" target="_blank">两个把读者当成学术研讨会与会人员的作者，真的高估了我们普通人的智商和理性</a></h3></blockquote><p>上面这篇豆瓣读者回馈文的标题虽然搞笑，但内容还不错。这个写书评的人虽批评了作者高估读者的智商，但依旧用心地把几个激进市场的几个分项提案做了很有趣的翻译，例如：【断捨离促进税 COST】、【允许移民作为二等公民存在】等，不过原书中的第四点提案「阻止投资垄断」似乎漏了没写到。</p><p>还有其他的书评例如这篇<a href="https://book.douban.com/review/9487715/" rel="external nofollow noopener noreferrer" target="_blank">「革命死了，革命万岁！」</a>也都十分有趣。听说 Amazon 的读者书评更精采，骂作者把读者想得太聪明的人比豆瓣上的还要多得多 🤣</p><h2 id="4-V-神专文推荐"><a href="#4-V-神专文推荐" class="headerlink" title="4. V 神专文推荐"></a>4. V 神专文推荐</h2><p>区块链世界大神也是全球第二大区块链以太坊创办人 <a href="https://zh.wikipedia.org/zh-tw/%E7%B6%AD%E5%A1%94%E5%88%A9%E5%85%8B%C2%B7%E5%B8%83%E7%89%B9%E6%9E%97" rel="external nofollow noopener noreferrer" target="_blank">Vitalik</a> 读完《激进市场》后大有所感，特地撰写了读后感 — <a href="https://vitalik.ca/general/2018/04/20/radical_markets.html" rel="external nofollow noopener noreferrer" target="_blank">「On Radical Market」</a>，这篇文章在中文世界引起震撼，因此光中文翻译就有好几个不同版本…主要翻得较完整的是橙皮书的<a href="https://orange.xyz/p/183" rel="external nofollow noopener noreferrer" target="_blank">「每个token都是一座小型城市 — Vitalik Buterin读《激进市场》」</a></p><p>同篇文章其他还有至少三种不同的中文译本包括：由 <a href="https://medium.com/u/36a61ffbf45c?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">Crypto.Peng 比特彭</a>在 Medium 上的翻译：<a href="https://medium.com/@crypto.peng/%E7%AD%86%E8%A8%98-%E9%87%91%E8%9E%8D%E7%A7%91%E6%8A%80%E8%88%87%E6%94%BF%E6%B2%BB%E7%B6%93%E6%BF%9F-1-90d06d5a3937" rel="external nofollow noopener noreferrer" target="_blank">【激进的市场 — 笔记】金融科技与政治经济-(1)、(2)</a>，由<a href="https://github.com/BlockchainTranslator/EOS/blob/master/1%E3%80%81%E5%B7%B2%E8%AF%91%E6%96%87%E7%AB%A0.md" rel="external nofollow noopener noreferrer" target="_blank">区块链中文字幕组</a>以<a href="https://bihu.com/people/21877" rel="external nofollow noopener noreferrer" target="_blank">爱乐牛</a>为名在<a href="https://bihu.com/" rel="external nofollow noopener noreferrer" target="_blank">币乎</a>发表的翻译：<a href="https://bihu.com/article/275165" rel="external nofollow noopener noreferrer" target="_blank">【区块链中文字幕组】Vitalik Buterin：读《激进市场》（1）、（2）、（3）</a>、由<a href="https://www.zhihu.com/people/NervosFans" rel="external nofollow noopener noreferrer" target="_blank">NervosFans</a>于<a href="http://zhihu.com/" rel="external nofollow noopener noreferrer" target="_blank">知乎</a>上的两篇翻译评注：<a href="https://zhuanlan.zhihu.com/p/36202913" rel="external nofollow noopener noreferrer" target="_blank">书评：激进的市场（一）、（二）</a>… 目前整体看来，应该还是<a href="https://orange.xyz/p/183" rel="external nofollow noopener noreferrer" target="_blank">橙皮书版</a>的最好（如果有更好的翻译版本，请不吝回覆留言让我知道，感谢！）。</p><p>另外 V 神也曾于去年（2018）九月和激进市场作者 Glen Weyl 共同发表一篇长达 40 页的论文<a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3243656" rel="external nofollow noopener noreferrer" target="_blank">《Liberal Radicalism: Formal Rules for a Society Neutral among Communities》</a>（暂译：自由激进主义：社会公共物品配置方式的一般性原则）这篇中文翻译就比较少，其中一个版本如下：</p><p><a href="https://blog.csdn.net/weixin_42934313/article/details/84590278?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">V神新论文：理想很美好，现实很骨感</a></p><h2 id="5-激进变革运动"><a href="#5-激进变革运动" class="headerlink" title="5. 激进变革运动"></a>5. 激进变革运动</h2><p>激进变革运动（RadicalxChange）官网：<a href="https://radicalxchange.org/" rel="external nofollow noopener noreferrer" target="_blank">https://radicalxchange.org/</a></p><p>由作者 Glen Weyl 直接领军发起的全球行动，希望串链学术界、艺术界、教育界、行动家和各类研究者，起身探讨激进市场一书中所提到的各项原则与想法，不预设立场，透过各种方式试探这些新经济社会思维真正落实到现实世界的可能性。这项运动筹划多时，在今年(2019)三月22–24 在美国的底特律举办了三天研讨会，方才提到以太坊创办人、区块链神童也到场发表闭幕演说。</p><p><a href="https://breakermag.com/vitalik-buterin-is-embracing-a-new-role-political-theorist/" rel="external nofollow noopener noreferrer" target="_blank">Vitalik Buterin Is Embracing a New Role: Political Theorist</a></p><p>台湾 <a href="https://pdis.nat.gov.tw/zh-TW/" rel="external nofollow noopener noreferrer" target="_blank">PDIS</a>（Public Digital Innovation Space，公共数位创新空间）的林雨苍也低调出席简报关于 <a href="https://pdis.nat.gov.tw/zh-TW/blog/2019/03/07/%E5%95%86%E5%91%A8%E5%B0%88%E6%AC%84-%E4%BD%A0%E4%BE%86%E8%A8%B1%E9%A1%98-%E5%85%A8%E6%B0%91-%E9%82%84%E9%A1%98.html" rel="external nofollow noopener noreferrer" target="_blank">今年即将举办第二届的「总统盃黑客松」将採用平方投票法</a> 的消息，相关新闻见：</p><p><a href="https://pdis.nat.gov.tw/zh-TW/blog/2019/03/07/%E5%95%86%E5%91%A8%E5%B0%88%E6%AC%84-%E4%BD%A0%E4%BE%86%E8%A8%B1%E9%A1%98-%E5%85%A8%E6%B0%91-%E9%82%84%E9%A1%98.html?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">商周专栏：你来许愿，全民「还愿」</a></p><p>对于激进市场如何从一本书演变为一场潜在的全球性运动，可以参看这支影片，是由 Glen Weyl 在 3/22 于底特律展开的全球第一场 <a href="https://radicalxchange.org/" rel="external nofollow noopener noreferrer" target="_blank">RadicalxChange 研讨会</a>的开幕演说，内含三个非常精采的相关计画。目前没有中文字幕，若要赞助翻译请点下方 LikeCoin 鼓励按钮。谢谢！</p><iframe width="680" height="382" src="https://www.youtube.com/embed/2f9Lu-l0-kI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h3 id="激进变革运动学生版官网：-https-rxcstudents-org"><a href="#激进变革运动学生版官网：-https-rxcstudents-org" class="headerlink" title="激进变革运动学生版官网： https://rxcstudents.org"></a>激进变革运动学生版官网： <a href="https://rxcstudents.org" rel="external nofollow noopener noreferrer" target="_blank">https://rxcstudents.org</a></h3><p>目前 RadicalXChange（简称 RXC）正在向全世界徵召各校师生，起而共同探讨当前面临的社会现状与激进市场提案的各种可能性。这个专门让人学习 RM 的网站上包含了刚起草的<a href="https://rxcstudents.org/about" rel="external nofollow noopener noreferrer" target="_blank">宣言</a>和<a href="https://rxcstudents.org/action-on-campus" rel="external nofollow noopener noreferrer" target="_blank">四大行动部门</a>。宝博士已和作者取得联繫（感谢 <a href="https://medium.com/u/778a2615a605?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">Suji Yan</a>)）正在计画努力翻译该网站，若您有兴趣共同参与，请留言或寄信给我 dablog [at] gmail.com</p><h2 id="6-必看影片"><a href="#6-必看影片" class="headerlink" title="6. 必看影片"></a>6. 必看影片</h2><iframe width="1192" height="670" src="https://www.youtube.com/embed/uj186urDU8c" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p><a href="https://www.youtube.com/watch?v=uj186urDU8c" rel="external nofollow noopener noreferrer" target="_blank">这支演讲影片</a>真的非常精采，是 Glen Weyl 身为作者亲自深入所谓「大企业的大本营」Google 演讲的记录，内容中提到了激进市场提案裡最重要的 Maketopia（暂译：市托邦）的概念。由谷歌首席经济学家<a href="https://zh.wikipedia.org/wiki/%E5%93%88%E5%B0%94%C2%B7%E8%8C%83%E9%87%8C%E5%AE%89" rel="external nofollow noopener noreferrer" target="_blank">Hal Varian</a> 主持会后座谈，砲火猛烈，许多 Googler 均大胆提出各种尖锐问题，只见作者 Glen 保持风度一一回覆（虽然还是不时面露无奈 XD）。以上几支影片目前都没有中文字幕，若要赞助翻译请点下方 LikeCoin 鼓励按钮，或直接赞助加密货币也可以。谢谢！</p><p><a href="https://commerce.coinbase.com/checkout/04695d32-6d85-4627-b061-277a349a5e30?source=post_page-----989032d9c2c5----------------------" rel="external nofollow noopener noreferrer" target="_blank">🙏Coinbase Commerce — 加密货币捐款箱 📦</a></p><h2 id="7-其他好文"><a href="#7-其他好文" class="headerlink" title="7. 其他好文"></a>7. 其他好文</h2><p><a href="https://orange.xyz/" rel="external nofollow noopener noreferrer" target="_blank">橙皮书</a>要算是中文世界中对激进市场（主要是书中共享自评估税则的前身：哈伯格税）有过最多讨论与文章的媒体，从 2018 年 8 月至 2018 年 12 月底，一共是五篇，依照发表时间顺序是：</p><ol><li><a href="https://orange.xyz/p/183" rel="external nofollow noopener noreferrer" target="_blank">“每个token都是一座小型城市」 — Vitalik Buterin读《激进市场》</a></li><li><a href="https://orange.xyz/p/231" rel="external nofollow noopener noreferrer" target="_blank">为区块链世界想象一种税收模型：Vitalik多次提及的「哈伯格税」究竟是什麽？</a></li><li><a href="https://orange.xyz/p/254" rel="external nofollow noopener noreferrer" target="_blank">再谈哈伯格税：极端的计划经济和市场经济，没准是同一个东西</a></li><li><a href="https://orange.xyz/p/279" rel="external nofollow noopener noreferrer" target="_blank">哈伯格税是一种租金，而不是一种税收</a></li><li><a href="https://orange.xyz/p/288" rel="external nofollow noopener noreferrer" target="_blank">哈伯格税：面向共享经济的创新？</a></li></ol><p>注：<strong>哈伯格税</strong>是启发作者 Glen Weyl 和 Posner 提出共享自评估税则 (COST)的重要因素，也因为 Vitalik V 神的介绍，而在这两年受到许多人的关注。共享自评估税则可说是哈伯格税的改进版。（这裡有区块链上的共享自评估税则<a href="http://www.microversegame.com/rules" rel="external nofollow noopener noreferrer" target="_blank">模拟游戏</a> from <a href="https://rxcstudents.org/action-on-campus" rel="external nofollow noopener noreferrer" target="_blank">RXCStudents</a>)</p><p>其他的中文评论还有一些散落各处的例如： 在<a href="https://xw.qq.com/cmsid/20180526A124H0/20180526A124H000" rel="external nofollow noopener noreferrer" target="_blank">《激进市场》</a>一书中的平均主义与自由主义，以及不少还未见中文翻译的英文书评：</p><p><a href="https://paulrberg.com/post/2018/12/31/critique-radical-markets/" rel="external nofollow noopener noreferrer" target="_blank">Critique on Radical</a> Markets by Paul Berg</p><p><a href="http://www.clearviewmoney.com/entries/radical_markets_the_most_versatile_book_of_the_year.php" rel="external nofollow noopener noreferrer" target="_blank">Radical Markets: the most versatile book of the year</a> by ClearviewMoney</p><p><a href="https://www.wired.com/story/glen-weyl-technology-social-innovation/" rel="external nofollow noopener noreferrer" target="_blank">Glen Weyl on Technology and Social Innovation</a> by Nitasha Tiku / WIRED</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>目前中文世界写得最好的激进市场评论其实是彭博商业周刊的「<a href="http://hk.bbwc.cn/xifkb3.html" rel="external nofollow noopener noreferrer" target="_blank">收入不平等的解决之道 </a>」（需要付费阅读），其中提到：</p><blockquote><p>（激进市场提案）在手段上是保守的（因为保守派喜欢市场），但目的却是自由派的。这就像将一隻老虎放出笼子，然后在其背上装一个鞍座。而这可能就是当今世界所需要的东西。</p></blockquote><p><a href="http://radicalmarkets.com/" rel="external nofollow noopener noreferrer" target="_blank">Radical Markets</a>、<a href="https://radicalxchange.org/" rel="external nofollow noopener noreferrer" target="_blank">RadicalxChange</a> 还算是个非常年轻的想法及衍生运动，但依旧是个令人期待的潜在新世界的楔子。这篇文章也同样只是个开始，希望中文世界能有关于基进/激进市场的更多文字与讨论。我自己正在规划撰写中的就有「<strong>两名天才如何横空出世放虎 — 激进市场作者背后的故事」以及「激进变革运动中 —华语世界的激进市场评论（补充包）</strong>」，今天这则文章主要先希望能给一些看过激进市场的朋友多些参考资料，同时也让还未看过激进市场的朋友有一个较为丰富完整的概略入门，免去一些搜索、找错的时间。期待各位多多分享、批评指正与鼓励。谢谢！</p><p>身为一个世界公民，我并没有要说自由派或保守派哪一个更好，但绝对乐见这个当代世界存在一种新的派🍕，并且试著去思考、理解、探究它的可行性。</p><p>如果你喜欢这篇文章，欢迎拍手鼓励，也欢迎追踪：</p><ul><li>宝博士脸书： <a href="https://facebook.com/dAAAb" rel="external nofollow noopener noreferrer" target="_blank">https://facebook.com/dAAAb</a></li><li>宝博朋友说 YT： <a href="https://youtube.com/c/dAAAb" rel="external nofollow noopener noreferrer" target="_blank">https://youtube.com/c/dAAAb</a></li><li>宝博士IG： <a href="https://instagr.am/dab.ko" rel="external nofollow noopener noreferrer" target="_blank">https://instagr.am/dab.ko</a></li></ul><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/11/13/法學、經濟學與區塊鏈的最潮交會-—-激進市場（Radical-Markets）提案入門-含閱讀清單/">https://igaojin.me/2019/11/13/法學、經濟學與區塊鏈的最潮交會-—-激進市場（Radical-Markets）提案入門-含閱讀清單/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      本文转载于法学、经济学与区块链的最潮交会 — 激进市场（Radical Markets）提案入门 [含阅读清单]

只是简单的把繁体中文 转换成了简体中文

寶博士最新播客,可以边听边看下面的文章

激進市場五大重點，講完下課！

https://player.soundon.fm/episode/dc138238-bf4e-4a36-b50b-f8a90945c3b0

下面是原文




最近迷上了《激进市场（Radical Markets）》 — 由芝加哥大学法学院知名教授、国际法律专家艾瑞克·波斯纳（Eric Posner）和微软首席经济研究员、芝加哥大学经济系有史以来最年轻教授格伦·
    
    </summary>
    
      <category term="激进市场" scheme="https://igaojin.me/categories/%E6%BF%80%E8%BF%9B%E5%B8%82%E5%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>EOS合约编译无法生成ABI的解决办法</title>
    <link href="https://igaojin.me/2019/11/06/EOS%E5%90%88%E7%BA%A6%E7%BC%96%E8%AF%91%E6%97%A0%E6%B3%95%E7%94%9F%E6%88%90ABI%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://igaojin.me/2019/11/06/EOS合约编译无法生成ABI的解决办法/</id>
    <published>2019-11-06T15:40:58.000Z</published>
    <updated>2019-11-06T15:51:11.048Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写EOS上面ram的代币化合约</p><p>但是发现,怎么部署合约 都无法生成abi文件</p><p>abi里面一直是空白的</p><p>无论是在<a href="https://app.eosstudio.io/" rel="external nofollow noopener noreferrer" target="_blank">https://app.eosstudio.io/</a> 在线编译器</p><p>还是本地 使用eosio-cpp编译都是一样</p><p>最后才发现是 因为合约名字和 .cpp文件的名字不一样导致的。。。（真无法</p><img src="/2019/11/06/EOS合约编译无法生成ABI的解决办法/一杯茶一根烟一个bug改一天.jpg" title="一杯茶一根烟一个bug改一天"><p>所以解决方法就是</p><hr><p>假如你的build 代码是 <code>eosio-cpp -o learn/learn.wasm learn/src/learn.cpp --abigen</code></p><p>那么你需要确保 <code>learn.cpp</code> 里面的 contract name 也是 <strong>learn</strong></p><p>如下所示：</p><p><code>CONTRACT learn : public contract</code></p><p>如果不是,那么就怎么也无法生成abi了。。。</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/11/06/EOS合约编译无法生成ABI的解决办法/">https://igaojin.me/2019/11/06/EOS合约编译无法生成ABI的解决办法/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      最近在写EOS上面ram的代币化合约

但是发现,怎么部署合约 都无法生成abi文件

abi里面一直是空白的

无论是在https://app.eosstudio.io/ 在线编译器

还是本地 使用eosio-cpp编译都是一样

最后才发现是 因为合约名字和 .cpp文件的名字不一样导致的。。。（真无法

所以解决方法就是




假如你的build 代码是 eosio-cpp -o learn/learn.wasm learn/src/learn.cpp --abigen

那么你需要确保 learn.cpp 里面的 contract name 也是 learn

如下所示：

CON
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>EOS1.8新特性,羊毛党的福利</title>
    <link href="https://igaojin.me/2019/11/04/EOS1-8%E6%96%B0%E7%89%B9%E6%80%A7-%E7%BE%8A%E6%AF%9B%E5%85%9A%E7%9A%84%E7%A6%8F%E5%88%A9/"/>
    <id>https://igaojin.me/2019/11/04/EOS1-8新特性-羊毛党的福利/</id>
    <published>2019-11-04T12:59:49.000Z</published>
    <updated>2019-11-04T13:08:58.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近EIDOS很火,一不小心挖矿就把自己的CPU挖爆了。。。</p><p>想出货都没有办法。。。</p><p>但是最近EOS1.8版本已经上线了</p><p>可以让别人帮你支付CPU费用</p><h2 id="新特性的介绍"><a href="#新特性的介绍" class="headerlink" title="新特性的介绍"></a>新特性的介绍</h2><blockquote><p>如果一笔交易有两个或者两个以上的账户联合签名，则只会对排在第一位的账户收取资源费用。此外， EOSIO 1.8的新特性不只是“dApp为用户支付资源“，还包括：1.资源的付费方，可以是任意的账号或服务方，该账号不一定是dApp；2.交易所可以为用户承担资源费用，帮助用户充值至交易所；3.任意的EOS账号，都可以为其他的账号支付资源；4.dApp能够为用户支付资源；5.有可能借助于一项特殊的协议，扫描二维码即可完成资源支付。</p></blockquote><h2 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h2><p><code>cleos push action eidosonecoin transfer &#39;[&quot;gy2dgmztgqge&quot;,&quot;mxcexdeposit&quot;,&quot;4642.9812 EIDOS&quot;,&quot;109257&quot;]&#39; -p bbheasxtlatd gy2dgmztgqge</code></p><p>其实还是很简单的,只是签名的时候 把 支付cpu的那个号放在前面就好了</p><p>如上面 <code>bbheasxtlatd</code>是出cpu费用的号</p><p>详细请看这笔签名的tx <a href="https://bloks.io/transaction/e7c203425927bb89928a33e3f1b41c75bf293cb84c29230ad68de36a061d95bb" rel="external nofollow noopener noreferrer" target="_blank">e7c203425927bb89928a33e3f1b41c75bf293cb84c29230ad68de36a061d95bb</a></p><h2 id="延伸一下"><a href="#延伸一下" class="headerlink" title="延伸一下"></a>延伸一下</h2><p>感觉以后羊毛党很舒服了啊</p><p>只要给大号质押资源就可以了,然后全部用大号的资源</p><p>再也不怕小号动不了了</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/11/04/EOS1-8新特性-羊毛党的福利/">https://igaojin.me/2019/11/04/EOS1-8新特性-羊毛党的福利/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      背景
最近EIDOS很火,一不小心挖矿就把自己的CPU挖爆了。。。

想出货都没有办法。。。

但是最近EOS1.8版本已经上线了

可以让别人帮你支付CPU费用

新特性的介绍
如果一笔交易有两个或者两个以上的账户联合签名，则只会对排在第一位的账户收取资源费用。此外， EOSIO 1.8的新特性不只是“dApp为用户支付资源“，还包括：1.资源的付费方，可以是任意的账号或服务方，该账号不一定是dApp；2.交易所可以为用户承担资源费用，帮助用户充值至交易所；3.任意的EOS账号，都可以为其他的账号支付资源；4.dApp能够为用户支付资源；5.有可能借助于一项特殊的协议，扫描二维码即可完成资源
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="EOS" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/EOS/"/>
    
    
  </entry>
  
  <entry>
    <title>EIDOS 自动撸空投(不需要开电脑与手机版)</title>
    <link href="https://igaojin.me/2019/11/01/EIDOS-%E8%87%AA%E5%8A%A8%E6%92%B8%E7%A9%BA%E6%8A%95-%E4%B8%8D%E9%9C%80%E8%A6%81%E5%BC%80%E7%94%B5%E8%84%91%E4%B8%8E%E6%89%8B%E6%9C%BA%E7%89%88/"/>
    <id>https://igaojin.me/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/</id>
    <published>2019-11-01T07:46:26.000Z</published>
    <updated>2019-11-01T08:24:18.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是EIDOS"><a href="#什么是EIDOS" class="headerlink" title="什么是EIDOS"></a>什么是EIDOS</h2><p>我感觉就是让大家疯狂干EOS主网，谁干的猛，谁拿的钱就多。。。</p><p>下面是老陆写的介绍,<a href="https://mp.weixin.qq.com/s/ep4HdVFc1AvOMTYkpJMuUg" rel="external nofollow noopener noreferrer" target="_blank">EIDOS 自动撸空投详解</a></p><img src="/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/1.webp"><blockquote><p>官网：<a href="http://eidos.one" rel="external nofollow noopener noreferrer" target="_blank">http://eidos.one</a></p></blockquote><p>官方推特：<a href="https://twitter.com/EnuMivo" rel="external nofollow noopener noreferrer" target="_blank">https://twitter.com/EnuMivo</a></p><p>早前消息是说啊，EIDOS 快来到EOS上发空投了，UBI理念的ENU已经死了。</p><p>简要回顾一下ENU，一次空投4000多个，一个最多涨到0.5元，批量撸ENU赚几十万的不在少数。</p><p>本着宁可做过不可错过的精神，现在开始教大家怎么撸EIDOS。</p><p>首先我们先了解空投的规则，用户可以将任意金额的 EOS 转账至 eidosonecoin 这个账户，智能合约会将等量的 EOS 返回至用户账户，并会将 eidosonecoin 这个账户中存有的 0.01% EIDOS 发送到用户账户中。</p><p>按照 EIDOS 的规则，每一秒内，会有 25 个 EIDOS 产生，其中 20 个 EIDOS 用于空投给用户，剩余 5 个将发送到团队的账户。空投将持续 15 个月，最终，将有 10 亿 EIDOS 生成，其中 8 亿用于空投。</p><p>简单来说就是不停给 eidosonecoin 这个账号转账，每次转账消耗 CPU 资源来获取账号内万分之一的 EIDOS 。</p><img src="/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/2.webp"><h2 id="合约挖矿"><a href="#合约挖矿" class="headerlink" title="合约挖矿"></a>合约挖矿</h2><p>正常的操作应该是我写一个脚本,每隔1秒疯狂向eidosonecoin发0.0001 EOS,但是这样比较麻烦的是 你需要有一台电脑一直开机</p><p>然后我就写了一个合约…</p><p>你只要部署这个合约,设置好参数,充值好CPU,NET后,就可以不用管了…</p><p>原理很简单,就是疯狂延时交易而已…</p><p>代码在：<a href="https://app.eosstudio.io/jin10086/fuckenu" rel="external nofollow noopener noreferrer" target="_blank">https://app.eosstudio.io/jin10086/fuckenu</a></p><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><ol><li>需要先买200kb的内存 （后面不想跑了可以卖掉</li><li>需要电脑装了scatter</li><li>需要给自己部署合约的这个账号加eosio.code权限</li></ol><h3 id="部署合约"><a href="#部署合约" class="headerlink" title="部署合约"></a>部署合约</h3><p>按照下面图片1，2，3的顺序 部署合约</p><ol><li>登录scatter</li><li>build 合约</li><li>部署合约</li></ol><img src="/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/3.png"><h3 id="执行合约"><a href="#执行合约" class="headerlink" title="执行合约"></a>执行合约</h3><img src="/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/4.png"><ol><li>切成你部署好的合约</li><li>先执行init 方法</li><li>再执行run方法 就一直跑了</li></ol><p>执行完应该如下图</p><img src="/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/5.png"><h3 id="停止合约"><a href="#停止合约" class="headerlink" title="停止合约"></a>停止合约</h3><p>执行 stop方法就行了</p><p>最后放一张我撸的截图 1s一次</p><img src="/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/6.png"><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/">https://igaojin.me/2019/11/01/EIDOS-自动撸空投-不需要开电脑与手机版/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      什么是EIDOS
我感觉就是让大家疯狂干EOS主网，谁干的猛，谁拿的钱就多。。。

下面是老陆写的介绍,EIDOS 自动撸空投详解

官网：http://eidos.one

官方推特：https://twitter.com/EnuMivo

早前消息是说啊，EIDOS 快来到EOS上发空投了，UBI理念的ENU已经死了。

简要回顾一下ENU，一次空投4000多个，一个最多涨到0.5元，批量撸ENU赚几十万的不在少数。

本着宁可做过不可错过的精神，现在开始教大家怎么撸EIDOS。

首先我们先了解空投的规则，用户可以将任意金额的 EOS 转账至 eidosonecoin 这个账户，智能合约
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>区块链小白书fork版</title>
    <link href="https://igaojin.me/2019/10/31/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%B0%8F%E7%99%BD%E4%B9%A6fork%E7%89%88/"/>
    <id>https://igaojin.me/2019/10/31/区块链小白书fork版/</id>
    <published>2019-10-31T05:51:29.000Z</published>
    <updated>2019-11-01T02:57:36.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>李老师又出新书了！</p><blockquote><p>然而，需要注意的是，区块链技术作为金融互联网新技术，不可避免地与投机（或投资）联系在一起，导致的结果是市场上骗局丛生，行业里鱼龙混杂，所以有必要让民众对区块链有正确且有清楚的了解。这就是《区块链小白书》的意义 —— 它就是写给小白的，目的就是为了让小白少走弯路，更是为了让小白不要误入歧途。</p></blockquote><img src="/2019/10/31/区块链小白书fork版/1.png"><p>目的是为了让小白不要误入歧途，但是我看到里面推荐的币却。。。无话可说</p><h2 id="区块链小白书Fork版"><a href="#区块链小白书Fork版" class="headerlink" title="区块链小白书Fork版"></a>区块链小白书Fork版</h2><p>在<a href="https://github.com/xiaolai/blockchainlittlebook.com" rel="external nofollow noopener noreferrer" target="_blank">李老师的基础上</a> fork了一版 <a href="https://github.com/jin10086/blockchainlittlebook.com" rel="external nofollow noopener noreferrer" target="_blank">区块链小白书Fork版</a></p><p>可以直接访问<a href="https://forkblockchainlittlebook.com/" rel="external nofollow noopener noreferrer" target="_blank">https://forkblockchainlittlebook.com/</a> 查看</p><p>修改记录在 <a href="https://github.com/jin10086/blockchainlittlebook.com/commit/33c4ee420047030189698bf586752b22c79111d7" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/jin10086/blockchainlittlebook.com/commit/33c4ee420047030189698bf586752b22c79111d7</a></p><img src="/2019/10/31/区块链小白书fork版/2.png"><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/10/31/区块链小白书fork版/">https://igaojin.me/2019/10/31/区块链小白书fork版/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      背景
李老师又出新书了！

然而，需要注意的是，区块链技术作为金融互联网新技术，不可避免地与投机（或投资）联系在一起，导致的结果是市场上骗局丛生，行业里鱼龙混杂，所以有必要让民众对区块链有正确且有清楚的了解。这就是《区块链小白书》的意义 —— 它就是写给小白的，目的就是为了让小白少走弯路，更是为了让小白不要误入歧途。

目的是为了让小白不要误入歧途，但是我看到里面推荐的币却。。。无话可说

区块链小白书Fork版
在李老师的基础上 fork了一版 区块链小白书Fork版

可以直接访问https://forkblockchainlittlebook.com/ 查看

修改记录在 https:/
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>如何购买BTC</title>
    <link href="https://igaojin.me/2019/10/27/%E5%A6%82%E4%BD%95%E8%B4%AD%E4%B9%B0BTC/"/>
    <id>https://igaojin.me/2019/10/27/如何购买BTC/</id>
    <published>2019-10-27T12:48:10.000Z</published>
    <updated>2019-10-27T13:33:07.239Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近因为 <a href="https://mp.weixin.qq.com/s/fTqleybScxxoE_aXnigk8g" rel="external nofollow noopener noreferrer" target="_blank">习近平：把区块链作为核心技术自主创新重要突破口</a>这篇文章<br>很多人在学习区块链,当然也有很多人在问我如何购买BTC</p><p>先推荐一些学习区块链好的文章以及网站</p><ul><li><p><a href="https://ethfans.org/" rel="external nofollow noopener noreferrer" target="_blank">以太坊爱好者</a> <a href="https://ethfans.org/" rel="external nofollow noopener noreferrer" target="_blank">https://ethfans.org/</a></p><img src="/2019/10/27/如何购买BTC/ethfans.png"></li><li><p><a href="https://mp.weixin.qq.com/s/HJH8M62gORUg_9CjlVkS2A" rel="external nofollow noopener noreferrer" target="_blank">链闻推荐：真正搞懂区块链，从半入门到精通</a></p></li></ul><p>当然学习强国里面也有了视频,也可以在里面看看</p><img src="/2019/10/27/如何购买BTC/xuexiqiangguo_qukuailian.jpeg"><h2 id="如何购买BTC"><a href="#如何购买BTC" class="headerlink" title="如何购买BTC"></a>如何购买BTC</h2><p>首先要说明的是BTC不是一定要购买1个,比特币的最小单位是 0.00000001 （一亿分之一）比特币，称为“1聪”</p><p>所以你200块钱也是可以买BTC的</p><ol><li>打开 <a href="https://www.huobi.vn/zh-cn/topic/invited/?invite_code=tkmv3" rel="external nofollow noopener noreferrer" target="_blank">https://www.huobi.vn/zh-cn/topic/invited/?invite_code=tkmv3</a> （带了我的邀请码</li><li>可以选择邮箱或者手机号注册</li><li>点击身份认证（只要输入姓名以及身份证号码就可以了<img src="/2019/10/27/如何购买BTC/1.png"></li><li>打开 <a href="https://c2c.huobi.vn/zh-cn/one-trade/buy-btc/#total=200" rel="external nofollow noopener noreferrer" target="_blank">https://c2c.huobi.vn/zh-cn/one-trade/buy-btc/#total=200</a>, 选择你要购买的金额付款就可以了</li></ol><img src="/2019/10/27/如何购买BTC/buybtc.png"><p>这样你就买到了BTC,还是蛮简单的吧. 有兴趣的同学可以买100块钱的玩玩</p><p>上面只是对身份进行了初步认证,交易额超过单笔2000 CNY或累计10000 CNY需进行高级认证.(主要的目的是为了防止洗钱)</p><p>如果你需要购买更多的BTC,点击 <a href="https://c2c.huobi.vn/zh-cn/senior/" rel="external nofollow noopener noreferrer" target="_blank">https://c2c.huobi.vn/zh-cn/senior/</a> 就可以进行高级认证了</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/10/27/如何购买BTC/">https://igaojin.me/2019/10/27/如何购买BTC/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      背景
最近因为 习近平：把区块链作为核心技术自主创新重要突破口这篇文章
很多人在学习区块链,当然也有很多人在问我如何购买BTC

先推荐一些学习区块链好的文章以及网站

 * 以太坊爱好者 https://ethfans.org/
   
   
 * 链闻推荐：真正搞懂区块链，从半入门到精通
   
   

当然学习强国里面也有了视频,也可以在里面看看

如何购买BTC
首先要说明的是BTC不是一定要购买1个,比特币的最小单位是 0.00000001 （一亿分之一）比特币，称为“1聪”

所以你200块钱也是可以买BTC的

 1. 打开 https://www.huobi.vn/zh-c
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>爬虫小技巧</title>
    <link href="https://igaojin.me/2019/10/26/%E7%88%AC%E8%99%AB%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>https://igaojin.me/2019/10/26/爬虫小技巧/</id>
    <published>2019-10-26T00:04:00.000Z</published>
    <updated>2019-10-26T00:10:35.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一个爬虫的小技巧"><a href="#一个爬虫的小技巧" class="headerlink" title="一个爬虫的小技巧"></a>一个爬虫的小技巧</h2><p>先看这篇文章</p><p><a href="https://mp.weixin.qq.com/s/_UcSrEqT9Lym0cusA1SLYQ" rel="external nofollow noopener noreferrer" target="_blank">爬信息爬到服务器瘫痪，今日头条的头条搜索成了小网站的噩梦！</a></p><p>可以看到大家都被今日头条的爬虫弄的苦不堪言。。。</p><p>不知道你看完这篇文章有没有学到什么？</p><hr><p>只要你把User-Agent改成 Bytespider,那么你就可以甩锅给头条了（哈哈哈</p><p>把User-Agent 伪装成搜索引擎的，也算一个小技巧（一般大家都欢迎搜索引擎爬取，不容易被封IP）</p><p>当然在爬取的时候还是要注意频率</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/10/26/爬虫小技巧/">https://igaojin.me/2019/10/26/爬虫小技巧/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      一个爬虫的小技巧
先看这篇文章

爬信息爬到服务器瘫痪，今日头条的头条搜索成了小网站的噩梦！

可以看到大家都被今日头条的爬虫弄的苦不堪言。。。

不知道你看完这篇文章有没有学到什么？




只要你把User-Agent改成 Bytespider,那么你就可以甩锅给头条了（哈哈哈

把User-Agent 伪装成搜索引擎的，也算一个小技巧（一般大家都欢迎搜索引擎爬取，不容易被封IP）

当然在爬取的时候还是要注意频率


本文作者：高金
本文地址： https://igaojin.me/2019/10/26/爬虫小技巧/
版权声明：转载请注明出处！
    
    </summary>
    
      <category term="爬虫" scheme="https://igaojin.me/categories/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac catalina 无法删除/usr/bin/下面的文件</title>
    <link href="https://igaojin.me/2019/10/10/Mac-catalina-%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4-usr-bin-%E4%B8%8B%E9%9D%A2%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>https://igaojin.me/2019/10/10/Mac-catalina-无法删除-usr-bin-下面的文件/</id>
    <published>2019-10-10T12:12:17.000Z</published>
    <updated>2019-10-10T12:21:00.442Z</updated>
    
    <content type="html"><![CDATA[<p><code>rm: /usr/bin/python: Operation not permitted</code></p><p>就算用了sudo 也是一样.</p><p>发现是SIP的问题 具体可以见 <a href="https://www.jianshu.com/p/82e43aff03fd" rel="external nofollow noopener noreferrer" target="_blank">Mac OS X 10.11+ Rootless 介绍</a></p><blockquote><p>尝试关闭 Rootless。重启电脑一直按住 Command+R，直到进入恢复模式，打开Terminal。<br>输入 <code>csrutil disable</code><br>重启即可。这样就关掉了Sip 如果要恢复默认，那么只要输入 <code>csrutil enable</code></p></blockquote><p>发现继续报错</p><p><code>Read-only file system</code></p><p>然后 需要先执行</p><p><code>sudo mount -uw /</code></p><p>再操作就可以了</p><p>记得操作完把 sip重新打开</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>所以 最后步骤是 先关掉sip,然后<code>sudo mount -uw /</code> 就可以啦</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/10/10/Mac-catalina-无法删除-usr-bin-下面的文件/">https://igaojin.me/2019/10/10/Mac-catalina-无法删除-usr-bin-下面的文件/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      rm: /usr/bin/python: Operation not permitted

就算用了sudo 也是一样.

发现是SIP的问题 具体可以见 Mac OS X 10.11+ Rootless 介绍

尝试关闭 Rootless。重启电脑一直按住 Command+R，直到进入恢复模式，打开Terminal。
输入 csrutil disable
重启即可。这样就关掉了Sip 如果要恢复默认，那么只要输入 csrutil enable

发现继续报错

Read-only file system

然后 需要先执行

sudo mount -uw /

再操作就可以了

记得操作完把
    
    </summary>
    
      <category term="问题" scheme="https://igaojin.me/categories/%E9%97%AE%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>区块链游戏设计</title>
    <link href="https://igaojin.me/2019/09/06/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"/>
    <id>https://igaojin.me/2019/09/06/区块链游戏设计/</id>
    <published>2019-09-06T07:10:32.000Z</published>
    <updated>2019-09-06T07:23:47.163Z</updated>
    
    <content type="html"><![CDATA[<h1 id="区块链游戏设计"><a href="#区块链游戏设计" class="headerlink" title="区块链游戏设计"></a>区块链游戏设计</h1><h2 id="大概规则"><a href="#大概规则" class="headerlink" title="大概规则"></a>大概规则</h2><p>在Dice为基础上加上一些好的玩法…</p><h3 id="玩家不会输钱"><a href="#玩家不会输钱" class="headerlink" title="玩家不会输钱"></a>玩家不会输钱</h3><p>玩家使用EOS来玩游戏…</p><p>输了的EOS只是会延迟30天返回给他（这个EOS 可以拿去借贷 投票等等 获得无风险的EOS）</p><p>赢了的话 可以获得TOKEN</p><h3 id="按照TOKEN-分红"><a href="#按照TOKEN-分红" class="headerlink" title="按照TOKEN 分红"></a>按照TOKEN 分红</h3><p>每周分红一次. 按照总的TOKEN分红.</p><h3 id="TOKEN会过期"><a href="#TOKEN会过期" class="headerlink" title="TOKEN会过期"></a>TOKEN会过期</h3><p>多久没有玩以后，TOKEN会自动失效.</p><p>比如每天token 减少5%之类的（某个人的总量）</p><p>但是他只要当天玩了5%以上的 交易量，就不消减.</p><p>当然也可以用EOS购买保险.(防止过期的.)，这个保险的价格如何设置再想想</p><h3 id="pooltogether-的玩法"><a href="#pooltogether-的玩法" class="headerlink" title="pooltogether 的玩法"></a>pooltogether 的玩法</h3><p><a href="https://www.pooltogether.us/pools/0xb7896fce748396EcFC240F5a0d3Cc92ca42D7d84?page=pool" rel="external nofollow noopener noreferrer" target="_blank">pooltogether 官网</a></p><p><a href="https://www.theblockbeats.com/news/3237?from=timeline&amp;isappinstalled=0" rel="external nofollow noopener noreferrer" target="_blank">以太坊上的无损彩票</a></p><p>本质上就是拿到ETH,然后拿去借贷，用利息来发彩票大奖</p><p>如果基于EOS做的话，可以直接把钱丢进<a href="https://eosrex.io/" rel="external nofollow noopener noreferrer" target="_blank">REX</a>里面去</p><p>主要逻辑是：</p><p>用户选择用EOS来玩，每0.1个EOS生成一张彩票</p><p>然后这个EOS全部丢进了REX里面,</p><p>7天一个周期，里面的利息自动到奖池里面</p><p>到期后开奖，把97%的钱 都分给大奖获得者.</p><p>所以需要做的是</p><h4 id="与REX合约的交互"><a href="#与REX合约的交互" class="headerlink" title="与REX合约的交互"></a>与REX合约的交互</h4><p>在合约内如何自动把钱转进去、转出来，如何自动提取利息</p><ol><li>无法代理，所以只能用户吧钱转到我们合约，合约再丢进REX合约.</li><li><p>用户提现的时候 需要检查是否大于4天.因为REX合约是判断4天才能让你提现的.</p><ul><li><p>能不能自动代理过去,钱不经过合约，但是利息给合约，这样对用户来说 最安全</p></li></ul></li></ol><h4 id="随机数的生成"><a href="#随机数的生成" class="headerlink" title="随机数的生成"></a>随机数的生成</h4><h4 id="代理投票？这个也是利息的一种"><a href="#代理投票？这个也是利息的一种" class="headerlink" title="代理投票？这个也是利息的一种"></a>代理投票？这个也是利息的一种</h4><h4 id="合约一些细节"><a href="#合约一些细节" class="headerlink" title="合约一些细节."></a>合约一些细节.</h4><p>升级后，Pool Together 允许玩家在任意时间内买票或是提现，取消了以往每轮奖池内特定的时间限制。此外，玩家在购得彩票后，只要没有退出，会自动进入后续奖池，修改了原版玩家需在每轮奖池结束后提现、重新购买彩票的不合理设定。</p><h2 id="游戏流程"><a href="#游戏流程" class="headerlink" title="游戏流程"></a>游戏流程</h2><h3 id="用户玩游戏"><a href="#用户玩游戏" class="headerlink" title="用户玩游戏"></a>用户玩游戏</h3><ul><li>用户转EOS到我们合约</li><li>我们先调用deposit充进REX合约</li><li>调用buyRex买到rex，算出用户得到了多少rex</li><li>存入用户充进的EOS数量以及rex数量</li><li>算出用户的彩票数.</li><li>算出总的彩票数</li></ul><h3 id="开奖"><a href="#开奖" class="headerlink" title="开奖"></a>开奖</h3><ul><li>调用sellrex卖出所有的rex</li><li>拿到赚到的EOS，存入奖池</li><li>再放进去存着</li><li>根据奖劵总数，算出得奖用户的号码.</li><li>给某个用户标记得奖.(需要自行领取.)</li><li>领取后奖池归零.</li></ul><h3 id="用户退出"><a href="#用户退出" class="headerlink" title="用户退出."></a>用户退出.</h3><ul><li>退出的金额.（需要判断大于4天.</li><li>sellrex卖出他的rex，利息放奖池</li><li>减去他的奖劵</li><li>退还他的EOS</li></ul><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/09/06/区块链游戏设计/">https://igaojin.me/2019/09/06/区块链游戏设计/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      区块链游戏设计
大概规则
在Dice为基础上加上一些好的玩法…

玩家不会输钱
玩家使用EOS来玩游戏…

输了的EOS只是会延迟30天返回给他（这个EOS 可以拿去借贷 投票等等 获得无风险的EOS）

赢了的话 可以获得TOKEN

按照TOKEN 分红
每周分红一次. 按照总的TOKEN分红.

TOKEN会过期
多久没有玩以后，TOKEN会自动失效.

比如每天token 减少5%之类的（某个人的总量）

但是他只要当天玩了5%以上的 交易量，就不消减.

当然也可以用EOS购买保险.(防止过期的.)，这个保险的价格如何设置再想想

pooltogether 的玩法
pooltoget
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>垃圾WiFi随便连,再也不怕隐私泄露啦</title>
    <link href="https://igaojin.me/2019/04/14/%E5%9E%83%E5%9C%BEWiFi%E9%9A%8F%E4%BE%BF%E8%BF%9E,%E5%86%8D%E4%B9%9F%E4%B8%8D%E6%80%95%E9%9A%90%E7%A7%81%E6%B3%84%E9%9C%B2%E5%95%A6/"/>
    <id>https://igaojin.me/2019/04/14/垃圾WiFi随便连,再也不怕隐私泄露啦/</id>
    <published>2019-04-13T23:40:54.000Z</published>
    <updated>2019-05-05T06:56:45.344Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>朋友圈有个朋友 出差的时候连了某酒店的WiFi,然后qq被盗了,自动发菠菜广告…</p><h2 id="WiFi为什么会泄露你的隐私"><a href="#WiFi为什么会泄露你的隐私" class="headerlink" title="WiFi为什么会泄露你的隐私?"></a>WiFi为什么会泄露你的隐私?</h2><img src="/2019/04/14/垃圾WiFi随便连,再也不怕隐私泄露啦/0.jpg"><p>上面是画的一张你通过WiFi上网的图…</p><p>你的所有流量都会经过WiFi那边,只要我在WiFi这边记录一下…</p><p>那么你的所有上网记录都会被我看到…</p><p>当然也没有这么恐怖…(现在很多网站都用了HTTPS加密,相当于把内容加密了,)</p><h3 id="HTTP-与-HTTPS"><a href="#HTTP-与-HTTPS" class="headerlink" title="HTTP 与 HTTPS"></a>HTTP 与 HTTPS</h3><blockquote><p>HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了SSL（Secure Sockets Layer）协议用于对HTTP协议传输的数据进行加密，从而就诞生了HTTPS。</p></blockquote><p>具体细节可以看这篇文章<a href="https://juejin.im/entry/58d7635e5c497d0057fae036" rel="external nofollow noopener noreferrer" target="_blank">HTTP 与 HTTPS 的区别</a></p><h3 id="看一个HTTP的例子"><a href="#看一个HTTP的例子" class="headerlink" title="看一个HTTP的例子"></a>看一个HTTP的例子</h3><img src="/2019/04/14/垃圾WiFi随便连,再也不怕隐私泄露啦/1.jpg"><p>上面那张图是data5u的登录页面(找了半天才找到一个http登录，且是明文密码传输的例子)</p><p>如果你连接了我的WiFi 并且登录了data5u这个网站的话,那么你的账号以及密码已经被我知道了…</p><h3 id="不仅仅是HTTPS"><a href="#不仅仅是HTTPS" class="headerlink" title="不仅仅是HTTPS"></a>不仅仅是HTTPS</h3><p>当然有些公司 为了更加保护用户隐私不被第三方抓取,会使用自有通信协议…</p><p>如微信的:<a href="https://github.com/WeMobileDev/article/blob/master/%E5%9F%BA%E4%BA%8ETLS1.3%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%AE%89%E5%85%A8%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AEmmtls%E4%BB%8B%E7%BB%8D.md" rel="external nofollow noopener noreferrer" target="_blank">基于TLS1.3的微信安全通信协议mmtls介绍</a></p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>所以当你连上了某个WiFi的时候，你的隐私是否被泄漏，主要是看你访问的网站的安全性…</p><p>那么我们能不能先自己加密一次，然后再发给目标网站呢?</p><p>这样，不管他网站设计的怎么样，我可以保证我发送与接收的数据都是经过加密的。</p><h2 id="Shadowsocks"><a href="#Shadowsocks" class="headerlink" title="Shadowsocks"></a>Shadowsocks</h2><p>Shadowsocks 很多人用他可能都是为了翻越长城…</p><p>但是其实他还可以保护隐私用…</p><h3 id="Shadowsocks的原理"><a href="#Shadowsocks的原理" class="headerlink" title="Shadowsocks的原理"></a>Shadowsocks的原理</h3><blockquote><p>Shadowsocks的运行原理与其他代理工具基本相同，使用特定的中转服务器完成数据传输。例如，用户无法直接访问Google，但代理服务器可以访问，且用户可以直接连接代理服务器，那么用户就可以通过特定软件连接代理服务器，然后由代理服务器获取网站内容并回传给用户，从而实现代理上网的效果。另外用户在成功连接到服务器后，客户端会在本机构建一个本地Socks5代理（或VPN、透明代理等）。浏览网络时，网络流量需要先通过本地代理传递到客户端软件，然后才能发送到服务器端，反之亦然。</p></blockquote><blockquote><p><strong>为防止流量被识别和拦截，服务器和客户端软件会要求提供密码和加密方式，并且在数据传输期间会对传入和传出流量进行加密。</strong></p></blockquote><p>以上内容来自 <a href="https://zh.wikipedia.org/wiki/Shadowsocks" rel="external nofollow noopener noreferrer" target="_blank">https://zh.wikipedia.org/wiki/Shadowsocks</a></p><p>可以看到 Shadowsocks 完全符合我们的要求.</p><p>他会对传入和传出流量进行加密.</p><h3 id="安装以及使用"><a href="#安装以及使用" class="headerlink" title="安装以及使用"></a>安装以及使用</h3><p>可以买一台国内的服务器，然后安装Shadowsocks就可以了.</p><p>具体安装教程请看<a href="https://github.com/shadowsocks/shadowsocks/wiki/Shadowsocks-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" rel="external nofollow noopener noreferrer" target="_blank">Shadowsocks 使用说明</a></p><p>然后在你连接上公共WiFi或者你觉得不安全的WiFi的时候,打开Shadowsocks 就可以了…</p><p>如果你觉得运营商的网络也不安全的话,也可以在运营商网络使用Shadowsocks</p><h3 id="使用Shadowsocks-与不使用Shadowsocks的示意图"><a href="#使用Shadowsocks-与不使用Shadowsocks的示意图" class="headerlink" title="使用Shadowsocks 与不使用Shadowsocks的示意图"></a>使用Shadowsocks 与不使用Shadowsocks的示意图</h3><p>注意 这个图里面都省掉了你上网的方式(如WiFi 4G 等等…)</p><img src="/2019/04/14/垃圾WiFi随便连,再也不怕隐私泄露啦/不使用Shadowsocks.jpg"> <img src="/2019/04/14/垃圾WiFi随便连,再也不怕隐私泄露啦/使用Shadowsocks.jpg"><p>可以看到当你使用了Shadowsocks后,你访问的网址以及内容全部都是加密的…</p><p>虽然还能监听到,但是监听到的是 一串乱码…从而可以保护你的隐私</p><hr><p>本文发自 阿桑奇被捕后.</p><p>为了致敬阿桑奇，也为了我们自身的隐私</p><p>特意送出100本 <a href="https://book.douban.com/subject/27054249/" rel="external nofollow noopener noreferrer" target="_blank">密码朋克</a>,也希望你看完书后,把书送给你的好朋友.</p><p>密码朋克介绍:</p><blockquote><p>互联网已经在世界各地掀起了革命，然而全面的打击也正在展开。随着整个社会向互联网迁移，大规模监控计划也正在向全球部署。我们的文明已经来到一个十字路口。道路的一边通往一个承诺“弱者要隐私，强 者要透明”的未来，而另一边则通往一个极权的互联网，在那里，全人类的权力被转移给不受问责的间谍机构综合体及其跨国公司盟友。</p></blockquote><blockquote><p>密码朋克是一群倡导大规模使用强密码术以保护我们的基本自由免遭攻击的活动家。维基解密的主编和创始人朱利安·阿桑奇自1990年代以来一直是秘密朋克运动的主要领袖之一。现在，在这本新书中，阿桑奇将与一群来自赛博空间战场前线的思想家和活动家一起探讨，互联网终将解放我们，还是奴役所有人</p></blockquote><p>送出规则是:</p><p>向维基解密捐赠（捐赠金额不限)</p><p><a href="https://defend.wikileaks.org/donate/?from=groupmessage&amp;isappinstalled=0" rel="external nofollow noopener noreferrer" target="_blank">维基解密捐赠地址</a></p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/04/14/垃圾WiFi随便连,再也不怕隐私泄露啦/">https://igaojin.me/2019/04/14/垃圾WiFi随便连,再也不怕隐私泄露啦/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      背景
朋友圈有个朋友 出差的时候连了某酒店的WiFi,然后qq被盗了,自动发菠菜广告…

WiFi为什么会泄露你的隐私?
上面是画的一张你通过WiFi上网的图…

你的所有流量都会经过WiFi那边,只要我在WiFi这边记录一下…

那么你的所有上网记录都会被我看到…

当然也没有这么恐怖…(现在很多网站都用了HTTPS加密,相当于把内容加密了,)

HTTP 与 HTTPS
HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全，为了保证这些隐私数据能加密传输，于是网景公司设计了SSL（Secure Sockets Layer）协议用于对HTTP协议传输的
    
    </summary>
    
      <category term="安全" scheme="https://igaojin.me/categories/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Shadowsocks" scheme="https://igaojin.me/tags/Shadowsocks/"/>
    
      <category term="WiFi" scheme="https://igaojin.me/tags/WiFi/"/>
    
  </entry>
  
  <entry>
    <title>1080TI 不支持OPENCL解决办法</title>
    <link href="https://igaojin.me/2019/02/21/1080TI-%E4%B8%8D%E6%94%AF%E6%8C%81OPENCL%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://igaojin.me/2019/02/21/1080TI-不支持OPENCL解决办法/</id>
    <published>2019-02-20T16:41:20.000Z</published>
    <updated>2019-05-05T06:51:41.765Z</updated>
    
    <content type="html"><![CDATA[<p>最近买了一块1080TI,准备用来跑跑机器学习（顺带打打游戏…)</p><p>然后发现装好驱动,cuda后</p><p>使用pyopencl的时候，竟然找不到GPU</p><p>然后使用 GPU-Z 测试的时候，发现果然不支持 OPENCL</p><img src="/2019/02/21/1080TI-不支持OPENCL解决办法/1.jpg"><p>开始以为是自己的板子有问题…</p><p>后面将显卡驱动降级为 471.22这个版本就好了(2018-11-29发布的)</p><p>结合网上看到的一些信息，猜测是 NVIDIA 自己弄了一个 pycuda,可以替换pyopencl的东西…</p><p>所以后续的驱动就不支持pyopencl了…</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/02/21/1080TI-不支持OPENCL解决办法/">https://igaojin.me/2019/02/21/1080TI-不支持OPENCL解决办法/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      最近买了一块1080TI,准备用来跑跑机器学习（顺带打打游戏…)

然后发现装好驱动,cuda后

使用pyopencl的时候，竟然找不到GPU

然后使用 GPU-Z 测试的时候，发现果然不支持 OPENCL

开始以为是自己的板子有问题…

后面将显卡驱动降级为 471.22这个版本就好了(2018-11-29发布的)

结合网上看到的一些信息，猜测是 NVIDIA 自己弄了一个 pycuda,可以替换pyopencl的东西…

所以后续的驱动就不支持pyopencl了…


本文作者：高金
本文地址： https://igaojin.me/2019/02/21/1080TI-不支持OPE
    
    </summary>
    
      <category term="奇怪的BUG" scheme="https://igaojin.me/categories/%E5%A5%87%E6%80%AA%E7%9A%84BUG/"/>
    
    
      <category term="opencl" scheme="https://igaojin.me/tags/opencl/"/>
    
  </entry>
  
  <entry>
    <title>5分钟搭建一个自己的以太坊api</title>
    <link href="https://igaojin.me/2019/02/13/5%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BB%A5%E5%A4%AA%E5%9D%8Aapi/"/>
    <id>https://igaojin.me/2019/02/13/5分钟搭建一个自己的以太坊api/</id>
    <published>2019-02-13T15:54:58.000Z</published>
    <updated>2019-05-05T06:38:27.297Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><img src="/2019/02/13/5分钟搭建一个自己的以太坊api/1.jpg"><p>这是很早之前吐槽infura api的一个朋友圈</p><p>当时应该是为了薅羊毛,然后卡在了infura这个api上面…</p><p>infura api 有个神奇的限制…</p><p>假如某个账号，向其他账号批量发起转账…(你写个程序跑一下很快就好了)</p><p>但是 infura 每次只会给你广播1笔交易…（1笔成交后，下一笔才会广播出去</p><p>也就是说,假如批量发起100笔转账的话，最少也需要100个区块才会成交…</p><p>当然 假如不敢时间的话，慢慢来也是无所谓的…</p><p>敢时间的话，你估计就骂人了…</p><p>不过目前 市面上能用的 公开的api节点好像就 infura有提供服务…</p><p>其他的 myetherwallet,imtoken,等等肯定有自己的（可以抓包知道他的api地址…) 不过这种用的人多，自然不是很快…</p><p>所以自己搭建节点是有必要的</p><h2 id="搭建轻节点"><a href="#搭建轻节点" class="headerlink" title="搭建轻节点"></a>搭建轻节点</h2><p>搭建全节点的话，如果就偶尔用一下，就很不实际了.</p><ol><li>如果用的时候 再同步，肯定来不及</li><li>如果一直放一台服务器同步，这个成本也不少</li></ol><p>一番搜索，找到了解决办法…parity的轻节点</p><h2 id="如何搭建parity轻节点"><a href="#如何搭建parity轻节点" class="headerlink" title="如何搭建parity轻节点"></a>如何搭建parity轻节点</h2><ol><li><a href="https://github.com/paritytech/parity-ethereum/releases" rel="external nofollow noopener noreferrer" target="_blank">根据自己平台下载parity</a></li><li><code>parity --light</code> 在cmd输入下面的命令（开启parity 轻节点) <a href="https://wiki.parity.io/Light-Client" rel="external nofollow noopener noreferrer" target="_blank">文档地址</a></li></ol><p>大概5分钟就能同步好</p><p>然后就可以连接本地的 <strong><a href="http://127.0.0.1:8545" rel="external nofollow noopener noreferrer" target="_blank">http://127.0.0.1:8545</a></strong> 使用了</p><p>如果要改默认的端口以及监听的host，可以看 <a href="https://wiki.parity.io/Configuring-Parity-Ethereum" rel="external nofollow noopener noreferrer" target="_blank">https://wiki.parity.io/Configuring-Parity-Ethereum</a></p><h2 id="python-使用示例"><a href="#python-使用示例" class="headerlink" title="python 使用示例"></a>python 使用示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">from web3 import Web3, HTTPProvider</span><br><span class="line"></span><br><span class="line">RPCAddress = &quot;http://127.0.0.1:8545&quot;</span><br><span class="line"></span><br><span class="line">w3 = Web3(HTTPProvider(RPCAddress))</span><br><span class="line"></span><br><span class="line">balance = w3.eth.getBalance(&apos;0xAD5723C4f7B4C478E09688f96a7A477B0D1196fd&apos;)</span><br></pre></td></tr></table></figure><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/02/13/5分钟搭建一个自己的以太坊api/">https://igaojin.me/2019/02/13/5分钟搭建一个自己的以太坊api/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      背景
这是很早之前吐槽infura api的一个朋友圈

当时应该是为了薅羊毛,然后卡在了infura这个api上面…

infura api 有个神奇的限制…

假如某个账号，向其他账号批量发起转账…(你写个程序跑一下很快就好了)

但是 infura 每次只会给你广播1笔交易…（1笔成交后，下一笔才会广播出去

也就是说,假如批量发起100笔转账的话，最少也需要100个区块才会成交…

当然 假如不敢时间的话，慢慢来也是无所谓的…

敢时间的话，你估计就骂人了…

不过目前 市面上能用的 公开的api节点好像就 infura有提供服务…

其他的 myetherwallet,imtoken
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="以太坊" scheme="https://igaojin.me/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
      <category term="parity轻节点" scheme="https://igaojin.me/tags/parity%E8%BD%BB%E8%8A%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>scatter 导入BOS账号</title>
    <link href="https://igaojin.me/2019/01/27/scatter-%E5%AF%BC%E5%85%A5BOS%E8%B4%A6%E5%8F%B7/"/>
    <id>https://igaojin.me/2019/01/27/scatter-导入BOS账号/</id>
    <published>2019-01-27T11:02:19.000Z</published>
    <updated>2019-05-05T07:05:03.985Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置语言为中文"><a href="#设置语言为中文" class="headerlink" title="设置语言为中文"></a>设置语言为中文</h2><p>选择设置</p><img src="/2019/01/27/scatter-导入BOS账号/0.jpg"><p>然后 Language,在选择中文.</p><h2 id="创建bos-网络"><a href="#创建bos-网络" class="headerlink" title="创建bos 网络"></a>创建bos 网络</h2><p>点击设置-&gt; 网络 -&gt; 新建</p><img src="/2019/01/27/scatter-导入BOS账号/1.jpg"><p>然后名称 设置为 <strong>bosmainnet</strong></p><p>域名或者ip地址设置为 <strong>hapi.bos.eosrio.io</strong></p><p>端口设置为 <strong>443</strong></p><p>chainid 设置为 <strong>d5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86</strong></p><p>保存.</p><h2 id="导入私钥-如果你之前有导入过就不需要重新导入"><a href="#导入私钥-如果你之前有导入过就不需要重新导入" class="headerlink" title="导入私钥(如果你之前有导入过就不需要重新导入)"></a>导入私钥(如果你之前有导入过就不需要重新导入)</h2><p>点击 主页面的 密钥对-&gt;新建</p><img src="/2019/01/27/scatter-导入BOS账号/2.jpg"><p>名称自己随便写一个</p><p>直接吧私钥粘贴在 私钥的地方</p><p>然后点击保存</p><h2 id="创建身份"><a href="#创建身份" class="headerlink" title="创建身份"></a>创建身份</h2><p>点击 主页面的身份-&gt;新建</p><img src="/2019/01/27/scatter-导入BOS账号/3.jpg"><p>上面选择刚才创建好的网络</p><p>下面选择你刚刚导入私钥 输入的名称</p><p>然后点击导入即可…</p><p>记得选择 @active的.</p><img src="/2019/01/27/scatter-导入BOS账号/4.jpg"><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/01/27/scatter-导入BOS账号/">https://igaojin.me/2019/01/27/scatter-导入BOS账号/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      设置语言为中文
选择设置

然后 Language,在选择中文.

创建bos 网络
点击设置-&gt; 网络 -&gt; 新建

然后名称 设置为 bosmainnet

域名或者ip地址设置为 hapi.bos.eosrio.io

端口设置为 443

chainid 设置为 d5a3d18fbb3c084e3b1f3fa98c21014b5f3db536cc15d08f9f6479517c6a3d86

保存.

导入私钥(如果你之前有导入过就不需要重新导入)
点击 主页面的 密钥对-&gt;新建

名称自己随便写一个

直接吧私钥粘贴在 私钥的地方

然后点击保存

创建身份
点击 主页面的身份-&gt;新
    
    </summary>
    
      <category term="EOS" scheme="https://igaojin.me/categories/EOS/"/>
    
    
  </entry>
  
  <entry>
    <title>如何快速的将json转成excel</title>
    <link href="https://igaojin.me/2019/01/20/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E7%9A%84%E5%B0%86json%E8%BD%AC%E6%88%90excel/"/>
    <id>https://igaojin.me/2019/01/20/如何快速的将json转成excel/</id>
    <published>2019-01-20T05:18:49.000Z</published>
    <updated>2019-01-20T05:24:28.459Z</updated>
    
    <content type="html"><![CDATA[<p>首先安装 pandas</p><p><code>pip install pandas</code></p><p>然后就很简单了…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line">df = pd.read_json(&apos;a.json&apos;)</span><br><span class="line">df.to_excel(&quot;a.xlsx&quot;)</span><br></pre></td></tr></table></figure><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2019/01/20/如何快速的将json转成excel/">https://igaojin.me/2019/01/20/如何快速的将json转成excel/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      首先安装 pandas

pip install pandas

然后就很简单了…

1
2
3
4


import pandas as pd

df = pd.read_json(&#39;a.json&#39;)
df.to_excel(&quot;a.xlsx&quot;)



本文作者：高金
本文地址： https://igaojin.me/2019/01/20/如何快速的将json转成excel/
版权声明：转载请注明出处！
    
    </summary>
    
      <category term="python" scheme="https://igaojin.me/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>EOS 如何最低成本挖矿.</title>
    <link href="https://igaojin.me/2018/12/21/EOS-%E5%A6%82%E4%BD%95%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E6%8C%96%E7%9F%BF/"/>
    <id>https://igaojin.me/2018/12/21/EOS-如何最低成本挖矿/</id>
    <published>2018-12-21T05:42:20.000Z</published>
    <updated>2019-05-05T07:08:09.032Z</updated>
    
    <content type="html"><![CDATA[<h2 id="挖矿"><a href="#挖矿" class="headerlink" title="挖矿?"></a>挖矿?</h2><p>什么叫挖矿呢？</p><p>挖矿是发现玩某bocai游戏,可以套利…然后用程序来玩…</p><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><p>如 下面是betdice的一张图</p><img src="/2018/12/21/EOS-如何最低成本挖矿/0.jpg"><p>可以看到赔率是 1.036,中奖概率是95%</p><p>则我可以算出来 我玩1个EOS理论上输多少EOS <code>1.036*0.95=0.9842</code> <code>1-0.9842=0.0158</code></p><p>也就是算出来我玩一个EOS,理论上输0.0158个EOS</p><p>再减掉 0.1%的邀请奖励 则 我玩一个EOS,理论上输<code>0.0158-0.001=0.0148</code>个EOS<br><img src="/2018/12/21/EOS-如何最低成本挖矿/1.jpg"></p><p>当然还有VIP奖励，以及玩一次每小时可以抽一次奖啊,以及排位奖励等等…</p><p>理论上我的成本就会更少…</p><p>我玩1个EOS的话可以获得 <strong>1.5625</strong>个代币</p><img src="/2018/12/21/EOS-如何最低成本挖矿/2.jpg"><p>也就是说 我用0.0148个EOS 换了1.5625个代币…</p><p>那么只要 <code>0.0148/1.5625=0.009472</code> 代币的价格大于 0.009472的话，那么我是可以一直套利的…</p><p>这上面就是挖矿了.</p><h2 id="不仅仅是价格"><a href="#不仅仅是价格" class="headerlink" title="不仅仅是价格"></a>不仅仅是价格</h2><p>上面计算了是否值的挖的公式…</p><p>但是你的实际成本会比这个更高…</p><p>如果你需要跑到和概率差不多值的话，那么你最少要玩个几千吧…</p><p>也就是你需要有一定的本金…最简单的方式就是每次投注你本金的1%…当然也可以参考凯利公式</p><h2 id="CPU也是成本"><a href="#CPU也是成本" class="headerlink" title="CPU也是成本"></a>CPU也是成本</h2><p>因为挖矿需要与合约交互多次,所以,CPU也是必须的…</p><p>而特别是最近CPU价格很高…大概50EOS,才能租10000EOS 一天…</p><p>这个也需要算进成本,你会发现…赚的钱 都给租CPU的人赚过去了…</p><h2 id="合约挖矿"><a href="#合约挖矿" class="headerlink" title="合约挖矿"></a>合约挖矿</h2><p>如何让别人帮你出CPU呢?</p><p>你每次投注获胜的话,项目方都会给你打钱(你赚的钱.)<br><img src="/2018/12/21/EOS-如何最低成本挖矿/3.jpg"></p><p>那么你可以让这个玩的账号变成一个合约…</p><p>当发现是某个游戏项目方给你打钱的时候,你直接发起一笔玩的操作…</p><p>这样，这个CPU都是由 给你打钱的项目方出了…(这样你就可以不需要CPU来挖矿了)</p><p>当然 为了让挖矿更好的话,你可以设置余额低于某个值就不挖了…</p><p>或者玩了多少把就不玩了…</p><p>也可以加一个方法,可以随时停止游戏…</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2018/12/21/EOS-如何最低成本挖矿/">https://igaojin.me/2018/12/21/EOS-如何最低成本挖矿/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      挖矿?
什么叫挖矿呢？

挖矿是发现玩某bocai游戏,可以套利…然后用程序来玩…

举个例子
如 下面是betdice的一张图

可以看到赔率是 1.036,中奖概率是95%

则我可以算出来 我玩1个EOS理论上输多少EOS 1.036*0.95=0.9842 1-0.9842=0.0158

也就是算出来我玩一个EOS,理论上输0.0158个EOS

再减掉 0.1%的邀请奖励 则 我玩一个EOS,理论上输0.0158-0.001=0.0148个EOS


当然还有VIP奖励，以及玩一次每小时可以抽一次奖啊,以及排位奖励等等…

理论上我的成本就会更少…

我玩1个EOS的话可以获得 1
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="EOS" scheme="https://igaojin.me/tags/EOS/"/>
    
  </entry>
  
  <entry>
    <title>EOS合约内查询其他表</title>
    <link href="https://igaojin.me/2018/12/15/EOS%E5%90%88%E7%BA%A6%E5%86%85%E6%9F%A5%E8%AF%A2%E5%85%B6%E4%BB%96%E8%A1%A8/"/>
    <id>https://igaojin.me/2018/12/15/EOS合约内查询其他表/</id>
    <published>2018-12-15T03:43:34.000Z</published>
    <updated>2019-05-05T07:13:01.681Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近在准备在一款游戏…</p><p>需要发牌…(涉及到发牌这种游戏，如果需要公平性做的很好的话，需要考虑下面几个问题</p><ol><li>生成牌的随机数不能被预测</li><li>只有玩家自己才能看到自己的牌</li><li>庄家玩法看到其他人的牌</li></ol><h2 id="随机数生成"><a href="#随机数生成" class="headerlink" title="随机数生成"></a>随机数生成</h2><p>随机数还是使用2段延时+用户账号来随机出来的</p><h2 id="只有玩家能看到自己的牌"><a href="#只有玩家能看到自己的牌" class="headerlink" title="只有玩家能看到自己的牌"></a>只有玩家能看到自己的牌</h2><p>使用用户的公钥加密用户的牌就可以了…(EOS目前没有现成的代码,需要自己写…)</p><h2 id="庄家看不到其他人的牌"><a href="#庄家看不到其他人的牌" class="headerlink" title="庄家看不到其他人的牌"></a>庄家看不到其他人的牌</h2><p>首先，如果没有公共牌的话，则庄家只需要在玩家打出牌的时候，验证下他是否有这张牌就可以了…</p><h3 id="怎么验证呢？"><a href="#怎么验证呢？" class="headerlink" title="怎么验证呢？"></a>怎么验证呢？</h3><ul><li><p>零知识证明 感觉可以，但是好像代码会比较复杂…而且密码也学的不好…</p></li><li><p>把他的牌存在某个表里面…(然后他打的时候，验证下…)</p></li></ul><p>但是这样就有一个问题，那就是别人也可以直接查这个表，就能拿到每个人的牌了…</p><p>也就可以作弊了…(当然，开发者肯定更容易作弊…)</p><p>然后和朋友聊天的时候，了解其实可以让某个表不生成abi,这样的话，外部就会无法访问到这个表了…</p><img src="/2018/12/15/EOS合约内查询其他表/0.jpg"><p>吧abi这行删掉，发现确实外部无法访问到这个表…</p><h2 id="但是通过合约调用呢？"><a href="#但是通过合约调用呢？" class="headerlink" title="但是通过合约调用呢？"></a>但是通过合约调用呢？</h2><img src="/2018/12/15/EOS合约内查询其他表/1.jpg"><p>定义了同样的数据结构,然后可以发现,在合约内就可以调用了…</p><h3 id="测试-改变数据位置"><a href="#测试-改变数据位置" class="headerlink" title="测试 改变数据位置"></a>测试 改变数据位置</h3><p>发现拿到的数据就错了…(所以如果要拿到正确的数据的话，需要和 原来的数据定义一模一样)<br><img src="/2018/12/15/EOS合约内查询其他表/2.jpg"></p><h3 id="测试-删除一个字段"><a href="#测试-删除一个字段" class="headerlink" title="测试 删除一个字段"></a>测试 删除一个字段</h3><p>发现拿到的数据错了…但是还是可以查到数据<br><img src="/2018/12/15/EOS合约内查询其他表/3.jpg"></p><h3 id="测试-删除主键"><a href="#测试-删除主键" class="headerlink" title="测试 删除主键"></a>测试 删除主键</h3><p>会编译无法通过</p><h3 id="测试-随便定义一个主键"><a href="#测试-随便定义一个主键" class="headerlink" title="测试 随便定义一个主键"></a>测试 随便定义一个主键</h3><p>发现拿到的数据错了…但是还是可以查到数据<br><img src="/2018/12/15/EOS合约内查询其他表/4.jpg"></p><h2 id="测试-拿到的字段-比原来的多"><a href="#测试-拿到的字段-比原来的多" class="headerlink" title="测试 拿到的字段 比原来的多"></a>测试 拿到的字段 比原来的多</h2><p>编译可以过，但是查询会报错…<br><img src="/2018/12/15/EOS合约内查询其他表/5.jpg"></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>所以使用去掉abi的方法是可以的…</p><p>前提是那段存数据的表 不开源，并且可以定义差不多的几个字段，然后每个字段都加密。。。</p><p>让那些想拿你数据的人有机会会拿错,并且每次存在哪个字段都不随机的…</p><p>当然这种方式还是防止不了大神。。。毕竟有人直接看wasm的代码。。。</p><p>最好的方式还是使用 零知识证明 等等…（学密码学去了…</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2018/12/15/EOS合约内查询其他表/">https://igaojin.me/2018/12/15/EOS合约内查询其他表/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      背景
最近在准备在一款游戏…

需要发牌…(涉及到发牌这种游戏，如果需要公平性做的很好的话，需要考虑下面几个问题

 1. 生成牌的随机数不能被预测
 2. 只有玩家自己才能看到自己的牌
 3. 庄家玩法看到其他人的牌

随机数生成
随机数还是使用2段延时+用户账号来随机出来的

只有玩家能看到自己的牌
使用用户的公钥加密用户的牌就可以了…(EOS目前没有现成的代码,需要自己写…)

庄家看不到其他人的牌
首先，如果没有公共牌的话，则庄家只需要在玩家打出牌的时候，验证下他是否有这张牌就可以了…

怎么验证呢？
 * 零知识证明 感觉可以，但是好像代码会比较复杂…而且密码也学的不好…
   
 
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="EOS" scheme="https://igaojin.me/tags/EOS/"/>
    
  </entry>
  
  <entry>
    <title>找房子注意事项（最近搬家太多了...)</title>
    <link href="https://igaojin.me/2018/12/08/%E6%90%AC%E5%AE%B6/"/>
    <id>https://igaojin.me/2018/12/08/搬家/</id>
    <published>2018-12-07T18:11:18.000Z</published>
    <updated>2019-08-17T11:14:15.148Z</updated>
    
    <content type="html"><![CDATA[<p>最近搬了几次家,来回折腾了几次…</p><p>做一个总结吧…(以免以后再来回折腾…)</p><h2 id="会碰到的一些坑"><a href="#会碰到的一些坑" class="headerlink" title="会碰到的一些坑"></a>会碰到的一些坑</h2><h3 id="楼上楼下小孩吵-宠物吵"><a href="#楼上楼下小孩吵-宠物吵" class="headerlink" title="楼上楼下小孩吵(宠物吵)"></a>楼上楼下小孩吵(宠物吵)</h3><p>这个避免的话有大概有想到几种</p><ul><li>合租的话，问问现在住在房间里面的人</li><li>找那种青年公寓，类似于自如这种（一般有些好一点公寓会不让老年人以及有小孩入住…)</li><li>当然最简单的是 找房子的时候，就让中介把这些房子帮你过滤掉</li></ul><h3 id="房间隔音不好"><a href="#房间隔音不好" class="headerlink" title="房间隔音不好"></a>房间隔音不好</h3><ul><li>自己可以到里面多呆呆,最好时间长一点，最好能先提前住一晚，这样发现了一些比较吵的就可以不租。</li><li>最好找一些大的平台吧，基本上大的平台都有公约，禁止半夜吵架啊，啥的。。。自己找的一些小区的房子，虽然便宜了，但是遇到傻逼邻居了，你也没有办法…</li><li>别租靠近地铁，靠近马路，靠近飞机场的，学校等等这些</li></ul><h3 id="遮光不好"><a href="#遮光不好" class="headerlink" title="遮光不好"></a>遮光不好</h3><ul><li>看看窗帘能不能关好…(有些窗户设计的傻x，就是关不好，换窗帘也没用…)</li></ul><h3 id="一楼的问题"><a href="#一楼的问题" class="headerlink" title="一楼的问题"></a>一楼的问题</h3><ol><li>潮湿</li><li>夏天蚊子特别多</li><li>可能不是很安全</li></ol><h2 id="其他的一些要求…"><a href="#其他的一些要求…" class="headerlink" title="其他的一些要求…"></a>其他的一些要求…</h2><ul><li>别太偏…(附近外卖比较多)</li><li>有大型超市</li><li>有图书馆（看自己需求</li><li>有游泳馆（看自己需求</li><li>有大型商场</li><li>离地铁站步行10分钟左右…</li></ul><h2 id="其他注意"><a href="#其他注意" class="headerlink" title="其他注意"></a>其他注意</h2><p>电费的话，可以看看是不是自己交（一般有些不是按照民用电给你的…)</p><p>网络记住别是铁通的…要不然贼卡…</p><p>合租的话，人别太多（特别是共用卫生间,可以先问问大家都是几点起，别都是8点，这样早上就要排队了。。。）</p><p>还有之前碰到过大早上洗澡的（一洗就是一小时的。。。）,这个也可以问问看</p><p>当然最好是独立卫生间…</p><p>其他的有想到就补…</p><hr><p><strong>更新于20181208…</strong></p><p>还需要看一下基础设备（热水，手机信号…今天搬进来的房子 手机信号贼差…</p><hr><p><strong>更新于20181220…</strong></p><p>一楼的话 会有些潮湿…注意下…</p><hr><p><strong>更新于20190312,洗澡洗到一半等待热水….</strong></p><p>洗澡的热水器一定要关注.（可以先开到热水，然后弄到可以洗澡的温度放一段时间，看看会不会突然变凉.)</p><p>烧电的话 需要看看卫生间是不是合用的，因为里面的水就那么多，如果被人先用了，那么你需要等水热…</p><p>燃气的话 有一些不够稳定…</p><p><strong>更新于20190324,浴室有浴霸，要不然冬天很冷….</strong></p><p><strong>更新于20190324,一楼夏天蚊子很多，所以可以选高层….</strong></p><p><strong>更新于20190817,如果是转租过来的房子，记得看能不能续租，别刚搬好下个月就要退房.</strong></p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2018/12/08/搬家/">https://igaojin.me/2018/12/08/搬家/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      最近搬了几次家,来回折腾了几次…

做一个总结吧…(以免以后再来回折腾…)

会碰到的一些坑
楼上楼下小孩吵(宠物吵)
这个避免的话有大概有想到几种

 * 合租的话，问问现在住在房间里面的人
 * 找那种青年公寓，类似于自如这种（一般有些好一点公寓会不让老年人以及有小孩入住…)
 * 当然最简单的是 找房子的时候，就让中介把这些房子帮你过滤掉

房间隔音不好
 * 自己可以到里面多呆呆,最好时间长一点，最好能先提前住一晚，这样发现了一些比较吵的就可以不租。
 * 最好找一些大的平台吧，基本上大的平台都有公约，禁止半夜吵架啊，啥的。。。自己找的一些小区的房子，虽然便宜了，但是遇到傻逼邻居了，你
    
    </summary>
    
      <category term="琐事" scheme="https://igaojin.me/categories/%E7%90%90%E4%BA%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>EOS智能合约的功与防-拒绝转账</title>
    <link href="https://igaojin.me/2018/11/23/EOS%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E7%9A%84%E5%8A%9F%E4%B8%8E%E9%98%B2/"/>
    <id>https://igaojin.me/2018/11/23/EOS智能合约的功与防/</id>
    <published>2018-11-22T23:33:41.000Z</published>
    <updated>2019-05-05T07:14:32.128Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从World-Conquest-被攻击说起"><a href="#从World-Conquest-被攻击说起" class="headerlink" title="从World Conquest 被攻击说起"></a>从World Conquest 被攻击说起</h2><img src="/2018/11/23/EOS智能合约的功与防/1.jpg"><p>World Conquest的游戏规则采用了FOMO模式，如果你是最后一位购买者，那么你可以获得奖池里面大部分的钱。</p><p>假如你是普通玩家，你肯定是一只盯着网页，到了最后10s左右，如果没有人购买的话，你就只好买入…</p><p>然后希望在后续10分钟内，所有的玩家都不要买入，这样你就能获得了大奖…</p><p>那如果你是一位技术流玩家的话，你会怎么做呢?</p><p>World Conquest 有一个缴税规则,所有购买地图的玩家，都需要向世界领主缴税（也就是每当有人购买某个地图后，合约都会给世界领主 这个玩家打一笔钱。</p><p>因为EOS内，所有的账号都可以部署合约,那么假如 我先用我的小号成为最后一位购买者，然后我用世界领主这个账号 部署合约</p><p>拒绝合约账号给我打钱，那么我只要默默等待时间结束，我就成为了最后一位玩家。（因为别人购买的时候 会触发给你打钱的动作，但是因为这个动作被拒绝了，所以导致整个交易失败，然后也就购买不成功…</p><h3 id="攻击再优化一点"><a href="#攻击再优化一点" class="headerlink" title="攻击再优化一点"></a>攻击再优化一点</h3><p>在前面说了,世界账号是部署了合约，拒绝了 World Conquest 这个合约给他打钱.</p><p>但是其实这样是有一些问题的，假如说 游戏结束后，系统是自动发奖的…那么因为你拒绝了该合约给你打钱..。</p><p>那么你也就拿不到奖…(当然现实是 手动打钱，因为合约时间到了后，只能手动打，你需要在开发者给你打钱之前 把合约重新部署下，就可以了）</p><p>当然这个方法不怎么好，如何把细节完善好呢…</p><p>一个简单的方法 就是判断打进来的钱的金额（因为缴税的金额肯定是比较低的，而大奖金额是比较多的…</p><p>或者通过memo来判断，也是一样的…</p><h2 id="快神话被攻击"><a href="#快神话被攻击" class="headerlink" title="快神话被攻击"></a>快神话被攻击</h2><p>昨天上线一款新的资金盘类游戏…</p><p>游戏有个规则是 最后奖池的20%分给最低价值英雄的玩家…</p><p>那么 如何成为拥有最低价值英雄的玩家呢…</p><ol><li>在标语里面写上 买我这个英雄的都是SX 之类的</li><li>技术流当然是使用上面攻击World Conquest相同的方法了…</li></ol><h2 id="如何防止这种攻击呢"><a href="#如何防止这种攻击呢" class="headerlink" title="如何防止这种攻击呢?"></a>如何防止这种攻击呢?</h2><h3 id="World-Conquest是怎么做的呢？"><a href="#World-Conquest是怎么做的呢？" class="headerlink" title="World Conquest是怎么做的呢？"></a>World Conquest是怎么做的呢？</h3><p>World Conquest在新开第二盘的时候，使用了记账的方式 来避免被攻击…</p><p>正常来说，有人购买你的地后，你就能拿到赚的钱，这笔钱会直接转到你的账号上(上面说的攻击就是拒绝这笔转账汇入)</p><p>World Conquest是在有人购买你的地后，不给你转钱，而是帮你记一笔账…</p><p>当然你可以随时来提取你的奖金…</p><p>当然这种方式肯定是被玩家喷了…不能立马复投的资金盘还叫资金盘么…</p><h3 id="有没有更好的办法"><a href="#有没有更好的办法" class="headerlink" title="有没有更好的办法"></a>有没有更好的办法</h3><p>防止这种攻击的方法其实很简单…就是把购买动作和转钱分开…</p><p>那么只要在购买成功后，发起一笔延时交易,给用户打钱.这样购买与转钱的动作就分开了…</p><p>而且还有个好处是,假如用户恶意拒绝合约给他转钱的话，那么这笔钱会留在你的合约…(算是惩罚了 恶意用户)</p><p>当然不是所有的方法都是完美的…</p><p>这个方法有一个问题是…因为延时交易是需要 合约出CPU的…</p><p><strong>目前我还没有测试 到底是在发出延时的时候 扣CPU,还是延时发生的时候才扣</strong></p><p>假如是第一种情况…还好，毕竟用户无法买入了…（可能会去你群里与你沟通</p><p>假如是第二种情况…正常用户买入了,而合约却没有把钱给上一个玩家…那么你肯定要被用户喷死…</p><p>当然解决方法也不是很难</p><ol><li>你可以提前多去租点CPU,就能避免CPU不足的问题了</li><li>可以参考系统解除质押发出的延时 如果出错怎么处理的…</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>目前EOS上，各种斗智斗勇的故事在发生…</p><p>欢迎来EOS上玩…</p><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2018/11/23/EOS智能合约的功与防/">https://igaojin.me/2018/11/23/EOS智能合约的功与防/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      从World Conquest 被攻击说起
World Conquest的游戏规则采用了FOMO模式，如果你是最后一位购买者，那么你可以获得奖池里面大部分的钱。

假如你是普通玩家，你肯定是一只盯着网页，到了最后10s左右，如果没有人购买的话，你就只好买入…

然后希望在后续10分钟内，所有的玩家都不要买入，这样你就能获得了大奖…

那如果你是一位技术流玩家的话，你会怎么做呢?

World Conquest 有一个缴税规则,所有购买地图的玩家，都需要向世界领主缴税（也就是每当有人购买某个地图后，合约都会给世界领主 这个玩家打一笔钱。

因为EOS内，所有的账号都可以部署合约,那么假如 我先用
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="EOS" scheme="https://igaojin.me/tags/EOS/"/>
    
      <category term="安全" scheme="https://igaojin.me/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>此地无人生还：区块链随机数的原罪与救赎（转</title>
    <link href="https://igaojin.me/2018/11/23/%E6%AD%A4%E5%9C%B0%E6%97%A0%E4%BA%BA%E7%94%9F%E8%BF%98%EF%BC%9A%E5%8C%BA%E5%9D%97%E9%93%BE%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%9A%84%E5%8E%9F%E7%BD%AA%E4%B8%8E%E6%95%91%E8%B5%8E/"/>
    <id>https://igaojin.me/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/</id>
    <published>2018-11-22T16:17:17.000Z</published>
    <updated>2019-05-05T07:20:08.762Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>生成随机数不是应该留给人类来做的任务。——Mads Haah</p></blockquote><p>受访者：慢雾科技安全研究员Johan</p><p>特别致谢：高金</p><p>作者：李画</p><p>区块链的世界没有真正的随机数，但随机数却是区块链游戏之魂，至少在目前阶段。</p><p>所以，当伪随机数让DApp流下第一滴血后，DApp却无法断臂求生。潜伏的黑客们就像嗜血的鲨鱼，在嗅到腥味后迅速聚拢过来，围攻这个有着天生缺陷的猎物。</p><p>Luckyos、EOS.WIN、DEOSBET、FairDice、EosRoyale、EOSDice、FFGame……这些热门DApp游戏先后被攻击，因随机数漏洞而面临生死危机。“没有被攻击过随机数的都不好意思说自己做的是DApp”，开发者们如此自嘲。</p><p>本文采访了一直关注DApp随机数漏洞的慢雾科技安全研究员Johan，并就代码细节问题咨询了资深DApp开发工程师高金，试图通过这篇文章，呈现出随机数的前世与今生、原罪与救赎。</p><h2 id="原罪：计算机的世界没有真随机数"><a href="#原罪：计算机的世界没有真随机数" class="headerlink" title="原罪：计算机的世界没有真随机数"></a>原罪：计算机的世界没有真随机数</h2><p>真正的随机数只存在于物理世界中，比如掷骰子的结果，比如电子组件的噪声。</p><p>最早的随机数生成器是骰子，早在公元前2600年，人类就已经用四面骰来玩抛掷游戏了，迄今为止，它依然是最值得信赖的产生随机数的方法。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/0.jpg"><p>但骰子显然不能满足现代世界对随机数的需求，于是在1995年，RAND公司推出《百万乱数表》（《A Million Random Digits with 100,000 Normal Deviates》）。RAND先通过随机脉冲发生器生成大量随机数，再把这些数字集合起来组成随机数字书，免费提供给人们使用。</p><p>这本书是20世纪随机数领域的重要著作，也是人类历史上第一次产生如此大量的、高质量的随机数。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/1.jpg"><p>与此同时，阿兰·图灵在计算机 Ferranti Mark 1中首次内置了随机数生成指令，利用热噪声可以一次性生成 20 个随机比特。1999 年，Intel更进一步， 在 i810 芯片组上集成了芯片级的真随机数生成器（TRNG），通过热噪声产生本地源的随机数。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/2.jpg"><p>不过，TRNG每秒只能产生有限的随机比特，随机数生成速度低，致使软件的工作频率受限，而且TRNG对外界干扰极其敏感，需要耗费大量功率避免非随机信号对信号源的污染。</p><p>伪随机数应运而生。冯·诺依曼创造了最早的伪随机数生成器（PRNG），通过给出一个确定的随机数种子，由确定的算法在每次生成同样的随机数序列。只要种子不变，伪随机数的数序也不会变。</p><p><strong>自此以后，猜种子破解随机数便成为黑客的常规攻击手段，而事实证明，具有好的质量且不易被攻克的种子很难寻觅。但即便如此，因为效率的缘故，计算机软件还是不得不依赖于伪随机数。</strong></p><p>在当前的编程语言中，C++、R、Python、Ruby、PHP等都采用了梅森旋转算法（Mersenne Twister）作为默认的伪随机数生成方法，它由松本真和西村拓士在 1997 年发明。</p><p>梅森旋转算法把寄存器当时或者之前的状态作为种子来源，通过线性反馈移位寄存器对输入进行移位旋转，周期为一个梅森素数。该算法产生的伪随机数质量好、产生速度快。</p><p>伪随机数的种子来源也可以是真随机数——CPU通过TRNG不断产生真随机数，并将真随机数存储在熵池中，当软件需要使用随机数时，从熵池里提取一些真随机数作为种子输入到PRNG中，通过PRNG得到伪随机数序列。</p><h2 id="天堑：区块链不支持生成随机数"><a href="#天堑：区块链不支持生成随机数" class="headerlink" title="天堑：区块链不支持生成随机数"></a>天堑：区块链不支持生成随机数</h2><p>传统的伪随机数生成算法或多或少与单台机器的物理状态或运算状态相关，不同的机器，或者说不同的节点，会有不同的运算结果，这在区块链上是行不通的。区块链是一个分布式的系统，它要求各个节点的运算结果是可验证、可共识的。</p><p><strong>区块链需要从零开始设计崭新的随机数法则，从而实现不同节点上的智能合约可以使用相同的随机数。</strong></p><p>有三种解决方式。第一种是让可信第三方为合约提供随机数；第二种是通过基础合约实现伪随机数生成器，为其他合约提供一致的随机数；第三种是让所有节点上的合约可以采集到相同的种子，再通过伪随机算法计算出相同的随机数序列。</p><p>第一种方式最大的缺陷是需要引入第三方。该第三方是否值得信任，能否能提供高质量的随机数均是问题。除此之外，区块链是警惕中心化的，而第三方在某种程度上是中心化的，这与一些DApp开发者的理念不相符合。</p><p>在以太坊上，Oraclize是为链上节点提供随机数的第三方。Oraclize是一个预言机，独立于区块链系统之外，智能合约发送请求给Oraclize，当Oraclize监听到链上相关请求后，生成随机数并将结果返回区块链。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/3.jpg"><p>第二种方式最符合区块链精神，是一个不同参与者合作生成随机数的伪随机数生成器，但它涉及到激励机制的设计问题，以及人为控制的作弊问题。</p><p>RANDAO采用的即是这种方式，它以智能合约的形式封装了伪随机数生成算法和对应的业务逻辑，为以太坊提供随机数服务，任何人都可以参与生成RANDAO随机数。</p><p>在随机数生成周期，每个参与者都需要提交一个数字，而来自所有参与者的数字集合将被作为种子生成伪随机数，因为无法知晓他人提供的种子，该方法产生的结果难以被破解。智能合约可以向RANDAO请求随机数，但需要支付奖金给生成随机数的参与者。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/4.jpg"><p>第三种方式，随机数不是从合约外部引入，而是把区块链的链上信息做为种子，由智能合约根据种子生成伪随机数。这种方法最大的缺陷就是一旦黑客知道了随机数的生成算法，也能获取正确的种子，就能轻易地对智能合约发起随机数攻击。</p><p><strong>不同于传统伪随机数生成算法中种子的私密性，区块链上的种子几乎是“透明”的</strong>：它是链上的区块信息，所有节点上的智能合约都能够取到，那么从原理上讲，黑客用于攻击的恶意合约同样可以获得这些数值。</p><p>不过，因为缺乏成熟的随机数提供方，以及对中心化随机数的警惕、对链上自治的追求，通过智能合约计算随机数依然是EOS上众多DApps首选的方法，这也是DApps深陷黑客危机的原因所在。</p><h2 id="攻防：道高一尺魔高一丈"><a href="#攻防：道高一尺魔高一丈" class="headerlink" title="攻防：道高一尺魔高一丈"></a>攻防：道高一尺魔高一丈</h2><p>FFGAME可能是史上最倒霉DApp——游戏还没正式运营就遭到攻击。黑客很快破解了随机数，然后在游戏中不断获胜，轻松拿走FFGAME平台放入游戏中的初始资产，1332个EOS。FFGAME还没准备迎敌，城门就已失守。</p><p>在DApp的攻防战中，攻击者们通常有两种方法来利用随机数盗取资产。</p><p>第一种方法是获取正确的随机数种子，通过伪随机算法计算出游戏结果，然后根据结果下注，保证百分百胜率。</p><p>第二种方法是在知道伪随机算法和种子来源的情况下，通过改变种子的数值让伪随机算法计算出自己下注的游戏结果，从而保证百分百胜率。</p><p><strong>EOSDice是一个被黑客用第一种方法攻破后，修改了伪随机数算法，旋即又被黑客用第二种方法攻破的DApp。</strong>不过，值得赞赏的是，EOSDice也是一个被攻破两次但依然坚持开源的 EOS游戏。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/5.jpg"><p>EOSDice 第一次被攻击发生在11月4日 上午3:15，攻击者为jk2uslllkjfd，共被盗取约2500个EOS并转入火币。</p><p>EOSDice的伪随机数生成算法中使用的随机种子主要是： tapos_block_prefix() ； tapos_block_num() ；name ()； game_id ；current_time()； pool_ol_eos.amount。种子中的后四个，也就是帐户名、id、开奖时间、合约余额都比较容易获取，随机数的安全性主要依赖于前两个种子，也就是reference block的信息。</p><p>在EOSDice 的实时开奖机制中，开奖action的reference block在默认状态下是执行当前action的上一个区块，该区块已经存在，其信息可以提前获取。因此，黑客可以通过种子预先算出结果，再下注。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/6.jpg"><p>EOSDice在被攻击后把实时开奖改为异步延时开奖，并重新上线运营。只不过二次攻击很快发生，在11月10日上午11:19，账户名为coinbasewa11的攻击者盗取了约4900 个EOS，并转入bitfinex。</p><p>在异步延时开奖机制下，reference block的指向发生了变化。开奖action的reference block是在下注时还未生成的区块，其信息难以提前获取，也就不能抢先计算出游戏结果。</p><p>但黑客们谋划了新手段：首先，让攻击合约模拟EOSDice的游戏合约，只要两种合约运行在同一个区块，就会取到相同的种子，计算出相同的结果；然后，因为EOSDice伪随机算法的种子包括账户余额，黑客可以在攻击合约中一次次修改余额的数值来改变种子进而改变运算的结果，直到其最终满足自己的下注条件；最后，在通过上述计算“碰撞”出“正确”的账户余额后，黑客只需要向真正的游戏合约账户转入被计算好的EOS，就能保证开奖时必然中奖。</p><img src="/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/7.jpg"><h2 id="救赎：没有最好，只能更好"><a href="#救赎：没有最好，只能更好" class="headerlink" title="救赎：没有最好，只能更好"></a>救赎：没有最好，只能更好</h2><p>链上随机数问题没有完美的解决方案。区块链上不仅没有真随机数，连传统的伪随机数也没有。</p><p>EOS官方示例中采用的随机数生成法类似于上文讨论的第二种方式——用不同参与者的私密数据的集合作为种子，生成难以被预测的伪随机数。</p><p>以Dice为例，玩家和庄家需要提前生成密钥，把公钥先传到链上，开奖的时候再提交各自的私钥，作为种子生成随机数，再由随机数判定开奖结果。这可能是目前最安全的伪随机数生成方式，但它给玩家增加了额外的且并不轻松的操作，提高了游戏门槛，在现实中并未被广泛的采用。</p><p>BM在EOS开发者群回答随机数安全问题时，提出了一个“信任区块生产者”的方案，也就是说用区块生产者在打包交易的某个特定时机获取的某些信息来生成伪随机数。虽然是在链上解决问题，但这种方法更接近于上文讨论的第一种方式——由一个中心化的第三方来提供随机数，虽然难以被破解，但提供者不一定值得信任。</p><p>屡败屡战的EOS上的DApp开发者通常选用上文中的第三种方式——智能合约获取链上数据作为种子，自己生成伪随机数。</p><p>在与黑客数次交锋之后，<strong>目前DApp最常用的开奖机制是“二次延时开奖+种子中不设置可控变量”。</strong></p><p>实时开奖机制下，reference block是上一个区块，其中的种子数据在开奖前就可被黑客获取；而二次延时开奖，reference block是还未生成的区块，其中的种子数据难以预测，黑客也就无法提前算出开奖结果。种子中不设置可控变量则保证了黑客不能通过改变种子的数值来操控开奖结果。</p><p>不过，即便如此，“二次延时开奖+种子中不设置可控变量”也不能保证合约随机数的绝对安全，只能说在目前阶段这种方法还未被黑客攻破，相对安全。毕竟不管采用几次延时，开奖合约能获取的种子，攻击合约也一样能得到，链上的种子是“公平”、“透明”的。</p><p>如何在这种不完美的情况下尽量减少随机数攻击带来的破坏，慢雾团队给出了一些实用建议：</p><ol><li><p>多用攻击者视角审查合约。</p></li><li><p>攻击者一般是通过恶意合约完成攻击，要思考合约能从什么角度攻击随机数。</p></li><li><p>随机数的安全与伪随机数生成算法相关，也与开奖机制相关，算法和机制要配合设计。</p></li><li><p>伪随机数生成算法不要引入可预测种子和可控种子，避免结果被预测或被篡改。</p></li><li><p>了解区块链上的随机数与传统随机数的差别。</p></li><li><p>做安全审计。在项目上线和开源前做安全审计，已知的漏洞能被查出，未知的漏洞也能通过风控机制把危害降到最低。</p></li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>“在所有的产生随机数的事物中，我认为没有什么能够超越骰子了”，Francis Galton在 1890 年的《自然》杂志中如此写道。</p><p>但骰子永远也不可能满足计算机应用的需求，一旦要在二进制的世界使用随机数，我们就需要做出妥协，把自己暴露在黑客攻击的危险之下。</p><p>区块链世界的特殊性需要我们做出更多的妥协。因为分布式、因为透明、因为警惕中心化与渴望链上自治，在区块链上，没有真随机数、也永远不会有绝对安全的随机数。</p><p>随机数带来的是一场永久的战役，在开发者与黑客之间。随机数会抗所有已知类型的攻击，但黑客也会不断发现新的攻击手段。此地无人生还。</p><h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><ol><li><p><a href="https://www.bishijie.com/shendu_10242" rel="external nofollow noopener noreferrer" target="_blank">道高一尺魔高一丈的随机数攻击—— EOS伪随机数漏洞</a></p></li><li><p><a href="https://bihu.com/article/1827909" rel="external nofollow noopener noreferrer" target="_blank">EOS主网上线以来智能合约攻击方式汇总</a></p></li><li><p><a href="https://www.chainnews.com/articles/776607864103.htm" rel="external nofollow noopener noreferrer" target="_blank">Fomo3D 狼人杀、EOSBet 、EOSDice 等十八个安全漏洞事件始末</a></p></li></ol><p><br><strong>本文作者</strong>：高金<br><strong>本文地址</strong>： <a href="https://igaojin.me/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/">https://igaojin.me/2018/11/23/此地无人生还：区块链随机数的原罪与救赎/</a><br><strong>版权声明</strong>：转载请注明出处！</p>]]></content>
    
    <summary type="html">
    
      生成随机数不是应该留给人类来做的任务。——Mads Haah

受访者：慢雾科技安全研究员Johan

特别致谢：高金

作者：李画

区块链的世界没有真正的随机数，但随机数却是区块链游戏之魂，至少在目前阶段。

所以，当伪随机数让DApp流下第一滴血后，DApp却无法断臂求生。潜伏的黑客们就像嗜血的鲨鱼，在嗅到腥味后迅速聚拢过来，围攻这个有着天生缺陷的猎物。

Luckyos、EOS.WIN、DEOSBET、FairDice、EosRoyale、EOSDice、FFGame……这些热门DApp游戏先后被攻击，因随机数漏洞而面临生死危机。“没有被攻击过随机数的都不好意思说自己做的是DApp”，
    
    </summary>
    
      <category term="区块链" scheme="https://igaojin.me/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="随机数" scheme="https://igaojin.me/tags/%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    
  </entry>
  
</feed>
