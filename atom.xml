<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>高金的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jin10086.github.io/"/>
  <updated>2018-08-24T08:54:13.024Z</updated>
  <id>https://jin10086.github.io/</id>
  
  <author>
    <name>Gao JIn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>每周分享第 4 期</title>
    <link href="https://jin10086.github.io/2018/08/24/weekly-issue-4/"/>
    <id>https://jin10086.github.io/2018/08/24/weekly-issue-4/</id>
    <published>2018-08-24T08:22:22.000Z</published>
    <updated>2018-08-24T08:54:13.024Z</updated>
    
    <content type="html"><![CDATA[<h3 id="「首次深度揭秘」Fomo3D，被黑客拿走的-2200-万"><a href="#「首次深度揭秘」Fomo3D，被黑客拿走的-2200-万" class="headerlink" title="「首次深度揭秘」Fomo3D，被黑客拿走的 2200 万"></a><a href="https://mp.weixin.qq.com/s/s_RCF_EDlptQpm3d7mzApA" rel="external nofollow noopener noreferrer" target="_blank">「首次深度揭秘」Fomo3D，被黑客拿走的 2200 万</a></h3><p><a href="https://mp.weixin.qq.com/s/MCuGJepXr_f18xrXZsImBQ" rel="external nofollow noopener noreferrer" target="_blank">Fomo3D 千万大奖获得者“特殊攻击技巧”最全揭露</a></p><p><strong>一直以为 FOMO3D 永远不会结束…</strong></p><p>Fomo3D 游戏第一轮正式结束，最终大奖由地址 0xa169 获得，奖金额高达 10,469.66 以太币。</p><p>不少人轻易得出结论：获奖者平平无奇。</p><p>安比（SECBIT）实验室昨日首个发现 Fomo3D 大奖获得者采取一些“特殊攻击技巧”，使得游戏临近结束时，矿工打包入区块内的交易数量骤减（涉及连续多个区块），从而起到加速游戏结束和提高胜率的作用。安比（SECBIT）实验室在 Last Winner 上轮游戏结束时也观察到了多个十分类似的异常区块和交易。</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fukw3rlr3dj217g1biaxm.jpg" alt=""></p><p>后面准备写一篇 fomo3d 的文章，从随机数的漏洞到如何有机会得到大奖…</p><h1 id="一些文章"><a href="#一些文章" class="headerlink" title="一些文章"></a>一些文章</h1><h3 id="一个安卓程序媛的人生经验"><a href="#一个安卓程序媛的人生经验" class="headerlink" title="一个安卓程序媛的人生经验"></a><a href="https://mp.weixin.qq.com/s/Whtx_UPUELzzpOGVKteo5Q" rel="external nofollow noopener noreferrer" target="_blank">一个安卓程序媛的人生经验</a></h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fukvc2roo0j20bo0fo7gc.jpg" alt=""></p><p>一位程序媛妹子的心酸血泪史</p><h3 id="我们正在目睹的是-20-世纪以来人类社会最大规模的崩溃"><a href="#我们正在目睹的是-20-世纪以来人类社会最大规模的崩溃" class="headerlink" title="我们正在目睹的是 20 世纪以来人类社会最大规模的崩溃"></a><a href="https://mp.weixin.qq.com/s/sHqIni5wBa9qV3WeRa-pcQ" rel="external nofollow noopener noreferrer" target="_blank">我们正在目睹的是 20 世纪以来人类社会最大规模的崩溃</a></h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fukvhtq38gj20p00s6h45.jpg" alt=""></p><p>关于委内瑞拉的现状，媒体上已经有很多的报道了，大致可以归纳为三个方面。</p><p>第一，多年恶性通货膨胀，货币严重贬值，国际货币基金组织的预计是到今年年底通胀率将会高达 1000000%，逼近人类通胀史的最高水平。</p><p>第二，除了物价高，更可怕的是有钱也买不到东西。</p><p>第三，治安状况急剧恶化，暴力犯罪极度猖獗，伴随经济崩溃而来的是社会秩序的全面崩塌。</p><p>我们正在目睹的，是一个失败国家的典型，是 20 世纪以来非战乱条件所造成的人类社会最大规模的崩溃。</p><h3 id="喷子简史：当年“匡扶正义”的网友，如何成为今天尽情狂欢的嗨粉"><a href="#喷子简史：当年“匡扶正义”的网友，如何成为今天尽情狂欢的嗨粉" class="headerlink" title="喷子简史：当年“匡扶正义”的网友，如何成为今天尽情狂欢的嗨粉"></a><a href="https://mp.weixin.qq.com/s/afLY6E34CnuO5SwGkthfBQ" rel="external nofollow noopener noreferrer" target="_blank">喷子简史：当年“匡扶正义”的网友，如何成为今天尽情狂欢的嗨粉</a></h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fukvkh2io7j20u00ftq6v.jpg" alt="喷子也随社会进化"></p><p>传说亚洲有三子，韩国棒子、日本鬼子和中国喷子。<br>中国喷子凭借其辉煌的战绩获得如此高的地位，可以说受之无愧。<br>当 NMSL 堂而皇之和流量担当蔡徐坤一起登上了微博热搜时，喷子们再一次刷爆了存在感。</p><h3 id="偷听传销一席话，胜读-10-本运营书"><a href="#偷听传销一席话，胜读-10-本运营书" class="headerlink" title="偷听传销一席话，胜读 10 本运营书"></a><a href="https://mp.weixin.qq.com/s/o8hMQztHGM2PPne4edOIYA" rel="external nofollow noopener noreferrer" target="_blank">偷听传销一席话，胜读 10 本运营书</a></h3><p>之前有段时间，新闻报道了一些关于传销导致的悲剧，导致很多人谈传销色变。</p><p>但是也会有很多人觉得好奇，传销到底是怎么做到将人彻底洗脑的？</p><p>今天分享的这篇文章，恰好讲到这个话题，我来回看了几遍，不得不感叹对人性做到透彻的洞察，真的是把极其锋利的双刃剑……</p><hr><h1 id="不错的项目"><a href="#不错的项目" class="headerlink" title="不错的项目"></a>不错的项目</h1><h3 id="lunr-js"><a href="#lunr-js" class="headerlink" title="lunr.js"></a><a href="https://github.com/olivernn/lunr.js" rel="external nofollow noopener noreferrer" target="_blank">lunr.js</a></h3><p>lunr.js 是个用于浏览器的轻量级 JavaScript 全文搜索引擎，对于一些小型的博客、开发者文档或 Wiki 网站来说，完全可以通过 lunr.js 实现站内离线搜索，既快速又小巧。</p><h3 id="Save-Page-WE"><a href="#Save-Page-WE" class="headerlink" title="Save Page WE"></a><a href="https://chrome.google.com/webstore/detail/save-page-we/dhhpefjklgkmgeafimnjhojgjamoafof" rel="external nofollow noopener noreferrer" target="_blank">Save Page WE</a></h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fukvpe9f42j20hs0b4gnp.jpg" alt=""></p><p>Save Page WE，一个保存网页的扩展程序，可以将网页保存为 html 格式单文件，效果极好，自带的 Ctrl+S 实在很弱</p><hr><h1 id="好玩的"><a href="#好玩的" class="headerlink" title="好玩的"></a>好玩的</h1><h3 id="hacknical"><a href="#hacknical" class="headerlink" title="hacknical"></a><a href="https://hacknical.com/" rel="external nofollow noopener noreferrer" target="_blank">hacknical</a></h3><p><strong>hacknical 是什么？</strong></p><p>在我工作的经历中，无论是面试别人，或者在换工作时被人面试，都是一件很麻烦的事情。面试官经常对面试者的水平了解不足，而有些水平不错的开发者，也不知道该如何很好的展现自我。在这些状态下，简历里往往会有这样或那样的瑕疵：</p><ul><li>工作经历要么描述的太少，要么废话太多</li><li>没有实际的线上作品</li><li>没有可看的公开或开源代码来让面试官了解自己的代码水平和风格</li><li>往往喜欢用 “百分之 XX” 这样的进度来表示自己精通某种语言</li><li>无法通过简历，看出面试者的灵魂和风格</li></ul><p>所以，对于经验不足的人来说，在书写简历时如果没有一个很好的模板或者引导，比较容易走进一个自嗨的误区。如何言简意赅的展现自己的经历，让面试官认识到自己的水平，则是 hacknical 想要去解决的问题。</p><p><strong>它能做什么？</strong></p><p>有了上述的问题，hacknical 会去一步步尝试优化整个流程，引导你写出更好更高效的简历。</p><p><strong>目前，功能如下：</strong></p><ul><li>一个体验更好的简历填写流程。</li><li>通过 github 登录，抓取你公开的 repos/commits/languages/star/followers 等信息，生成一张较为详细的可视化总结报告。</li><li>你可以选择性的在自己的简历，或者 hacknical 生成的在线简历后面附件上这份 github 报告（推荐），以便让心仪的公司更加精准的了解你。</li><li>可以随时选择 公开/私密 自己的在线简历以及 github 总结报告。</li></ul><p><strong>你可以怎么玩？</strong></p><ul><li>可以单纯的把它作为查看自己 github 总结报告的工具</li><li>可以把 github 总结报告附属在自己的简历上</li><li>可以通过它生成自己的在线简历，并选择性的附加 github 总结报告</li></ul><p>可以扫描下面二维码看看我的页面…<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fukvs8xuupj208q08ggm2.jpg" alt=""></p><hr><h1 id="我的奇思妙想"><a href="#我的奇思妙想" class="headerlink" title="我的奇思妙想"></a>我的奇思妙想</h1><h3 id="网易云音乐配对"><a href="#网易云音乐配对" class="headerlink" title="网易云音乐配对."></a><a href="https://juejin.im/pin/5b70de6ee51d4503821250bc" rel="external nofollow noopener noreferrer" target="_blank">网易云音乐配对.</a></h3><blockquote><p>留下你们的网易云歌单链接，希望碰到彼此音乐感受力高度契合的那个人。<br>因为热爱音乐的人不管什么时候、从事什么工作，都能把日子过成诗。</p></blockquote><p>做一个根据网易云音乐喜欢的歌,自己交友的软件(或者网站)</p><p>用户可以在此网页上放出自己的用户名,然后爬他喜欢的歌曲…</p><p>然后根据某种算法来匹配…</p>]]></content>
    
    <summary type="html">
    
      「首次深度揭秘」Fomo3D，被黑客拿走的 2200 万
Fomo3D 千万大奖获得者“特殊攻击技巧”最全揭露

一直以为 FOMO3D 永远不会结束…

Fomo3D 游戏第一轮正式结束，最终大奖由地址 0xa169 获得，奖金额高达 10,469.66 以太币。

不少人轻易得出结论：获奖者平平无奇。

安比（SECBIT）实验室昨日首个发现 Fomo3D 大奖获得者采取一些“特殊攻击技巧”，使得游戏临近结束时，矿工打包入区块内的交易数量骤减（涉及连续多个区块），从而起到加速游戏结束和提高胜率的作用。安比（SECBIT）实验室在 Last Winner 上轮游戏结束时也观察到了多个十分类似
    
    </summary>
    
      <category term="每周分享" scheme="https://jin10086.github.io/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>每周分享第 3 期</title>
    <link href="https://jin10086.github.io/2018/08/17/weekly-issue-3/"/>
    <id>https://jin10086.github.io/2018/08/17/weekly-issue-3/</id>
    <published>2018-08-17T09:43:14.000Z</published>
    <updated>2018-08-24T08:19:13.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一些文章"><a href="#一些文章" class="headerlink" title="一些文章"></a>一些文章</h1><h3 id="比特币：十年话江湖-下"><a href="#比特币：十年话江湖-下" class="headerlink" title="比特币：十年话江湖(下)"></a><a href="https://www.8btc.com/article/248871" rel="external nofollow noopener noreferrer" target="_blank">比特币：十年话江湖(下)</a></h3><p><a href="https://www.8btc.com/article/158353" rel="external nofollow noopener noreferrer" target="_blank">比特币：十年话江湖(上)</a></p><blockquote><p>比特币圈（简称“币圈”）比任何一个圈子都具有江湖习气。构成这个江湖的大多数人都是籍籍无名之辈，他们从一开始就不属于时代主流力量。<br>所以，他们的行事做派极其草莽，动辄撸串，怒则撕逼。他们的口号是“一币一嫩模”“一币一别墅”，他们的信仰是“守币如守寡”。<br>传统的互联网圈、金融圈、区块链圈觉得这是一个loser的世界，但是这些人眼高于顶，自命不凡，叛逆心极重。<br>他们不甘心在BAT画好的版图里闪展腾挪，在他们眼中，比特币这个法律照不到的灰色角落，正是风起于青萍之末时。<br>格局未定，真假莫辨，十年币圈，财富无限，无论币涨币跌，依旧无限可能。这就是比特币的世界。</p></blockquote><p><a href="https://www.8btc.com/author/19987" rel="external nofollow noopener noreferrer" target="_blank">罗金海</a>老师写的 关于比特币十年的故事。</p><blockquote><ul><li>中国比特币史上最神秘的人物：烤猫</li><li>2009~2010年 比特币的“结绳记事”年代</li><li>2011~2012年 比特币的蛮荒岁月</li><li>2013年 北上深杭 “群雄并起”</li><li>2014~2016 币圈的悲情岁月</li><li>2017~2018年 币圈已经不是原来的币圈</li><li>应该铭记的“布道者”</li><li>币圈里的“反对派”</li><li>比特币：我没有敌人</li></ul></blockquote><blockquote><p>比特币在行情4500的时候，比特币的创业者聚在一起撸串。<br>比特币在行情3500的时候，北上深杭还能找一帮子人聚会。<br>比特币在行情2000的时候，很多比特币创业者开始卖币为生。<br>比特币在行情900的时候，再也没有人谈及比特币了。</p></blockquote><blockquote><p>在这段艰难的岁月里，信仰者坚持了下来，我们经常说矿工没有信仰，但事实上，在这样艰难的岁月，矿工走遍中国寻找低价水电，仍然在坚持拓荒式生存，瑞锡、小小、三金他们就是在这段时间一直坚守着自己的领地。</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu9dor06nmj20m80erh4f.jpg" alt=""></p><blockquote><p>还有很多我不知道的人，他们在那个充满争议的时代开始布道。<br>到了今天，无数的专家和大咖冒了出来，编织一个又一个百度不到的神奇故事。</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu9dplsmzyj20u019s1kx.jpg" alt=""></p><blockquote><p>比特币的十年，是充满争议的十年，也是野蛮生长的十年。<br>很多时候都是误解，无论你喜欢还是不喜欢———比特币只是一段开源程序、一种密码算法、一种新技术、一个P2P的电子支付系统、一段美好的思想……<br>虽然技术界的自由主义者会赋予它伟大理想，极客里的无政府主义者视它为现代信仰，但比特币只是想通过技术去解决实际问题，让人类在实际交往中变得方便。<br>对自由主义者来说，比特币可能是心中的诺亚方舟；对行走于灰色世界的极客来说，比特币是遮人耳目的铁幕。比特币十年江湖，没有财富神话，更多的是血泪传奇。</p></blockquote><h3 id="陆奇，YC-中国的-01-号员工-36氪独家"><a href="#陆奇，YC-中国的-01-号员工-36氪独家" class="headerlink" title="陆奇，YC 中国的 01 号员工 | 36氪独家"></a><a href="https://36kr.com/p/5148299.html?from=timeline&amp;isappinstalled=0" rel="external nofollow noopener noreferrer" target="_blank">陆奇，YC 中国的 01 号员工 | 36氪独家</a></h3><p><strong>因为真正改变世界的创新发明往往是好奇心和想象力驱动的。</strong></p><p><strong>但是改变世界的技术创新公司需要三家事情：信心、耐心和恒心。这是我一定要强调的个人经验。就是一定要相信、一定要忍耐住、一定要静得下来。</strong></p><blockquote><p>其实陆奇过去几个月经历的事情大多数人都经历过——职业转型，做什么才好？<br>为了做出自己不后悔的决定，他会向挚友伙伴寻求建议，和未来的老板深入了解彼此，用笔在纸上写字画图分析自己的处境、写下自己对世界的认知对未来的看法、审视自己和坚定信仰。</p></blockquote><blockquote><p>陆奇在向我们描述美丽新世界的时候，既满怀对未来的希冀，也充斥了对现实的不满。他相信人工智能驱动的创新会给全人类带来前所未有的进步和公平。</p></blockquote><blockquote><p>但同时，他很讨厌看到只有技术进步、而没有与之配套的新生态建设。还有他更讨厌的是，当今的创新生态越来越不支持持续的技术创新，因为这将直接影响他心目中美丽新世界的到来速度</p></blockquote><blockquote><p>陆奇：我对区块链技术长期看好，它的特性带来很多好处。</p><ol><li>对隐私和数据的保护。</li><li>可以为创新带来不同的激励机制。目前，市场上已有的激励机制通常是财务层面的，例如股权和债券，但区块链技术在长期可能会带来激励机制方面的创新。</li><li>更长期的是，通过数字化的形式，用户可以相互传递信任度。<br>具体创业形式还不确定，但是区块链技术会在上述这些方面降低创业的门槛。 </li></ol></blockquote><h3 id="王思聪要打职业比赛"><a href="#王思聪要打职业比赛" class="headerlink" title="王思聪要打职业比赛"></a><a href="https://m.weibo.cn/status/4273785823554882?from=timeline&amp;isappinstalled=0" rel="external nofollow noopener noreferrer" target="_blank">王思聪要打职业比赛</a></h3><p>虽然很多人说“有钱真的为所欲为”,但是我觉得，兴怀梦想，你也可以做你自己想做的事情的！</p><blockquote><p>虽然这本来是校长的一句玩笑话，但是我在接下来的几分钟内却进行了一些思考。<br>说真的，类似的玩笑我似乎已经听到他不止一次的说过了，所以这句话可能已经不能说是他简单的一句玩笑，更多的是对他渴望融入电竞比赛的一种意愿的体现，甚至可能是他的一个夙愿。<br>大家可能知道，游戏和电子竞技对他来说真的是生活中的一部分。<br>做老板，校长在电竞圈中已经8年，但是如果有机会能做选手，这依然是让他非常渴望的体验。<br>所以这就是为什么每次有什么商业活动如果安排了他与职业选手的表演赛，他一向都颇为乐于参的原因吧</p></blockquote><p><img src="https://wx3.sinaimg.cn/large/628324afly1fubyci0vhwj21s02o0u0x.jpg" alt=""><br><img src="https://wx3.sinaimg.cn/large/628324afly1fubyc8koi9j22io3sw4qt.jpg" alt=""></p><p><strong>最新播报，已经赢了</strong></p><ul><li>赛前采访</li></ul><iframe width="560" height="315" src="https://f.us.sinaimg.cn/000igEO0lx07mWZuc9fO010402004eaY0k010.mp4?label=mp4_ld&template=640x360.28&Expires=1534678345&ssig=I%2F2lFWGYWh&KID=unistore,video" frameborder="0" allowfullscreen></iframe><ul><li>混战中，校长灵活输出，成功拿下LPL职业生涯的首杀！校长是真滴棒！WXZ秀起来了啊</li></ul><iframe width="560" height="315" src="https://f.us.sinaimg.cn/003EHd0Ulx07mX1YhSb6010402005kCk0k010.mp4?label=mp4_ld&template=640x360.28&Expires=1534678405&ssig=9vOrOv74FF&KID=unistore,video" frameborder="0" allowfullscreen></iframe><ul><li>阿水和王思聪赛后采访来啦</li></ul><iframe width="560" height="315" src="https://f.us.sinaimg.cn/00392wlBlx07mX7NaQRO01040200FpgP0k010.mp4?label=mp4_ld&template=640x360.28&Expires=1534678671&ssig=PRV8hnwb1c&KID=unistore,video" frameborder="0" allowfullscreen></iframe><h3 id="天才-第一季"><a href="#天才-第一季" class="headerlink" title="天才 第一季"></a><a href="https://movie.douban.com/subject/26782706/" rel="external nofollow noopener noreferrer" target="_blank">天才 第一季</a></h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fukv4rj2c1j20u018gqv5.jpg" alt=""><br>讲述爱因斯坦的故事.</p><p>我个人看完感受是</p><p><strong>想要成为厉害的人 的话，不仅需要天赋，更需要怀有梦想，且一直朝着梦想前进。</strong></p><p>推荐有空可以看看…</p><h3 id="智能合约史上最大规模攻击手法曝光，盘点黑客团伙作案细节"><a href="#智能合约史上最大规模攻击手法曝光，盘点黑客团伙作案细节" class="headerlink" title="智能合约史上最大规模攻击手法曝光，盘点黑客团伙作案细节"></a><a href="https://mp.weixin.qq.com/s/YBG8YyPwh374HbGWcUKTdQ" rel="external nofollow noopener noreferrer" target="_blank">智能合约史上最大规模攻击手法曝光，盘点黑客团伙作案细节</a></h3><p>其实这个漏洞，我在7月份就看到了，而且当时还在群里发了下…</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fuf7cou3nhj20ss0bwwge.jpg" alt=""></p><p>为啥能攻击可以看这篇<a href="https://www.reddit.com/r/ethereum/comments/916xni/how_to_pwn_fomo3d_a_beginners_guide/" rel="external nofollow noopener noreferrer" target="_blank">how_to_pwn_fomo3d_a_beginners_guide</a></p><p>然后我大概在10号左右才醒悟过来，好像可以攻击赚钱零花钱…</p><p>然后到现在大概赚了几个eth吧…本来上周五能赚一笔大的（有一个类似游戏上线）</p><p>我还订了个闹钟（他9点开始）</p><p>我8点50起来的时候，发现电脑没电。。。充电器丢公司没有带回来。。。</p><p>感觉自己没有暴富的命</p><hr><h1 id="好玩的"><a href="#好玩的" class="headerlink" title="好玩的"></a>好玩的</h1><h3 id="谷歌眼中的你"><a href="#谷歌眼中的你" class="headerlink" title="谷歌眼中的你"></a><a href="https://adssettings.google.com/authenticated?pli=1" rel="external nofollow noopener noreferrer" target="_blank">谷歌眼中的你</a></h3><p>下面这张图是我的，育儿是什么鬼…</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fuf75a8gebj212216ugt1.jpg" alt=""></h2><h1 id="我的奇思妙想"><a href="#我的奇思妙想" class="headerlink" title="我的奇思妙想"></a>我的奇思妙想</h1><h3 id="吃瓜助手"><a href="#吃瓜助手" class="headerlink" title="吃瓜助手"></a><a href="https://www.zhihu.com/pin/1014531860365438976?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=681969768437780480" rel="external nofollow noopener noreferrer" target="_blank">吃瓜助手</a></h3><p>为啥有这个需求是因为 最近知乎撕逼太多了…</p><p>所以需要这个工具，能更方便的吃…</p><p>当然防止怕被封的话，可以放在gitpage上或者ipfs上！</p><blockquote><p>一个新产品idea：吃瓜助手。<br>只提供平台，任何用户可以自己创建吃瓜时间线；<br>各时间线可以互联，可以clone，可以组成树状图；<br>每个事件节点包括文字概述、出处网址、截图；<br>采取众包形式，多管理员维护时间线，允许其他吃瓜群众投稿筛选；<br>可以自动生成八卦时间线图分享到微博微信知乎等，附带本瓜二维码，跳回原地址继续追更；</p></blockquote><blockquote><p>目前有淘瓜、瓜乎、瓜多多等产品名称待选。<br>等做大了还会发行瓜币割瓜秧们。</p></blockquote>]]></content>
    
    <summary type="html">
    
      一些文章
比特币：十年话江湖(下)
比特币：十年话江湖(上)

比特币圈（简称“币圈”）比任何一个圈子都具有江湖习气。构成这个江湖的大多数人都是籍籍无名之辈，他们从一开始就不属于时代主流力量。
所以，他们的行事做派极其草莽，动辄撸串，怒则撕逼。他们的口号是“一币一嫩模”“一币一别墅”，他们的信仰是“守币如守寡”。
传统的互联网圈、金融圈、区块链圈觉得这是一个loser的世界，但是这些人眼高于顶，自命不凡，叛逆心极重。
他们不甘心在BAT画好的版图里闪展腾挪，在他们眼中，比特币这个法律照不到的灰色角落，正是风起于青萍之末时。
格局未定，真假莫辨，十年币圈，财富无限，无论币涨币跌，依旧无限可能。这
    
    </summary>
    
      <category term="每周分享" scheme="https://jin10086.github.io/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>每周分享第 2 期</title>
    <link href="https://jin10086.github.io/2018/08/11/weekly-issue-2/"/>
    <id>https://jin10086.github.io/2018/08/11/weekly-issue-2/</id>
    <published>2018-08-11T13:00:07.000Z</published>
    <updated>2018-08-11T13:51:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一些文章"><a href="#一些文章" class="headerlink" title="一些文章"></a>一些文章</h1><h3 id="张志东Tony：团队需要会发光的人挺身而出"><a href="#张志东Tony：团队需要会发光的人挺身而出" class="headerlink" title="张志东Tony：团队需要会发光的人挺身而出"></a><a href="https://mp.weixin.qq.com/s/sNAyCY72ttM5RPNHJsjmyA" rel="external nofollow noopener noreferrer" target="_blank">张志东Tony：团队需要会发光的人挺身而出</a></h3><blockquote><p>我相信，不快乐的团队是很难创造好的产品的。</p></blockquote><blockquote><p>事实上，在互联网世界，并不存在盛极一世的产品。即使你已经是行业中的第一名，也只是说明你在同行中领先，你的颠覆者会来自于跨界的家伙。他们用的是另外一个维度，比你更符合世界变化的模式。</p></blockquote><h3 id="FCoin的成功是通证经济模式的成功，FCoin的失败是张健个人的失败"><a href="#FCoin的成功是通证经济模式的成功，FCoin的失败是张健个人的失败" class="headerlink" title="FCoin的成功是通证经济模式的成功，FCoin的失败是张健个人的失败"></a><a href="https://mp.weixin.qq.com/s/P2RnuBYyHoQEyOdfo6A6OA" rel="external nofollow noopener noreferrer" target="_blank">FCoin的成功是通证经济模式的成功，FCoin的失败是张健个人的失败</a></h3><blockquote><p>我不知道如果重新来一遍，有没有人可以比他做得更好，可能 99% 的人已经倒在更早的利益关卡，所以他难得可贵，可是我希望，如果重来一遍，他可以错得更少一点。快速的巨大成功加上黑压压的币圈，确实让人容易迷失自己。在上述的原因背后，我看到了一个自大，盲目，膨胀，集权的人，我也从不质疑他的公心，可是这么苦，几天几夜不吃不睡，戴心率分析仪加班，方向错了，受的苦都白受。你等了 10 年才等到天时地利人和，不要让自己的盲目自信摧毁了币圈唯一的希望。FCoin 的成功是通证经济的成功，不要让 FCoin 的失败成为你个人的错误。</p></blockquote><h3 id="全国首张区块链发票来了！报销再也不用贴贴贴发票"><a href="#全国首张区块链发票来了！报销再也不用贴贴贴发票" class="headerlink" title="全国首张区块链发票来了！报销再也不用贴贴贴发票"></a><a href="https://mp.weixin.qq.com/s/6rTddc8NRCEJQe-JHhfVOQ" rel="external nofollow noopener noreferrer" target="_blank">全国首张区块链发票来了！报销再也不用贴贴贴发票</a></h3><p><strong>区块链+发票</strong></p><blockquote><p>可能还有同学没明白：区块链+发票怎么理解？它到底厉害在哪里？<br>简单来说，当你用线上支付的方式完成一笔交易后，你这一笔交易的数据便可视为一张“发票”。<br>而它会通过区块链分布式存储技术，连接你、商户、公司、税务局等每一个发票干系人。<br>这样一张“区块链发票”，每个环节都可追溯、信息不可篡改、数据不会丢失。<br>重点来了：<br>有了它，你结账后就能通过微信自助申请开票、一键报销，发票信息将实时同步至企业和税局，并在线上拿到报销款，报销状态实时可查。</p></blockquote><h3 id="豆瓣网友“独钓寒江雪”的案件破了！终结诈骗独家还原嗅探盗刷全过程！"><a href="#豆瓣网友“独钓寒江雪”的案件破了！终结诈骗独家还原嗅探盗刷全过程！" class="headerlink" title="豆瓣网友“独钓寒江雪”的案件破了！终结诈骗独家还原嗅探盗刷全过程！"></a><a href="https://mp.weixin.qq.com/s/rKy719bTFvt74IbfGKyMGg" rel="external nofollow noopener noreferrer" target="_blank">豆瓣网友“独钓寒江雪”的案件破了！终结诈骗独家还原嗅探盗刷全过程！</a></h3><blockquote><p>前几天，豆瓣网友“独钓寒江雪”的文章《这下一无所有了》刷爆整个网络，她以切身经历讲述了自己在毫不知情的情况下，支付宝、京东及关联银行卡被盗刷的全过程，引发全国网民关注，诸多媒体也对这种“短信嗅探+中间人攻击”的手法进行了解读。深圳龙岗警方对该案高度重视，抽调精兵强将此类新型案件进行串并研判，在一周内抓获了数名犯罪嫌疑人，并缴获了作案设备。</p></blockquote><blockquote><p>我们的资金真的不安全了吗？到底要不要如此恐慌？如何才能有效防范？我们这次让犯罪嫌疑人对该手法进行全程还原，以便寻求最科学的防范手法，同时也督促相关企业立即封堵漏洞</p></blockquote><h3 id="what-happens-when-zh-CN"><a href="#what-happens-when-zh-CN" class="headerlink" title="what-happens-when-zh_CN"></a><a href="https://github.com/skyline75489/what-happens-when-zh_CN/blob/master/README.rst" rel="external nofollow noopener noreferrer" target="_blank">what-happens-when-zh_CN</a></h3><blockquote><p>当你在浏览器中输入 google.com 并且按下回车之后发生了什么？<br>不过我们不再局限于平常的回答，而是想办法回答地尽可能具体，不遗漏任何细节。</p></blockquote><hr><h1 id="不错的项目"><a href="#不错的项目" class="headerlink" title="不错的项目"></a>不错的项目</h1><h3 id="TextQL"><a href="#TextQL" class="headerlink" title="TextQL"></a><a href="https://github.com/dinedal/textql" rel="external nofollow noopener noreferrer" target="_blank">TextQL</a></h3><p>用SQL查询 CSV<br><img src="https://camo.githubusercontent.com/43ca79fc6307d1f80c543bd68a4979a74919013c/68747470733a2f2f7261772e6769746875622e636f6d2f64696e6564616c2f74657874716c2f6d61737465722f74657874716c5f75736167652e676966" alt=""></p><h3 id="可以自动生成-gitignore的网站"><a href="#可以自动生成-gitignore的网站" class="headerlink" title="可以自动生成.gitignore的网站"></a><a href="https://www.gitignore.io/" rel="external nofollow noopener noreferrer" target="_blank">可以自动生成.gitignore的网站</a></h3><p>配合 zsh 使用效果更好哦<br>在 <code>.zshrc</code>文件里面输入<br><code>function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}</code><br>然后添加python的gitignore只需要<code>gi python &gt;&gt; .gitignore</code><br>更多操作请看<a href="https://www.gitignore.io/docs" rel="external nofollow noopener noreferrer" target="_blank">官方文档</a></p><hr><h1 id="好玩的"><a href="#好玩的" class="headerlink" title="好玩的"></a>好玩的</h1><h3 id="最不欢迎路痴的城市"><a href="#最不欢迎路痴的城市" class="headerlink" title="最不欢迎路痴的城市"></a><a href="https://mp.weixin.qq.com/s/6G4oaashwUk72spJFVkf6w" rel="external nofollow noopener noreferrer" target="_blank">最不欢迎路痴的城市</a></h3><blockquote><p>有这么一群人，他们手持GPS导航走在路上，找路标、看方向，直到听到导航提示：您已偏离当前路线……嗯，他们就是路痴。<br>不过，迷路也不能都怪路痴属性，有些城市的路就是不好认。<br>有的城市连指路都难以描述，七拐八扭不知道去了哪儿，比如重庆。但也有城市横平竖直，东南西北要往哪儿走、拐几个弯一目了然，像北京。<br>这都属于道路的“规律性”，可以通过计算被量化。加州大学伯克利分校城市规划专业的博士后吉奥夫·波音（Geoff Boeing）就提供了判定市道路的“规律性”的方法：他用一个小工具（OSMnx）在地图上取样，把城市里面不同方向的道路，按长度叠加，然后在一个玫瑰图上比较各个方向的路的比率，可以说是非常直观了。</p></blockquote><ul><li>北京<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu2bw9t1sij21ak0x84qp.jpg" alt=""></li><li>上海<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu2bwtkmxjj21aa0xw7wh.jpg" alt=""></li><li>西安<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu2bxvcs8mj21ae0xg7rd.jpg" alt=""></li><li>重庆<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu2byt8i1ej21ac0xae5s.jpg" alt=""></li></ul><p>想自己去找更多城市<a href="https://mourner.github.io/road-orientation-map/#6.5/30.204/107.74" rel="external nofollow noopener noreferrer" target="_blank">点这里</a><br>想看源代码<a href="https://github.com/mourner/road-orientation-map" rel="external nofollow noopener noreferrer" target="_blank">点这里</a></p><h3 id="wttr-in"><a href="#wttr-in" class="headerlink" title="wttr.in"></a><a href="https://github.com/chubin/wttr.in" rel="external nofollow noopener noreferrer" target="_blank">wttr.in</a></h3><p>在命令行里面查看天气.<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu6383xi99j21ju12swla.jpg" alt=""></p><p><strong>还可以打开<a href="https://github.com/chubin" rel="external nofollow noopener noreferrer" target="_blank">chubin</a>的主页，可以看能在命令行做很多事情！</strong></p><ul><li><p>做小抄 <a href="https://github.com/chubin/cheat.sh" rel="external nofollow noopener noreferrer" target="_blank">cheat.sh</a><br><img src="https://camo.githubusercontent.com/85cf29460f6af99d0e1ddb467fde7ec32b6e9989/68747470733a2f2f63686561742e73682f66696c65732f64656d6f2d6375726c2e676966" alt=""></p></li><li><p>查币价 <a href="https://github.com/chubin/rate.sx" rel="external nofollow noopener noreferrer" target="_blank"></a><br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu63cb505sj20zc10g41n.jpg" alt=""></p></li></ul><hr><h1 id="我的奇思妙想"><a href="#我的奇思妙想" class="headerlink" title="我的奇思妙想"></a>我的奇思妙想</h1><h3 id="带声音的明信片！"><a href="#带声音的明信片！" class="headerlink" title="带声音的明信片！"></a>带声音的明信片！</h3><p>起源于朋友组织的一次草地音乐节.<a href="https://mp.weixin.qq.com/s/C9Z5DXJvRDJSEaeGR3Yi3Q" rel="external nofollow noopener noreferrer" target="_blank">想给你寄一张小小的音乐卡片</a></p><blockquote><p>一年夏天，被圈圈儿带到一个展览上，发现了有趣的东西。</p></blockquote><blockquote><p>一个大大的电话亭样子的装置，带上耳机，录一段声音，一会儿就会从盒子里吐出一张明信片，明信片上有生成的声波纹和二维码。如果你扫描明信片上的二维码，就能听到刚刚录下的声音。第一反应是觉得有点意思，仔细一想有觉得，那我直接把声音从微信发过去就是咯，干嘛要寄明信片？</p></blockquote><blockquote><p>后来过了些天，我又想起这个装置，却越发觉得有意思。</p></blockquote><blockquote><p>就像你寄一张写了字的明信片，本也可以发电子邮件啊，所以它的意义当然不是传送讯息，而是另一种形式的问候。于是我就想，既然是声音，那就放些音乐进去吧，首先浮现在脑海的场景就是在音乐节你能看到的，很多人拿起微信录一段live给远方的朋友发过去。音质当然是糟糕的，但意义在于另一种情感，是被染色的声音。</p></blockquote><blockquote><p>这样结合起来，如果我们在草地音乐的现场录下歌声，印在卡片上寄出去，会是一种独特而有趣的体验吧。</p></blockquote><p>只是想把这个功能稍微完善下,留下个记录</p><p><strong>如何做</strong>:<br>录制声音后，自动传到后台，生成唯一的网址</p><p>转成二维码后，扫描后，直接打开一个网址，后台自动播放这个音乐。</p><p>并且把语音转成文字，然后一段一段的放出来。</p>]]></content>
    
    <summary type="html">
    
      一些文章
张志东Tony：团队需要会发光的人挺身而出
我相信，不快乐的团队是很难创造好的产品的。

事实上，在互联网世界，并不存在盛极一世的产品。即使你已经是行业中的第一名，也只是说明你在同行中领先，你的颠覆者会来自于跨界的家伙。他们用的是另外一个维度，比你更符合世界变化的模式。

FCoin的成功是通证经济模式的成功，FCoin的失败是张健个人的失败
我不知道如果重新来一遍，有没有人可以比他做得更好，可能 99% 的人已经倒在更早的利益关卡，所以他难得可贵，可是我希望，如果重来一遍，他可以错得更少一点。快速的巨大成功加上黑压压的币圈，确实让人容易迷失自己。在上述的原因背后，我看到了一个自大，
    
    </summary>
    
      <category term="每周分享" scheme="https://jin10086.github.io/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>MAC 如何安装 bsddb3</title>
    <link href="https://jin10086.github.io/2018/08/06/MAC-%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85-bsddb3/"/>
    <id>https://jin10086.github.io/2018/08/06/MAC-如何安装-bsddb3/</id>
    <published>2018-08-06T10:46:33.000Z</published>
    <updated>2018-08-06T11:09:30.108Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>因为今天要写一个爬虫,需要长期爬，需要过滤一些重复的请求。。。</p><p>所以准备使用 <a href="https://github.com/scrapy-plugins/scrapy-deltafetch" rel="external nofollow noopener noreferrer" target="_blank">scrapy-deltafetch</a></p><p>发现，要求必须先安装 <code>bsddb3</code></p><h2 id="如何安装bsddb3"><a href="#如何安装bsddb3" class="headerlink" title="如何安装bsddb3"></a>如何安装bsddb3</h2><p>当然<code>pip install bsddb3</code>直接安装肯定是失败了</p><p>使用 <code>anaconda</code>也失败了…</p><p>看了下官方文档<a href="https://pypi.org/project/bsddb3/" rel="external nofollow noopener noreferrer" target="_blank">bsddb3</a></p><p>找半天，竟然没有找到如何安装…wtf!</p><p>最后直接使用google大法，</p><p>找到了 <a href="https://stackoverflow.com/questions/16003224/installing-bsddb-package-python" rel="external nofollow noopener noreferrer" target="_blank">Installing bsddb package - python</a></p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu06gauh63j215m0ggdil.jpg" alt=""></p><p>然后试了下。。。发现还是不行</p><p>然后找到了 <a href="https://github.com/scrapy-plugins/scrapy-deltafetch/issues/23" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/scrapy-plugins/scrapy-deltafetch/issues/23</a></p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fu06id86xvj211q0ss79e.jpg" alt=""></p><p>然后发现报错，提示我安装的<code>berkeley-db</code>版本过高…</p><p>那我就想如何安装低版本的 <code>berkeley-db</code></p><p>然后一顿搜索，发现 <code>brew</code>支持安装不同版本的，发现竟然只有最新版的…(有一个4.几版本的,安装失败了。。。)</p><p>这时候，很气，甚至都想要用docker来跑了。。。</p><p>最后想想看，还是安装好吧。。。</p><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>手动安装 <code>berkeley-db</code></p><p>搜到一篇文章 <a href="https://qiita.com/kuranosuke-h/items/5f47573814fbfdd8d786" rel="external nofollow noopener noreferrer" target="_blank">Berkeley DB 6.2インストール手順</a>，真是太感谢这篇文章了！！！</p><h2 id="如何安装-bsddb3"><a href="#如何安装-bsddb3" class="headerlink" title="如何安装 bsddb3"></a>如何安装 bsddb3</h2><ol><li><p>先到 <a href="http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html" rel="external nofollow noopener noreferrer" target="_blank">oracle berkeleydb</a>下面指定的版本，推荐使用<code>6.2.32</code>其他的高版本不行…</p></li><li><p>解压到适当的文件夹</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ./db-<span class="number">6</span>.<span class="number">2</span>.<span class="number">32</span>/build_unix</span><br><span class="line">../dist/configure --prefix =/usr/local/Cellar/berkeley-db/<span class="number">6</span>.<span class="number">2</span>.<span class="number">32</span></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></li><li><p>记住上面的 <code>/usr/local/Cellar/berkeley-db/6.2.32</code></p></li><li>去<a href="https://pypi.org/project/bsddb3/#files" rel="external nofollow noopener noreferrer" target="_blank">bsddb3</a>下载 python bsddb3包</li><li>解压后，并 <code>python setup.py install --berkeley-db=/usr/local/Cellar/berkeley-db/6.2.32</code><br>这后面的路径就是 刚刚上面相同的</li></ol><p>然后就安装成功了</p><p>就可以直接 <code>pip install scrapy-deltafetch</code> </p>]]></content>
    
    <summary type="html">
    
      背景
因为今天要写一个爬虫,需要长期爬，需要过滤一些重复的请求。。。

所以准备使用 scrapy-deltafetch

发现，要求必须先安装 bsddb3

如何安装bsddb3
当然pip install bsddb3直接安装肯定是失败了

使用 anaconda也失败了…

看了下官方文档bsddb3

找半天，竟然没有找到如何安装…wtf!

最后直接使用google大法，

找到了 Installing bsddb package - python



然后试了下。。。发现还是不行

然后找到了 https://github.com/scrapy-plugins/scrapy-d
    
    </summary>
    
      <category term="爬虫" scheme="https://jin10086.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>每周分享第 1 期</title>
    <link href="https://jin10086.github.io/2018/08/03/weekly-issue-1/"/>
    <id>https://jin10086.github.io/2018/08/03/weekly-issue-1/</id>
    <published>2018-08-03T11:08:14.000Z</published>
    <updated>2018-08-03T13:30:54.163Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录过去一周，我看到的值得分享的东西，以及我的一些奇思妙想,每周五发布。<a href="http://www.ruanyifeng.com/blog/2018/08/weekly-issue-16.html" rel="external nofollow noopener noreferrer" target="_blank">灵感来自阮一峰</a></p><h3 id="宾夕法尼亚大学提供在线计算机科学硕士学位"><a href="#宾夕法尼亚大学提供在线计算机科学硕士学位" class="headerlink" title="宾夕法尼亚大学提供在线计算机科学硕士学位"></a><a href="https://www.coursera.org/degrees/mcit-penn?utm_medium=email&amp;utm_source=marketing&amp;utm_campaign=_NY5YJBjEeilGMF2QyQgTw#academics" rel="external nofollow noopener noreferrer" target="_blank">宾夕法尼亚大学提供在线计算机科学硕士学位</a></h3><p>Coursera上线了，目前是唯一一所常春藤联盟的大学参加在线授课的制度，完成课程即可获得学位。<br>不需要有计算机背景</p><p>申请要求是：</p><ul><li>A bachelor’s degree from an accredited school or university</li><li>A personal statement</li><li>Two letters of recommendation; from industry or academia</li><li>Unofficial transcripts (translated to English if necessary) from all institutions where course credit was earned; official transcripts will be required if an offer of admission is made.</li><li>Your resume</li><li>TOEFL scores for international applicants and non-U.S. citizens/permanent resident applicants if English is not your native language. More details can be found on the MCIT Online website.</li><li>GRE scores are optional. If submitted, exam results will be taken into consideration in the evaluation process and can have a favorable impact.</li></ul><hr><h1 id="一些文章"><a href="#一些文章" class="headerlink" title="一些文章"></a>一些文章</h1><h3 id="寻找圣杯"><a href="#寻找圣杯" class="headerlink" title="寻找圣杯"></a><a href="https://bihu.com/article/1019497" rel="external nofollow noopener noreferrer" target="_blank">寻找圣杯</a></h3><p>帮助币圈用户充值信仰</p><blockquote><p> 4年内，加密资产总市值逼近或超过黄金，目前黄金的总市值是8万亿美元。<br>4年内，某个智能合约平台的总市值超越世界上市值最高的上市公司，目前是苹果公司，9382亿美元。也就是，单个智能合约平台基础通证的总市值超1万亿美元。<br>8年内，基于区块链的超级应用出现，单个项目的市值超过1万亿美元。</p></blockquote><h3 id="以太坊创始人V神首度连线王峰十问：发布以太坊的时候，我的父亲非常骄傲"><a href="#以太坊创始人V神首度连线王峰十问：发布以太坊的时候，我的父亲非常骄傲" class="headerlink" title="以太坊创始人V神首度连线王峰十问：发布以太坊的时候，我的父亲非常骄傲"></a><a href="https://mp.weixin.qq.com/s/xTPglX1JaYmp2FRDvwrYWg" rel="external nofollow noopener noreferrer" target="_blank">以太坊创始人V神首度连线王峰十问：发布以太坊的时候，我的父亲非常骄傲</a></h3><blockquote><p>我认为，对于任何一个区块链协议来说，最好的办法就是切换或直接使用权益认证（PoS）。ASIC太中心化了，我知道现在比特币领域里，有一个人生产了市场上的绝大多数ASIC矿机，而且已经开始使用这些矿机进行挖矿了。（不知道V神是否暗示比特大陆吴忌寒）。一些工作量认证（PoW）算法开始抵抗ASIC挖矿，而且是去中心化的。</p></blockquote><blockquote><p>但是在今年，我们发现很多抵制ASIC挖矿的加密货币都受到了攻击，这些事件表明，与ASIC挖矿对抗并不是一件容易的事情。具体可以参阅David Vorick写过的一篇文章<a href="https://blog.sia.tech/the-state-of-cryptocurrency-mining-538004a37f9b" rel="external nofollow noopener noreferrer" target="_blank">https://blog.sia.tech/the-state-of-cryptocurrency-mining-538004a37f9b</a> 所以，不管是对ASIC挖矿友好的工作量认证（PoW），还是抵制ASCI挖矿的工作量认证（PoW），其实看上去效果都不是很好，因此我觉得权益认证（PoS）是最好的。</p></blockquote><h3 id="LinkedIn“转折点”音频访谈第八期，对话北漂17年的崔英杰。"><a href="#LinkedIn“转折点”音频访谈第八期，对话北漂17年的崔英杰。" class="headerlink" title="LinkedIn“转折点”音频访谈第八期，对话北漂17年的崔英杰。"></a><a href="https://mp.weixin.qq.com/s/yIQYtKl1LgT_AYpRQVfLJQ" rel="external nofollow noopener noreferrer" target="_blank">LinkedIn“转折点”音频访谈第八期，对话北漂17年的崔英杰。</a></h3><blockquote><p>不同于996模式下的程序员，他在旅行中远程工作，甚至还举家搬到珠海。但他也建议，30岁之前还是应该在大城市多待待。从一个有严格计划的人变得不爱做太长远的规划，他的人生观念因何改变？他如何看待成功？</p></blockquote><p>程序员强烈建议听一下！</p><hr><h1 id="不错的项目"><a href="#不错的项目" class="headerlink" title="不错的项目"></a>不错的项目</h1><h3 id="Photon"><a href="#Photon" class="headerlink" title="Photon"></a><a href="https://github.com/s0md3v/Photon" rel="external nofollow noopener noreferrer" target="_blank">Photon</a></h3><p>Photon是一种快速的网络爬虫，可以提取网址，电子邮件，文件，网站帐户等等。</p><p><img src="https://camo.githubusercontent.com/f25db66909c7a985140f1592d06da2d4ecfdec40/68747470733a2f2f696d6167652e6962622e636f2f6664415375542f53637265656e73686f745f323031385f30375f32375f30305f35355f33332e706e67" alt=""></p><h3 id="certbot"><a href="#certbot" class="headerlink" title="certbot"></a><a href="https://github.com/certbot/certbot" rel="external nofollow noopener noreferrer" target="_blank">certbot</a></h3><p>certbot 可以很方便的帮你生成HTTPS证书</p><h3 id="simpread"><a href="#simpread" class="headerlink" title="simpread"></a><a href="https://github.com/kenshin/simpread" rel="external nofollow noopener noreferrer" target="_blank">simpread</a></h3><p> 让你瞬间进入沉浸式阅读的扩展</p><p> <img src="https://camo.githubusercontent.com/3dcbe5b71cbda36c641e17aee9e9c11500895cde/687474703a2f2f6f6a656335646464352e626b742e636c6f7564646e2e636f6d2f77656c636f6d652d726561646d652d312e706e67" alt=""></p><hr><h1 id="好玩的"><a href="#好玩的" class="headerlink" title="好玩的"></a>好玩的</h1><h3 id="现在跳槽第一个收到你简历的可能是你现在的上司"><a href="#现在跳槽第一个收到你简历的可能是你现在的上司" class="headerlink" title="现在跳槽第一个收到你简历的可能是你现在的上司"></a><a href="https://juejin.im/pin/5b5ed8a5f265da1046bb7799" rel="external nofollow noopener noreferrer" target="_blank">现在跳槽第一个收到你简历的可能是你现在的上司</a></h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftwrbymglfj20j60y2jyv.jpg" alt=""></p><h3 id="教你怎么写-PHP-和-JavaScript-的异常捕获-​​​"><a href="#教你怎么写-PHP-和-JavaScript-的异常捕获-​​​" class="headerlink" title="教你怎么写 PHP 和 JavaScript 的异常捕获 ​​​"></a><a href="https://juejin.im/pin/5b5c25e8092dcb61bd728390" rel="external nofollow noopener noreferrer" target="_blank">教你怎么写 PHP 和 JavaScript 的异常捕获 ​​​</a></h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftwre86xynj20go03odgt.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftwrefhvh4j20gn088wim.jpg" alt=""></p><p>谁来补一个python的.</p><h3 id="Nod-to-the-Rhythm"><a href="#Nod-to-the-Rhythm" class="headerlink" title="Nod to the Rhythm"></a><a href="http://nodtotherhythm.com/?g2OXmPYH=" rel="external nofollow noopener noreferrer" target="_blank">Nod to the Rhythm</a></h3><p>上传一张照片，就可以让照片跟着节奏动起来了<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftwrjgigqdj20lc0sg7wh.jpg" alt=""></p><hr><h1 id="我的奇思妙想"><a href="#我的奇思妙想" class="headerlink" title="我的奇思妙想"></a>我的奇思妙想</h1><h3 id="弄一个新的b站，建立在ipfs之上"><a href="#弄一个新的b站，建立在ipfs之上" class="headerlink" title="弄一个新的b站，建立在ipfs之上"></a>弄一个新的b站，建立在ipfs之上</h3><p>为啥有这个想法呢，主要是看到了<a href="https://www.zhihu.com/question/284623285" rel="external nofollow noopener noreferrer" target="_blank">如何看待 bilibili 将播放量过千万的鬼畜视频《蕉忍疾风传》封禁？</a></p><blockquote><p>谁出来整个bilifans大家去蹲着呗（滑稽）<br>引用来自 如何看待 bilibili 将播放量过千万的鬼畜视频《蕉忍疾风传》封禁？ - 王不想起名的回答 - 知乎<br><a href="https://www.zhihu.com/question/284623285/answer/447840366" rel="external nofollow noopener noreferrer" target="_blank">https://www.zhihu.com/question/284623285/answer/447840366</a></p></blockquote><p><strong>为啥用ipfs呢？</strong><br>主要是穷，用ipfs的话，就不需要买很多流量了。。。</p><p><strong>具体怎么做？</strong><br>发起一个”ICO”,这个ICO不是要钱，而是要人…（二次元的程序员）</p><p>然后把所有的代码都开源在github，视频存在ipfs。相当于一个去中心化的B站…</p><p>视频过不过审，做不做广告，之类的 都是大家投票决定的。</p><h3 id="做一个python-inspect"><a href="#做一个python-inspect" class="headerlink" title="做一个python inspect"></a>做一个python inspect</h3><p>主要是看到 <a href="https://github.com/danielstjules/jsinspect" rel="external nofollow noopener noreferrer" target="_blank">jsinspect</a><br>Detect copy-pasted and structurally similar code</p>]]></content>
    
    <summary type="html">
    
      这里记录过去一周，我看到的值得分享的东西，以及我的一些奇思妙想,每周五发布。灵感来自阮一峰

宾夕法尼亚大学提供在线计算机科学硕士学位
Coursera上线了，目前是唯一一所常春藤联盟的大学参加在线授课的制度，完成课程即可获得学位。
不需要有计算机背景

申请要求是：

 * A bachelor’s degree from an accredited school or university
 * A personal statement
 * Two letters of recommendation; from industry or academia
 * Unofficial tra
    
    </summary>
    
      <category term="每周分享" scheme="https://jin10086.github.io/categories/%E6%AF%8F%E5%91%A8%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>教你买书如何折上折</title>
    <link href="https://jin10086.github.io/2018/07/28/%E6%95%99%E4%BD%A0%E4%B9%B0%E4%B9%A6%E5%A6%82%E4%BD%95%E6%8A%98%E4%B8%8A%E6%8A%98/"/>
    <id>https://jin10086.github.io/2018/07/28/教你买书如何折上折/</id>
    <published>2018-07-28T14:08:58.000Z</published>
    <updated>2018-07-28T14:42:58.007Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近一直在学经济学方面的东西,kindle里面已经买了几本电子书。</p><p>但是呢，电子书看着还是没有那么的舒服，所以就准备打开“多抓鱼”买几本旧书…</p><p>发现有一些竟然没有，有一些书挺贵的。。。（6折）</p><h2 id="当当"><a href="#当当" class="headerlink" title="当当"></a>当当</h2><p>然后就打开了当当网，刚好有满减活动…</p><p>满200-100，满100-50</p><p>然后就一顿找书，发现想买的几本都在做活动…</p><h2 id="如何折上折？"><a href="#如何折上折？" class="headerlink" title="如何折上折？"></a>如何折上折？</h2><p>折上折的原理是啥呢？</p><p>只要你有微信公众号，</p><p>并且有“电影图书”的功能。。。如下图</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftpxpbt5gej20fu0pydgl.jpg" alt=""></p><p>那么基本上当当有的书，这边都可以打折（如下图）</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftpxqnvxxfj21ji17ejzh.jpg" alt=""></p><h2 id="晒单"><a href="#晒单" class="headerlink" title="晒单"></a>晒单</h2><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftpxsgl2zoj20u01hch1p.jpg" alt=""><br>一共买了5本书（故事会是凑单的…)</p><p>满200-100，然后再加上微信这个“电影图书”的9折，真是超级便宜…</p><p>无论当当有没有活动，都可以用这个“电影图书”功能，打9折…</p><!-- ## 吐槽时间...因为好久没有写爬虫相关的东西了，其实微信号一直想改名...然而发现改不了...(因为我只有招商的卡，认证一直过不了...) --><h2 id="关于读书"><a href="#关于读书" class="headerlink" title="关于读书"></a>关于读书</h2><p>公众号大概弄了两次送书活动，都是清华大学出版社赞助的.感谢王编辑.</p><p>但是发现，其实好像送书的活动，和我想的好像不一样…</p><p>这几天一直在想</p><p>送书的目的是啥？那现在达到了么？</p><h3 id="送书的目的"><a href="#送书的目的" class="headerlink" title="送书的目的"></a>送书的目的</h3><p><strong>应该是让大家看到想看的书吧.</strong></p><p>但是每次都是送的固定几本书,感觉其实有些人并没有拿到想要的书…</p><p>这样的话，其实拿到书后，可能并没有看…(甚至会觉得放着占地方)</p><h3 id="如何更好的送书"><a href="#如何更好的送书" class="headerlink" title="如何更好的送书"></a>如何更好的送书</h3><p>因为最近一直在做区块链相关的事情，所以个人想法是这样的…</p><p>每半个月抽10个人，送出10本书.(书价格在200以内，选自己喜欢的书)</p><p>拿到书的人，必须在3个月内写一篇以上的读后感（500字以上） 这只是保证了拿到书的人 一定会看</p><p>那么经费从哪里来呢？</p><ol><li>大家赞赏的钱</li><li>公众号广告费</li><li>其他大佬赞助…</li></ol><p>这只是我自己一个人想的，欢迎对这个感兴趣的人，加群一起讨论下（发广告的别进，进了以后，所有的活动都拉黑你…)<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ftpydelne6j20kw0r243a.jpg" alt=""></p><h3 id="公众号后续更新计划…"><a href="#公众号后续更新计划…" class="headerlink" title="公众号后续更新计划…"></a>公众号后续更新计划…</h3><p>爬虫的内容 有兴趣写的时候会写的…</p><p>其他不定时更新一些 刚好碰到的一些好玩的东西吧…</p><p>不过，从下周开始，每周都会出一个“每周分享”，大概就是我最近一周看到一些好玩，或者觉得还不错的文章…如果有时候忘了更新的话，每次拿出100元，放到送书基金里面…</p>]]></content>
    
    <summary type="html">
    
      背景
最近一直在学经济学方面的东西,kindle里面已经买了几本电子书。

但是呢，电子书看着还是没有那么的舒服，所以就准备打开“多抓鱼”买几本旧书…

发现有一些竟然没有，有一些书挺贵的。。。（6折）

当当
然后就打开了当当网，刚好有满减活动…

满200-100，满100-50

然后就一顿找书，发现想买的几本都在做活动…

如何折上折？
折上折的原理是啥呢？

只要你有微信公众号，

并且有“电影图书”的功能。。。如下图



那么基本上当当有的书，这边都可以打折（如下图）



晒单

一共买了5本书（故事会是凑单的…)

满200-100，然后再加上微信这个“电影图书”的9折，真是
    
    </summary>
    
      <category term="读书" scheme="https://jin10086.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>我的审判</title>
    <link href="https://jin10086.github.io/2018/07/25/%E6%88%91%E7%9A%84%E5%AE%A1%E5%88%A4/"/>
    <id>https://jin10086.github.io/2018/07/25/我的审判/</id>
    <published>2018-07-25T02:52:46.000Z</published>
    <updated>2018-07-25T02:54:33.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>正常来说，如果要做一个审判，必须要政府支持…</p><p>但是呢，最近很多企业的一些事情，可能政府并不能很好的裁决…</p><p>所以，诞生了我的审判</p><h2 id="什么是我的审判"><a href="#什么是我的审判" class="headerlink" title="什么是我的审判"></a>什么是我的审判</h2><p>我们每个人都可以自由决定是否可以和某某交朋友<br>也可以自由决定是否进某家公司</p><p>那么，对于那些伤害我的企业，我也就可以不进他的公司，不和他做朋友.<br>甚至可以歧视他以及他的朋友<br>这就是我的审判的基础.</p><h2 id="共识"><a href="#共识" class="headerlink" title="共识"></a>共识</h2><p>可能我个人对某个人,某个公司进行审判的话，是起不了什么作用的.</p><p>但是呢,如果大家都能形成共识的话，那么这个力量一定是巨大的.</p><p>无论他在zf有多大背景，无论他有多谨慎，无论他有多少临时工.</p><p>就算在法律上，对他的惩罚很小。但是在我们每个人来说，对他的审判会尽可能的公平.</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>我的审判的目标应该不是比较小的事情，而是一些危害了大部分利益的事情</p><p>如 三鹿奶粉，红黄蓝幼儿园，最近的疫苗事情,等等.</p><p>在这些事情上，我想大部分人都能形成共识.</p><p>如果只是涉及到了个人利益相关的事情，可能很难形成一个共识…</p><p>我们的目标是：让坏人作恶的成本增加，不仅需要考虑法律上面的事情，还需要考虑道德方面的事情.</p><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>可能在未来的某一天，某个人在做坏事情之前，不仅会考虑到法律上面的东西，</p><p>也会想到 如果做了这件事，会不会变的没朋友，变得无法在这个社会上生存下去…</p><h2 id="如何帮助这个项目"><a href="#如何帮助这个项目" class="headerlink" title="如何帮助这个项目"></a>如何帮助这个项目</h2><ul><li>让更多人知道该项目</li><li>增加审判的人</li><li>增加审判人的相关新闻以及相关资料</li><li>和大家一起，是真正的审判这些人</li></ul><p>所有的文件都在 <a href="https://github.com/My-Trial/My-Trial" rel="external nofollow noopener noreferrer" target="_blank">My-Trial</a></p>]]></content>
    
    <summary type="html">
    
      背景
正常来说，如果要做一个审判，必须要政府支持…

但是呢，最近很多企业的一些事情，可能政府并不能很好的裁决…

所以，诞生了我的审判

什么是我的审判
我们每个人都可以自由决定是否可以和某某交朋友
也可以自由决定是否进某家公司

那么，对于那些伤害我的企业，我也就可以不进他的公司，不和他做朋友.
甚至可以歧视他以及他的朋友
这就是我的审判的基础.

共识
可能我个人对某个人,某个公司进行审判的话，是起不了什么作用的.

但是呢,如果大家都能形成共识的话，那么这个力量一定是巨大的.

无论他在zf有多大背景，无论他有多谨慎，无论他有多少临时工.

就算在法律上，对他的惩罚很小。但是在我们每个
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>牛逼的班科协议</title>
    <link href="https://jin10086.github.io/2018/07/08/%E7%89%9B%E9%80%BC%E7%9A%84%E7%8F%AD%E7%A7%91%E5%8D%8F%E8%AE%AE/"/>
    <id>https://jin10086.github.io/2018/07/08/牛逼的班科协议/</id>
    <published>2018-07-08T05:49:45.000Z</published>
    <updated>2018-07-08T06:29:55.515Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>这段时间炒作EOS内存很火.</p><p>于是了解了下 买卖内存后面的班科协议…</p><h2 id="班科协议"><a href="#班科协议" class="headerlink" title="班科协议"></a>班科协议</h2><blockquote><p>“双重需求巧合”这一表述由杰文斯(Jevons)于 1875 年首次 提出。“以物换物的首要难题就是碰巧找到两个人，他们各自拥有 的物品刚好是对方所需要的。会有很多人有需求，又有很多人拥有能 满足这些需求的物品，但要通过物物交换的机制完成双方的物品交 换，必须要求实现双重巧合，实际上这很难发生。”</p></blockquote><blockquote><p>我们生活在这样一个世界里:任何人都可以轻松的发布文章、歌曲或者视频; 任何人都可以创建一个交流群，也可以经营一个在线商城;我们甚至开始见证“用 户自定义货币”诞生。<br>数百年来，不同类型的价值储备(以下称“货币”)一直以钞票、债券、股 票、礼品卡、商家积分和社区货币等形式发行和流通。 接下来，出现了第一个 去中心化的的数字货币，比特币。各种新型数字加密货币的发行浪潮紧随其后。 最近，我们见证了又一新兴的、使用智能合约技术的、通过众筹(ICO)发行的 资产类别，“代币”的崛起。<br>然而，这些货币虽实质上已经形成了“价值互联网”，却未能如“信息互联 网”一般顺畅的相互联接。当英特网节点 (IXs) 的交换机们把信息互联网联结 起来的时候，货币价值网络中“交换机”的角色实际上在各大交易所活跃着的交 易者们扮演着。<br><strong>当前的货币交换模式有一个严重的障碍，即需要一定的交易量来实现市场 流动性。这使得小规模货币，比如社区货币、商家积分及各种自定义代币等， 几乎不可能通过市场发现合理兑换价格并与主流货币进行交换。</strong></p></blockquote><h3 id="班科协议解决了哪些问题？"><a href="#班科协议解决了哪些问题？" class="headerlink" title="班科协议解决了哪些问题？"></a>班科协议解决了哪些问题？</h3><p>如上面所说,双重需求巧合 很难发生.<br>目前的货币交换模式有一个严重的障碍,即需要一定的交易量来实现市场 流动性。</p><p>举个简单的例子,假如我想购买ETH，那么我必须等到有人卖ETH后，我才能买到…<br>班科协议就是解决了<strong>双重需求巧合</strong>的问题</p><h3 id="怎么解决的？"><a href="#怎么解决的？" class="headerlink" title="怎么解决的？"></a>怎么解决的？</h3><p>具体请看<a href="https://storage.googleapis.com/website-bancor/2018/04/01ba8253-bancor_protocol_whitepaper_en.pdf" rel="external nofollow noopener noreferrer" target="_blank">班科协议白皮书</a></p><h2 id="EOS的优点"><a href="#EOS的优点" class="headerlink" title="EOS的优点"></a>EOS的优点</h2><p>这几天如果有买卖过EOS ram的同学应该能感觉出来,交易速度很快.而且所有的购买都是直接和合约交互,所有的代币都不需要转到某个别的账号</p><h2 id="FT"><a href="#FT" class="headerlink" title="FT"></a>FT</h2><p>FT 主打交易及挖矿的思路.</p><h2 id="整合？"><a href="#整合？" class="headerlink" title="整合？"></a>整合？</h2><h3 id="目前ETH上交易所的状况"><a href="#目前ETH上交易所的状况" class="headerlink" title="目前ETH上交易所的状况."></a>目前ETH上交易所的状况.</h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1ft2frs3r69j225y0vg7ef.jpg" alt=""></p><p>可以看到每天的成交金额有5000ETH左右.</p><p>数据来源<a href="https://dappradar.com/category/exchanges?sortBy=balance&amp;order=desc" rel="external nofollow noopener noreferrer" target="_blank">https://dappradar.com/category/exchanges?sortBy=balance&amp;order=desc</a></p><h3 id="班科-EOS-FT"><a href="#班科-EOS-FT" class="headerlink" title="班科+EOS+FT"></a>班科+EOS+FT</h3><p>如果把班科协议+EOS+FT 的优势结合起来,那么是不是会做成一个超级牛逼的交易所.一个真正的去中心化的交易所.</p><p>而且用户体验和现在所有的中心化交易所并没有什么差别.</p>]]></content>
    
    <summary type="html">
    
      背景
这段时间炒作EOS内存很火.

于是了解了下 买卖内存后面的班科协议…

班科协议
“双重需求巧合”这一表述由杰文斯(Jevons)于 1875 年首次 提出。“以物换物的首要难题就是碰巧找到两个人，他们各自拥有 的物品刚好是对方所需要的。会有很多人有需求，又有很多人拥有能 满足这些需求的物品，但要通过物物交换的机制完成双方的物品交 换，必须要求实现双重巧合，实际上这很难发生。”

我们生活在这样一个世界里:任何人都可以轻松的发布文章、歌曲或者视频; 任何人都可以创建一个交流群，也可以经营一个在线商城;我们甚至开始见证“用 户自定义货币”诞生。
数百年来，不同类型的价值储备(以下称“货币
    
    </summary>
    
      <category term="区块链" scheme="https://jin10086.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="班科协议" scheme="https://jin10086.github.io/tags/%E7%8F%AD%E7%A7%91%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="交易所" scheme="https://jin10086.github.io/tags/%E4%BA%A4%E6%98%93%E6%89%80/"/>
    
      <category term="FT" scheme="https://jin10086.github.io/tags/FT/"/>
    
      <category term="BANCOR" scheme="https://jin10086.github.io/tags/BANCOR/"/>
    
  </entry>
  
  <entry>
    <title>你的EOS 账号安全谁来保护？</title>
    <link href="https://jin10086.github.io/2018/06/15/%E4%BD%A0%E7%9A%84EOS-%E8%B4%A6%E5%8F%B7%E5%AE%89%E5%85%A8%E8%B0%81%E6%9D%A5%E4%BF%9D%E6%8A%A4%EF%BC%9F/"/>
    <id>https://jin10086.github.io/2018/06/15/你的EOS-账号安全谁来保护？/</id>
    <published>2018-06-15T03:46:49.000Z</published>
    <updated>2018-06-15T03:47:16.574Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近EOS 有发现私钥被盗事件，详情请看&gt;&gt;&gt; <a href="https://bihu.com/article/654254" rel="external nofollow noopener noreferrer" target="_blank">https://bihu.com/article/654254</a></p><p>但是呢，现在发现被盗的也无所谓…</p><p>还是可以找回来的，因为主网没有上线，黑客无法把代币转到自己的账号…</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fsazmps7iej21hy0x049z.jpg" alt=""></p><h2 id="EOS主网上线了"><a href="#EOS主网上线了" class="headerlink" title="EOS主网上线了"></a>EOS主网上线了</h2><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fsboq84fnej20ku1121j2.jpg" alt=""></p><p>昨天晚上主网正式上线了，上线三天后，就可以自由交易代币了，也就是黑客可以转账了…</p><p>如果钱转到了他的个人账号，那么基本上就是找不回来了…</p><h2 id="如何保护自己的账号安全"><a href="#如何保护自己的账号安全" class="headerlink" title="如何保护自己的账号安全"></a>如何保护自己的账号安全</h2><ul><li>如果你发现自己的EOS被盗了，也就是秘钥被更改过了，那么按照上面的链接 申请，基本上可以找回来</li></ul><p>那么 发现秘钥没有被修改的，一定就是安全的么…</p><p>我觉得反而是最不安全的…</p><p><strong>因为你不知道有没有人拿到你的私钥…</strong></p><p>黑客完全可以等到可以转账了后，直接把你的钱转走…</p><p>而不是提前暴露自己…</p><h3 id="那么怎么做呢？"><a href="#那么怎么做呢？" class="headerlink" title="那么怎么做呢？"></a>那么怎么做呢？</h3><p>推荐1. 修改自己的秘钥 （最好在这3天内）</p><p>这种方式是最好的，因为你修改了后，黑客就算拿到了 你之前的秘钥，也是没用的..</p><p>当然你要找个安全的地方 修改私钥…(别又被盗了…)</p><p>推荐2. 可以转账后，把钱转到一个安全的账号里面…</p><p><strong>如果你的代币都在交易所，那么你放心吧，就算被盗了交易所应该也会陪的…</strong></p><h2 id="哪些人一定要这样做呢"><a href="#哪些人一定要这样做呢" class="headerlink" title="哪些人一定要这样做呢"></a>哪些人一定要这样做呢</h2><ul><li>EOS账号不是在 eos.io 生成的(也就是不是在官网生成的！）</li><li>EOS账号不是在本地生成的…</li></ul><p>简单的讲，就是 假如你的EOS账号不是在 官网（eos.io) 或者本地 自己写的程序生成的（别人写的也可能有后门）</p><p>那么 最好还是 修改下秘钥…这种是最安全的…</p><p>祝大家的币都是安全的.</p>]]></content>
    
    <summary type="html">
    
      背景
最近EOS 有发现私钥被盗事件，详情请看&gt;&gt;&gt; https://bihu.com/article/654254

但是呢，现在发现被盗的也无所谓…

还是可以找回来的，因为主网没有上线，黑客无法把代币转到自己的账号…



EOS主网上线了


昨天晚上主网正式上线了，上线三天后，就可以自由交易代币了，也就是黑客可以转账了…

如果钱转到了他的个人账号，那么基本上就是找不回来了…

如何保护自己的账号安全
 * 如果你发现自己的EOS被盗了，也就是秘钥被更改过了，那么按照上面的链接 申请，基本上可以找回来

那么 发现秘钥没有被修改的，一定就是安全的么…

我觉得反而是最不安全的…

因
    
    </summary>
    
      <category term="区块链" scheme="https://jin10086.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
      <category term="EOS" scheme="https://jin10086.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/EOS/"/>
    
    
  </entry>
  
  <entry>
    <title>EOS hackathon 香港总结</title>
    <link href="https://jin10086.github.io/2018/06/14/EOS-hackathon-%E9%A6%99%E6%B8%AF%E6%80%BB%E7%BB%93/"/>
    <id>https://jin10086.github.io/2018/06/14/EOS-hackathon-香港总结/</id>
    <published>2018-06-13T16:29:03.000Z</published>
    <updated>2018-06-13T17:04:00.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>上周末去参加了EOS在香港举行的黑客松…</p><p>第一次去香港,发现香港住的地方真小…物价好贵…麦当劳都吃不起…</p><h2 id="选题"><a href="#选题" class="headerlink" title="选题"></a>选题</h2><p>因为本次黑客松是自己选题的，所以很早就一直在想要做什么…</p><p>个人参加过很多次黑客松的经验来看，觉得一个好的想法,就成功了一半呢!</p><h3 id="想法的由来"><a href="#想法的由来" class="headerlink" title="想法的由来"></a>想法的由来</h3><p>在飞机上 看书的时候[增长黑客],有看到 关于定位的，大概是一个利用定于做的小游戏，就突然想到…本次黑客松我们也可以基于定位来做，可以说叫做 线上与线下的结合，让区块链结合现实来做一些东西，感觉还是蛮好玩的…</p><h3 id="确定项目"><a href="#确定项目" class="headerlink" title="确定项目"></a>确定项目</h3><p>吧项目和小岛说了后，觉得还可以…刚好上周在薅星云的羊毛，然后发现了一款星云上面的红包dapp，用的人还是蛮多的。就准备做基于 LBS的红包</p><p>当然（我们还有另外几个选题，大家讨论后被reject了…)</p><h3 id="产品功能"><a href="#产品功能" class="headerlink" title="产品功能"></a>产品功能</h3><p>确定做后，我们大概整理了下需要实现的功能</p><ol><li>最基础的版本 &gt;&gt;&gt; 发红包后，生成指定链接，然后点开链接就能抢</li><li>在1上面扩展，可以指定坐标，必须要在坐标多少米内，才能领取这个红包</li><li>在2上面扩展，可以指定红包开始抢的时间（必须要在指定时间后才可以抢）</li><li>附加功能，可以指定白名单内的用户才能抢</li></ol><h3 id="产品的使用场景"><a href="#产品的使用场景" class="headerlink" title="产品的使用场景"></a>产品的使用场景</h3><ol><li>普通红包就不用说了</li><li>2+4 可以诱导某人必须出去活动，比如说 我想要让我儿子不那么宅，我就可以给他发一个白名单红包，并且把地点设置在某个地方（如中山公园），那么他想要抢到这个红包，必须到中山公园去…</li><li>2+3+4 可以做为广告来用，如 我肯德基可以做一个预售，明天10点，在我店附近可以领到我们发的红包…</li></ol><h2 id="coding"><a href="#coding" class="headerlink" title="coding"></a>coding</h2><p>因为我是c++（基本上不会）<br>所以，所有的代码都是小岛写的<br>我就负责测试环境这类的(打杂)</p><p>coding中发现的一些问题</p><p>一个最大的坑是</p><p>假如合约要给你打钱，也就是送币…<br>发现一直赠送不成功，显示没有授权…<br>查文档搜索都没有找到怎么做…</p><p>然后问了现场的人指导老师，终于才搞定了…（原来这个代码刚改的，文档还没有写，所以找不到！！！</p><p>解法是，需要你授权给我合约…（很奇怪的逻辑…我给你送钱，还需要你授权给我合约，这样我才能送钱给你。。。）</p><p>但是我们试了下还是有点问题…弄了半天，当时都快要崩溃了…最后试出来了…</p><p>解法是 <strong>合约给合约自己授权</strong> 感觉很无语…（感觉来黑客松就是给EOS做测试来的…</p><h2 id="最终结果"><a href="#最终结果" class="headerlink" title="最终结果"></a>最终结果</h2><p>最后，我们实现了上面我们列出的功能，然后竟然前10都没有进…</p><p>反正很不开心,毕竟努力了…</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>失败了，总需要想想为啥会失败，后续才会做的更好…</p><p>我认为我们的dapp还是挺好玩的,应该能吸引到人。不过老外没有发红包的习惯，所以会不会他觉得是很好玩，但是感觉没什么用。。。（文化差异…</p><p>进前10 的很多产品基本上 和EOS的生态有关，所以 参加的时候，应该想想<strong>主办方为啥想组织这个活动</strong></p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fsa1oj03kkj21400u0b2a.jpg" alt="上一张合照"></p>]]></content>
    
    <summary type="html">
    
      背景
上周末去参加了EOS在香港举行的黑客松…

第一次去香港,发现香港住的地方真小…物价好贵…麦当劳都吃不起…

选题
因为本次黑客松是自己选题的，所以很早就一直在想要做什么…

个人参加过很多次黑客松的经验来看，觉得一个好的想法,就成功了一半呢!

想法的由来
在飞机上 看书的时候[增长黑客],有看到 关于定位的，大概是一个利用定于做的小游戏，就突然想到…本次黑客松我们也可以基于定位来做，可以说叫做 线上与线下的结合，让区块链结合现实来做一些东西，感觉还是蛮好玩的…

确定项目
吧项目和小岛说了后，觉得还可以…刚好上周在薅星云的羊毛，然后发现了一款星云上面的红包dapp，用的人还是蛮多的。
    
    </summary>
    
      <category term="hackathon" scheme="https://jin10086.github.io/categories/hackathon/"/>
    
    
  </entry>
  
  <entry>
    <title>2018学习计划</title>
    <link href="https://jin10086.github.io/2018/06/14/2018%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <id>https://jin10086.github.io/2018/06/14/2018学习计划/</id>
    <published>2018-06-13T16:23:05.000Z</published>
    <updated>2018-06-13T16:28:49.986Z</updated>
    
    <content type="html"><![CDATA[<p>最近发现自己大概半年没有什么进步,也不知道自己在干嘛…</p><p>上周末去香港EOS hackathon的时候，发现了自己的几个问题…</p><ul><li>英语太差,感觉完全没法交流啊…</li><li>太弱了…</li></ul><p>给自己定下个小目标</p><p>每个月看一本书，并写下读书笔记<br>每天最少背10个单次</p>]]></content>
    
    <summary type="html">
    
      最近发现自己大概半年没有什么进步,也不知道自己在干嘛…

上周末去香港EOS hackathon的时候，发现了自己的几个问题…

 * 英语太差,感觉完全没法交流啊…
 * 太弱了…

给自己定下个小目标

每个月看一本书，并写下读书笔记
每天最少背10个单次
    
    </summary>
    
      <category term="学习计划" scheme="https://jin10086.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
    
  </entry>
  
  <entry>
    <title>一行代码损失了？？？RMB</title>
    <link href="https://jin10086.github.io/2018/05/24/%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E6%8D%9F%E5%A4%B1%E4%BA%86%EF%BC%9F%EF%BC%9F%EF%BC%9FRMB/"/>
    <id>https://jin10086.github.io/2018/05/24/一行代码损失了？？？RMB/</id>
    <published>2018-05-24T06:50:38.000Z</published>
    <updated>2018-05-24T06:55:00.833Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>又发现一个ERC20 超级大的漏洞</p><p>这个漏洞严重到什么情况呢？</p><p><strong>你的钱不再是你的钱，任何人都可以把你的钱转走，你也可以转走任何人的钱</strong></p><p>那笔操作记录是 <a href="https://etherscan.io/tx/0x9a6a0ba68214db82ec6fd12ee3a6b4cf1143ec963974d7a5edf97e08b6c482ca" rel="external nofollow noopener noreferrer" target="_blank">0x9a6a0ba68214db82ec6fd12ee3a6b4cf1143ec963974d7a5edf97e08b6c482ca</a></p><p><img src="https://s1.ax1x.com/2018/05/24/CW30Qf.png" alt="CW30Qf.png"><br>下面我来带大家看看，黑客是如何实现的！</p><p>我们可以看到执行的方法是 <code>transferFrom</code></p><p>那这个方法是干嘛的呢？（从某个人 转钱到 另外一个人 ）</p><p>这个方法有一个配套的方法<code>approve</code>，你授权某个人用多少你的钱。。。</p><p>所以，这两个方法的使用场景是，</p><p>举个例子：</p><p>我授权我儿子使用我的100块钱，那我先调用<code>approve</code><br>然后 我儿子要用钱的时候，调用<code>transferFrom</code>来用我的钱，当然用一次少一次（而且每次用的钱不能超过我授权的钱）</p><h2 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) &#123;</span><br><span class="line">    /// same as above</span><br><span class="line">    require(_to != 0x0);</span><br><span class="line">    require(balances[_from] &gt;= _value);</span><br><span class="line">    require(balances[_to] + _value &gt; balances[_to]);</span><br><span class="line"></span><br><span class="line">    uint previousBalances = balances[_from] + balances[_to];</span><br><span class="line">    balances[_from] -= _value;</span><br><span class="line">    balances[_to] += _value;</span><br><span class="line">    allowed[_from][msg.sender] -= _value;</span><br><span class="line">    Transfer(_from, _to, _value);</span><br><span class="line">    assert(balances[_from] + balances[_to] == previousBalances);</span><br><span class="line"></span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个方法会传入三个参数</p><ol><li>_from :在用谁的钱</li><li>_to : 把钱给谁</li><li>_value : 准备用多少钱</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">require(_to != 0x0);</span><br><span class="line">require(balances[_from] &gt;= _value);</span><br><span class="line">require(balances[_to] + _value &gt; balances[_to]);</span><br></pre></td></tr></table></figure><p>这三行是一些强制要求</p><ol><li>你不能把钱转给0x0,也就是空地址</li><li>你在用谁的钱（那么这个人的余额一定要大于 你要用的钱）</li><li>你转给的那个人钱，那么那个人的余额一定要大于 之前的余额（也就是不能转个-1之类的，导致他余额反而变少了）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uint previousBalances = balances[_from] + balances[_to];</span><br><span class="line">balances[_from] -= _value;</span><br><span class="line">balances[_to] += _value;</span><br></pre></td></tr></table></figure><p>这三行</p><ol><li>算出两个人余额的总数</li><li>from 那个人的余额 - value</li><li>to 那个人的余额 + value</li></ol><p><code>allowed[_from][msg.sender] -= _value;</code></p><p>这一行我们分解下<br><code>allowed[_from][msg.sender]</code> 是 当前方法调用的人（msg.sender）可以使用(_from) 多少钱</p><p>也就是假如 我授权了我儿子100块，那么 </p><p>allowed[我的地址][msg.sender] = 100(这边的msg.sender 需要是我儿子的地址，如果是别人的话，我没有授权给他，则是0 </p><p>所以这一行原本的意思是 (我儿子用了多少授权的金额，那么总授权金额需要 减掉 被用掉的）</p><p>但是呢。。。因为没用用safemath…导致任何人都能通过这一行（也就是 0- value)</p><p>0-value是不会报错的（当然如果用safemath的话，是会报错的。。。）</p><p>所以呢，只要你找到一个有钱人的地址，，，然后就可以吧他的钱全部转给任何账户。。。</p><p>下面的代码就没有意义了，不需要解释了。。。</p><p>而且他这个合约 没有暂停的方法。。。</p><p>导致现在任何人都可以调用这个合约。。。</p><h2 id="合约的问题"><a href="#合约的问题" class="headerlink" title="合约的问题"></a>合约的问题</h2><ol><li>当然是做加减乘除的时候没有用safemath</li><li>逻辑还有一个问题</li></ol><p>正常来说，应该需要加一个 判断，被授权的金额 不能大于 要发送的金额。。。</p><p><code>require(allowed[_from][msg.sender] &gt;= _value);</code></p><p>这样的话 后面也就不会有这些事情了。。。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我发现了 攻击这个合约的人 已经攻击了很多合约了！！！<br><img src="https://s1.ax1x.com/2018/05/24/CW3By8.png" alt="CW3By8.png"><br>这一些币大家就别抄底了!</p>]]></content>
    
    <summary type="html">
    
      背景
又发现一个ERC20 超级大的漏洞

这个漏洞严重到什么情况呢？

你的钱不再是你的钱，任何人都可以把你的钱转走，你也可以转走任何人的钱

那笔操作记录是 0x9a6a0ba68214db82ec6fd12ee3a6b4cf1143ec963974d7a5edf97e08b6c482ca


下面我来带大家看看，黑客是如何实现的！

我们可以看到执行的方法是 transferFrom

那这个方法是干嘛的呢？（从某个人 转钱到 另外一个人 ）

这个方法有一个配套的方法approve，你授权某个人用多少你的钱。。。

所以，这两个方法的使用场景是，

举个例子：

我授权我儿子使用我的1
    
    </summary>
    
      <category term="区块链" scheme="https://jin10086.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>如何用myetherwallet 来玩智能合约</title>
    <link href="https://jin10086.github.io/2018/04/26/%E5%A6%82%E4%BD%95%E7%94%A8myetherwallet-%E6%9D%A5%E7%8E%A9%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    <id>https://jin10086.github.io/2018/04/26/如何用myetherwallet-来玩智能合约/</id>
    <published>2018-04-26T12:05:47.000Z</published>
    <updated>2018-04-26T12:06:39.338Z</updated>
    
    <content type="html"><![CDATA[<h2 id="如何用myetherwallet-来玩智能合约"><a href="#如何用myetherwallet-来玩智能合约" class="headerlink" title="如何用myetherwallet 来玩智能合约"></a>如何用myetherwallet 来玩智能合约</h2><p>用myetherwallet之前，请先看看 <a href="https://zhuanlan.zhihu.com/p/36105871" rel="external nofollow noopener noreferrer" target="_blank">黑客已经盗了15,945,221.72 USD</a></p><p>看完应该会知道如何安全的使用 myetherwallet 了.</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><strong>本次我们玩的合约是 <a href="https://ropsten.etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38" rel="external nofollow noopener noreferrer" target="_blank">https://ropsten.etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38</a></strong></p><h3 id="确定合约是在哪个网"><a href="#确定合约是在哪个网" class="headerlink" title="确定合约是在哪个网"></a>确定合约是在哪个网</h3><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpucquu3ij20fe0b83zv.jpg" alt=""></p><p>以上就是常见的所有网了</p><p>如果网址 前缀是ropsten，那么就是 ropsten测试网…</p><p>如果网址 前缀是kovan，那么就是 kovan测试网…</p><p>网址前面没有带的，如<a href="https://etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38" rel="external nofollow noopener noreferrer" target="_blank">https://etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38</a></p><p>这种就是主网…</p><p>除了主网外，其他的网都是测试网（也就是获取ETH是免费的）</p><p>我们本次测试的时候，网址是<a href="https://ropsten.etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38" rel="external nofollow noopener noreferrer" target="_blank">https://ropsten.etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38</a></p><p>那么我们本次玩的合约在 ropsten.</p><h3 id="获取合约地址"><a href="#获取合约地址" class="headerlink" title="获取合约地址"></a>获取合约地址</h3><p>合约地址还是很简单就能知道的</p><p>如本次我们要玩的网址是<a href="https://ropsten.etherscan.io/address/**0x39171828d0c6d072c19f5d32900e30343c296f38*" rel="external nofollow noopener noreferrer" target="_blank">https://ropsten.etherscan.io/address/**0x39171828d0c6d072c19f5d32900e30343c296f38*</a>*</p><p>那么合约地址就是 <strong>0x39171828d0c6d072c19f5d32900e30343c296f38</strong></p><h3 id="获取ABI"><a href="#获取ABI" class="headerlink" title="获取ABI"></a>获取ABI</h3><p>打开<a href="https://ropsten.etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38#code" rel="external nofollow noopener noreferrer" target="_blank">https://ropsten.etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38#code</a> (注意，如果你要玩的合约地址，不一样的话，则可以吧address 后面的地址替换成你的…)</p><p>复制contract ABI 里面的内容…(这就是ABI)</p><p>如果打开没有的话，则说明这个合约没有开源…</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpup111sfj222k14uqja.jpg" alt=""></p><h3 id="打开myetherwallet"><a href="#打开myetherwallet" class="headerlink" title="打开myetherwallet"></a>打开myetherwallet</h3><ul><li><p>打开 <a href="https://www.myetherwallet.com/#contracts" rel="external nofollow noopener noreferrer" target="_blank">https://www.myetherwallet.com/#contracts</a></p></li><li><p>选择正确的网</p></li></ul><p>可以看到，每个都有好几个，随便选择一个就行…(本次我们是ropsten，也就是只要前面是ropsten的，你随便选哪个都可以）</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqput51107j20z80zkqa1.jpg" alt=""></p><ul><li>复制上你合约地址 与 合约ABI ，然后点击Access</li></ul><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpuwhj65ij225o0n2wk1.jpg" alt=""></p><ul><li>选则你要调用的方法</li></ul><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpuxrptpaj212810iq6n.jpg" alt=""></p><p>（本次我们选择 <code>batchTransfer</code>)</p><ul><li>输入你的参数</li></ul><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpvf9kw43j21p20taq79.jpg" alt=""></p><p>本次我们的参数 如上图所示…<br>不知道为啥 请看<a href="https://mp.weixin.qq.com/s?__biz=MzU2OTAxNTcwMw==&amp;mid=2247483863&amp;idx=1&amp;sn=5029734091080c37923f9bd666a6e1fa&amp;chksm=fc846d2fcbf3e439e4f25ad1c7915c10ee8b375f791a260e0cd273d982aa521948d325f59121#rd" rel="external nofollow noopener noreferrer" target="_blank">一行代码蒸发了¥6,447,277,680 人民币！</a></p><ul><li>连接到metamask（metamask 没有装的话，请百度.)</li></ul><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpv39fzkuj223s0uqtg7.jpg" alt=""></p><ul><li>点击write </li></ul><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpvh38jhmj21840rwad6.jpg" alt=""></p><p>注意，gaslimit 会自动出来…如果gas limit 那边为空的话，请确认你的参数…</p><ul><li>点击生成交易</li></ul><p>确认提交就可以了</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpviza1z9j215u12awk3.jpg" alt=""></p><ul><li>然后这笔交易会发送到metamask上，点击submit 就可以了.<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqpvkhkfb8j20ke0qmgoh.jpg" alt=""></li></ul><p>我本次提交成功后的 tx <a href="https://ropsten.etherscan.io/tx/0x8359cfe6c0ccbb9a8126531c1162e80fb0c6f0beecb10bdcd0843bc368848b33" rel="external nofollow noopener noreferrer" target="_blank">https://ropsten.etherscan.io/tx/0x8359cfe6c0ccbb9a8126531c1162e80fb0c6f0beecb10bdcd0843bc368848b33</a></p>]]></content>
    
    <summary type="html">
    
      如何用myetherwallet 来玩智能合约
用myetherwallet之前，请先看看 黑客已经盗了15,945,221.72 USD

看完应该会知道如何安全的使用 myetherwallet 了.

开始
本次我们玩的合约是 https://ropsten.etherscan.io/address/0x39171828d0c6d072c19f5d32900e30343c296f38

确定合约是在哪个网


以上就是常见的所有网了

如果网址 前缀是ropsten，那么就是 ropsten测试网…

如果网址 前缀是kovan，那么就是 kovan测试网…

网址前面没有带的，如htt
    
    </summary>
    
      <category term="区块链" scheme="https://jin10086.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="myetherwallet" scheme="https://jin10086.github.io/tags/myetherwallet/"/>
    
      <category term="智能合约" scheme="https://jin10086.github.io/tags/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>黑客已经盗了15,945,221.72 USD</title>
    <link href="https://jin10086.github.io/2018/04/25/%E9%BB%91%E5%AE%A2%E5%B7%B2%E7%BB%8F%E7%9B%97%E4%BA%8615-945-221-72-USD/"/>
    <id>https://jin10086.github.io/2018/04/25/黑客已经盗了15-945-221-72-USD/</id>
    <published>2018-04-25T08:03:11.000Z</published>
    <updated>2018-04-25T08:03:55.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="黑客已经盗了15-945-221-72-USD"><a href="#黑客已经盗了15-945-221-72-USD" class="headerlink" title="黑客已经盗了15,945,221.72 USD"></a>黑客已经盗了15,945,221.72 USD</h2><p>myetherwallet 昨日发推特说，他们的DNS 被污染，导致部分用户进入到了假的 网站，从而导致ETH被盗</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqox4nbpl4j20yy0lq0xl.jpg" alt=""></p><p>截止到今天（2018-04-25 15:00) 黑客已经累计盗取了24,130.543323767777777777 Ether</p><p>换算成美元大概 $15,945,221.72 (@ $660.79/ETH)</p><p>这还没有包括 $143,924.09 的代币</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqox8zeu82j20r40p0ju6.jpg" alt=""></p><p>本文发出的时候，黑客账号还持续进账！！！</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqox5i91o0j21xq18itqh.jpg" alt=""></p><p> <a href="https://etherscan.io/address/0xb3aaaae47070264f3595c5032ee94b620a583a39" rel="external nofollow noopener noreferrer" target="_blank">黑客的钱包地址</a></p><h2 id="一些网友在该账户下面的评论"><a href="#一些网友在该账户下面的评论" class="headerlink" title="一些网友在该账户下面的评论"></a>一些网友在该账户下面的评论</h2><p> <img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqoxb4i56hj21we0tugtm.jpg" alt=""></p><p> <img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqoxc5pb13j21we0ocwml.jpg" alt=""></p><p> 还有一些人在乘机诈骗<br> <img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqoxe3ykbpj21ww0emwil.jpg" alt=""></p><p> 还有一些很可怜的人…</p><p> <img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqoxejlpp1j215606iq46.jpg" alt=""></p><p> 更多评论在<a href="https://etherscan.io/address/0xb3aaaae47070264f3595c5032ee94b620a583a39#comments" rel="external nofollow noopener noreferrer" target="_blank">0xb3aaaae47070264f3595c5032ee94b620a583a39</a></p><h2 id="什么是DNS欺骗"><a href="#什么是DNS欺骗" class="headerlink" title="什么是DNS欺骗"></a>什么是DNS欺骗</h2><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><blockquote><p>举一个例子，zh.wikipedia.org作为一个域名就和IP地址208.80.154.225相对应。DNS就像是一个自动的电话号码簿，我们可以直接拨打wikipedia的名字来代替电话号码（IP地址）。DNS在我们直接调用网站的名字以后就会将像zh.wikipedia.org一样便于人类使用的名字转化成像208.80.154.225一样便于机器识别的IP地址。</p></blockquote><blockquote><p>DNS查询有两种方式：递归和迭代。DNS客户端设置使用的DNS服务器一般都是递归服务器，它负责全权处理客户端的DNS查询请求，直到返回最终结果。而DNS服务器之间一般采用迭代查询方式。</p></blockquote><blockquote><p>以查询zh.wikipedia.org为例：</p></blockquote><blockquote><p>客户端发送查询报文”query zh.wikipedia.org”至DNS服务器，DNS服务器首先检查自身缓存，如果存在记录则直接返回结果。<br>如果记录老化或不存在，则<br>DNS服务器向根域名服务器发送查询报文”query zh.wikipedia.org”，根域名服务器返回.org域的权威域名服务器地址，这一级首先会返回的是顶级域名的权威域名服务器。<br>DNS服务器向.org域的权威域名服务器发送查询报文”query zh.wikipedia.org”，得到.wikipedia.org域的权威域名服务器地址。<br>DNS服务器向.wikipedia.org域的权威域名服务器发送查询报文”query zh.wikipedia.org”，得到主机zh的A记录，存入自身缓存并返回给客户端。</p></blockquote><p>简单的讲 就是:</p><p>假如我今天要打开百度</p><ul><li>那我先在浏览器输入 <a href="https://www.baidu.com" rel="external nofollow noopener noreferrer" target="_blank">https://www.baidu.com</a></li><li>然后 首先会检查我本地的dns 缓存,看看知不知道 百度的 ip是多少,如果已经知道的话，则返回给我，那么最终我访问的是 这个ip（所以 在 <a href="https://www.baidu.com" rel="external nofollow noopener noreferrer" target="_blank">https://www.baidu.com</a> == 返回给我的ip </li><li>如果不知道的话，则继续问上一层dns服务器，直到问到为止！</li></ul><p>那么<strong>dns欺骗</strong>是咋回事呢？</p><p>假如我今天要打开百度<br>我问dns 服务器，百度的ip是多少(假如正确的是 115.239.210.27)<br>但是dns服务器告诉我，百度的ip是 192.168.2.221</p><p>那么我实际打开的也就是 192.168.2.221</p><p>而这台服务器也做了个和百度一模一样的页面，那么我是不知道我被骗了！！！</p><p>然后我再百度页 提交的任何东西，都被黑客知道了。。。</p><h3 id="本次事件"><a href="#本次事件" class="headerlink" title="本次事件"></a>本次事件</h3><p><img src="https://blog.cloudflare.com/content/images/2018/04/Slide1.png" alt=""></p><p><img src="https://blog.cloudflare.com/content/images/2018/04/Slide2.png" alt=""></p><p>已经有人画了两张图，很清楚的描述了具体情况</p><h2 id="那么我们如何避免这种情况呢？"><a href="#那么我们如何避免这种情况呢？" class="headerlink" title="那么我们如何避免这种情况呢？"></a>那么我们如何避免这种情况呢？</h2><ul><li><p>在<a href="https://www.myetherwallet.com" rel="external nofollow noopener noreferrer" target="_blank">https://www.myetherwallet.com</a> 上转账的时候，一定要确保域名 以及HTTPS证书是正确的！！！</p><p>  <strong>如下图，不是绿色的，一定不要在上面输入任何信息…</strong><br>  其实不管是任何网站，一定要看到颜色是绿色的！（表示证书被验证通过了）<br>  <img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqoy8u5c4mj20vc036758.jpg" alt=""></p><p>  如下这种情况，表示证书有问题（本次myetherwallet有弹出这个）<br>  如果你还点继续的话，那么只能说你 <strong>人傻钱多了</strong><br>  <img src="https://blog.cloudflare.com/content/images/2018/04/Screen-Shot-2018-04-24-at-1.55.12-PM.png" alt=""></p></li><li><p>在联网情况下，不要输入私钥！！！<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqoyioozdkj225e0rwdnn.jpg" alt=""></p></li></ul><p>要使用钱包的话，推荐使用metamask！！！</p><p>本次的话，如果你就算打开了钓鱼网站，只要你没有在网站上输入 私钥，而是用metamask的话，那么你的钱暂时还是安全的）</p><ul><li>如果一定要用私钥的话，一定要在断网环境!!!</li></ul><p><strong>最后，花上几分钟阅读 <a href="https://myetherwallet.github.io/knowledge-base/security/" rel="external nofollow noopener noreferrer" target="_blank">https://myetherwallet.github.io/knowledge-base/security/</a></strong></p><p><strong>如果是电脑小白的话，推荐使用硬体钱包！别在网上乱买！</strong></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.cloudflare.com/bgp-leaks-and-crypto-currencies/" rel="external nofollow noopener noreferrer" target="_blank">https://blog.cloudflare.com/bgp-leaks-and-crypto-currencies/</a><br><a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F" rel="external nofollow noopener noreferrer" target="_blank">https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F</a></p>]]></content>
    
    <summary type="html">
    
      黑客已经盗了15,945,221.72 USD
myetherwallet 昨日发推特说，他们的DNS 被污染，导致部分用户进入到了假的 网站，从而导致ETH被盗



截止到今天（2018-04-25 15:00) 黑客已经累计盗取了24,130.543323767777777777 Ether

换算成美元大概 $15,945,221.72 (@ $660.79/ETH)

这还没有包括 $143,924.09 的代币



本文发出的时候，黑客账号还持续进账！！！



 黑客的钱包地址

一些网友在该账户下面的评论
 

 

 还有一些人在乘机诈骗


 还有一些很可怜的人…

 

    
    </summary>
    
      <category term="区块链" scheme="https://jin10086.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="myetherwallet" scheme="https://jin10086.github.io/tags/myetherwallet/"/>
    
      <category term="黑客" scheme="https://jin10086.github.io/tags/%E9%BB%91%E5%AE%A2/"/>
    
      <category term="安全" scheme="https://jin10086.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>一键上链</title>
    <link href="https://jin10086.github.io/2018/04/25/%E4%B8%80%E9%94%AE%E4%B8%8A%E9%93%BE/"/>
    <id>https://jin10086.github.io/2018/04/25/一键上链/</id>
    <published>2018-04-25T06:24:54.000Z</published>
    <updated>2018-04-26T06:56:46.076Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一键上链！"><a href="#一键上链！" class="headerlink" title="一键上链！"></a>一键上链！</h2><p>今天在朋友圈看到很多人在 讨论 <strong>北大yuexin上链</strong>事件.</p><p>虽然看到很多人写了教程 如何上链，但是觉得对普通人门槛还是太高了！</p><p>所以 做了一个一键上链的服务！</p><p>请直接点击&gt;&gt;&gt;<a href="http://www.dapdap.io/#/onChain" rel="external nofollow noopener noreferrer" target="_blank">一键上链</a></p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqo7ukywt7j20v00u07ij.jpg" alt=""></p><p>在文本框内输入你要上链的内容，然后点击提交即可！！！</p><p>成功后会看到如下内容，点击以太坊交易流水号.</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqo80hyhw8j21yq08wgn9.jpg" alt=""></p><p>页面拉到最下面，点击<em>convert to UTF8</em>，则可以在看到你上链的内容了！</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqomrevja2j21xm14y4bp.jpg" alt=""></p><p>如果还不明白的，我们做了一个动图！</p><p><img src="http://wx3.sinaimg.cn/mw690/cfc08357gy1fqq22c26a6g20bi0kg4nk.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      一键上链！
今天在朋友圈看到很多人在 讨论 北大yuexin上链事件.

虽然看到很多人写了教程 如何上链，但是觉得对普通人门槛还是太高了！

所以 做了一个一键上链的服务！

请直接点击&gt;&gt;&gt;一键上链



在文本框内输入你要上链的内容，然后点击提交即可！！！

成功后会看到如下内容，点击以太坊交易流水号.



页面拉到最下面，点击convert to UTF8，则可以在看到你上链的内容了！



如果还不明白的，我们做了一个动图！
    
    </summary>
    
      <category term="区块链" scheme="https://jin10086.github.io/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
      <category term="dapdap" scheme="https://jin10086.github.io/tags/dapdap/"/>
    
  </entry>
  
  <entry>
    <title>一行代码蒸发了¥6,447,277,680人民币！</title>
    <link href="https://jin10086.github.io/2018/04/22/%E4%BA%BA%E6%B0%91%E5%B8%81%EF%BC%81/"/>
    <id>https://jin10086.github.io/2018/04/22/人民币！/</id>
    <published>2018-04-22T15:24:05.000Z</published>
    <updated>2018-04-26T06:55:19.790Z</updated>
    
    <content type="html"><![CDATA[<p><strong>现在进入你还是先行者，最后观望者进场才是韭菜。</strong></p><p>美图董事长蔡文胜曾在三点钟群，高调的说出了这句话，随即被大众疯传。</p><p>在他发表完言论没多久，2月美链（BEC）上交易所会暴涨4000%，后又暴跌。尽管他多次否认，聪明的网友早已扒出，他与BEC千丝万缕的关系。</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqltga6j8bj20hs0dpqas.jpg" alt=""></p><p>庄家坐庄操控币价，美图的股价随之暴涨，蔡文胜顺利完成了他的韭菜收割大计。</p><p>但在币圈，割人者，人恒割之。</p><p>随着BEC智能合约的漏洞的爆出，被黑客利用，瞬间套现抛售大额BEC，6亿在瞬间归零。</p><p>而这一切，竟然是因为一个简单至极的程序Bug。</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>今天有人在群里说，<a href="https://etherscan.io/address/0xc5d105e63711398af9bbff092d4b6769c82f793d" rel="external nofollow noopener noreferrer" target="_blank">Beauty Chain 美蜜</a> 代码里面有bug，已经有人利用该bug获得了  57,896,044,618,658,100,000,000,000,000,000,000,000,000,000,000,000,000,000,000.792003956564819968 个 BEC</p><p>那笔操作记录是 <a href="https://etherscan.io/tx/0xad89ff16fd1ebe3a0a7cf4ed282302c06626c1af33221ebe0d3a470aba4a660f" rel="external nofollow noopener noreferrer" target="_blank">0xad89ff16fd1ebe3a0a7cf4ed282302c06626c1af33221ebe0d3a470aba4a660f</a></p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqlpon57s4j21qe15c13c.jpg" alt=""></p><p>下面我来带大家看看，黑客是如何实现的！</p><p>我们可以看到执行的方法是 <code>batchTransfer</code></p><p>那这个方法是干嘛的呢？（给指定的几个地址，发送相同数量的代币）</p><h3 id="整体逻辑是"><a href="#整体逻辑是" class="headerlink" title="整体逻辑是"></a>整体逻辑是</h3><p>你传几个地址给我(_receivers),然后再传给我你要给每个人多少代币（_value)</p><p>然后你要发送的总金额 = 发送的人数* 发送的金额</p><p>然后 要求你当前的余额大于 发送的总金额</p><p>然后扣掉你发送的总金额</p><p>然后 给_receivers 里面的每个人发送 指定的金额（_value)</p><p>从逻辑上看，这边是没有任何问题的，你想给别人发送代币，那么你本身的余额一定要大于发送的总金额的！</p><p>但是这段代码却犯了一个很傻的错!</p><h2 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h2><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqlpsliqg9j21aq0di41a.jpg" alt=""></p><p>这个方法会传入两个参数</p><ol><li>_receivers</li><li>_value</li></ol><p>_receivers 的值是个列表，里面有两个地址 </p><p><a href="https://etherscan.io/token/0xc5d105e63711398af9bbff092d4b6769c82f793d?a=0x0e823ffe018727585eaf5bc769fa80472f76c3d7" rel="external nofollow noopener noreferrer" target="_blank">0x0e823ffe018727585eaf5bc769fa80472f76c3d7</a></p><p><a href="https://etherscan.io/token/0xc5d105e63711398af9bbff092d4b6769c82f793d?a=0xb4d30cac5124b46c2df0cf3e3e1be05f42119033" rel="external nofollow noopener noreferrer" target="_blank">0xb4d30cac5124b46c2df0cf3e3e1be05f42119033</a></p><p>_value 的值是 <code>8000000000000000000000000000000000000000000000000000000000000000</code></p><p>我们再查看代码（如下图）</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqlpj1qxlxj226s0o8wjw.jpg" alt=""></p><p>我们一行一行的来解释</p><p><code>uint cnt = _receivers.length;</code></p><p>是获取 _receivers 里面有几个地址，我们从上面可以看到 参数里面只有两个地址，所以 cnt=2，也就是 给两个地址发送代币</p><p><code>uint256 amount = uint256(cnt) * _value;</code></p><h2 id="uint256"><a href="#uint256" class="headerlink" title="uint256"></a>uint256</h2><p>首先<code>uint256(cnt)</code> 是把cnt 转成了 uint256类型</p><p>那么,什么是uint256类型？或者说uint256类型的取值范围是多少…</p><p>uintx 类型的取值范围是 0 到 2的x次方 -1</p><p>也就是 假如是 uint8的话 </p><p>则 uint8的取值范围是 0 到 2的8次方 -1 </p><p>也就是 0 到255</p><p>那么uint256 的取值范围是 </p><p>0 - 2的256次方-1  也就是 <code>0 到115792089237316195423570985008687907853269984665640564039457584007913129639935</code></p><p>python 算 2的256次方是多少<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqlpjvwod1j20zs03c74x.jpg" alt=""></p><p>那么假如说 设置的值超过了 取值范围怎么办？这种情况称为<code>溢出</code></p><p>举个例子来说明</p><p>因为uint256的取值太大了，所以用uint8来 举例。。。</p><p>从上面我们已经知道了  uint8 最小是0，最大是255</p><p>那么当我 255 + 1 的时候，结果是啥呢？<strong>结果会变成0</strong></p><p>那么当我 255 + 2 的时候，结果是啥呢？<strong>结果会变成1</strong></p><p>那么当我 0 - 1  的时候，结果是啥呢？<strong>结果会变成255</strong></p><p>那么当我 0 - 2  的时候，结果是啥呢？<strong>结果会变成255</strong></p><p>那么 我们回到上面的代码中，</p><p><code>amount = uint256(cnt) * _value</code></p><p>则 amount = 2* _value</p><p>但是此时 _value 是16进制的，我们把他转成 10进制 </p><p>（python 16进制转10进制）<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqlqm9j1thj20y203sjs6.jpg" alt=""></p><p>可以看到 _value = <code>57896044618658097711785492504343953926634992332820282019728792003956564819968</code></p><p>那么amount = _value*2 = <code>115792089237316195423570985008687907853269984665640564039457584007913129639936</code></p><p>可以在查看上面看到 uint256取值范围最大为 <code>115792089237316195423570985008687907853269984665640564039457584007913129639935</code></p><p>此时，amout已经超过了最大值，溢出 则<code>amount = 0</code></p><p>下一行代码<br><code>require(cnt &gt; 0 &amp;&amp; cnt &lt;= 20);</code><br>require 语句是表示该语句一定要是正确的，也就是 cnt 必须大于0 且 小于等于20</p><p>我们的cnt等于2，通过!</p><p><code>require(_value &gt; 0 &amp;&amp; balances[msg.sender] &gt;= amount);</code></p><p>这句要求 _value 大于0，我们的_value是大于0 的<br>且,当前用户拥有的代币余额大于等于 amount,因为amount等于0，所以 就算你一个代币没有，也是满足的！</p><p><code>balances[msg.sender] = balances[msg.sender].sub(amount);</code></p><p>这句是当前用户的余额 - amount</p><p>当前amount 是0，所以当前用户代币的余额没有变动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (uint i = 0; i &lt; cnt; i++) &#123;</span><br><span class="line">    balances[_receivers[i]] = balances[_receivers[i]].add(_value);</span><br><span class="line">    Transfer(msg.sender, _receivers[i], _value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这句是遍历 _receivers中的地址，<br>对每个地址做以下操作</p><p><code>balances[_receivers[i]] = balances[_receivers[i]].add(_value);</code><br>_receivers中的地址 的余额 = 原本余额+value</p><p>所以 _receivers 中地址的余额 则加了57896044618658097711785492504343953926634992332820282019728792003956564819968 个代币！！！</p><p><code>Transfer(msg.sender, _receivers[i], _value);}</code><br>这句则只是把赠送代币的记录存下来！！！</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>就一个简单的溢出漏洞，导致BEC代币的市值接近归0</p><p>那么，开发者有没有考虑到溢出问题呢？</p><p>其实他考虑了,</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqlssg2452j225m0o20y4.jpg" alt=""></p><p>可以看如上截图</p><p>除了amount的计算外, 其他的给用户转钱 都用了safeMath 的方法（sub,add)</p><p>那么 为啥就偏偏这一句没有用safeMath的方法呢。。。</p><p>这就要用写代码的人了。。。</p><h2 id="啥是safeMath"><a href="#啥是safeMath" class="headerlink" title="啥是safeMath"></a>啥是safeMath</h2><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqlsweul1oj21o014k105.jpg" alt=""></p><p>safeMath 是为了计算安全 而写的一个library</p><p>我们看看他干了啥？为啥能保证计算安全.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function mul(uint256 a, uint256 b) internal constant returns (uint256) &#123;</span><br><span class="line">uint256 c = a * b;</span><br><span class="line">assert(a == 0 || c / a == b);</span><br><span class="line">return c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上面的乘法.<br>他在计算后，用assert 验证了下结果是否正确！</p><p>如果在上面计算 amount的时候，用了 mul的话，<br>则 <code>c / a == b</code><br>也就是 验证 amount / cnt == _value </p><p>这句会执行报错的，因为 0 / cnt  不等于 _value</p><p>所以程序会报错！</p><p>也就不会发生溢出了…</p><p>那么 还有一个小问题，这里的<code>assert</code> 好 <code>require</code> 好像是干的同一件事</p><p>都是为了验证 某条语句是否正确！</p><p>那么他俩有啥区别呢？</p><p> 用了assert的话，则程序的gas limit 会消耗完毕</p><p>而require的话，则只是消耗掉当前执行的gas </p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p>那么 我们如何避免这种问题呢？</p><p>我个人看法是</p><ol><li>只要涉及到计算，一定要用safeMath</li><li>代码一定要测试！</li><li>代码一定要review！</li><li>必要时，要请专门做代码审计的公司来 测试代码</li></ol><p>这件事后需要如何处理呢？</p><p>目前，该方法已经暂停了（还好可以暂停）所以看过文章的朋友 不要去测试了…</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fqltbqvtz7j227o0pyq8i.jpg" alt=""></p><p>不过已经发生了的事情咋办呢？</p><p>我的想法是，快照在漏洞之前，所有用户的余额情况</p><p>然后发行新的token，给之前的用户 发送等额的代币…</p>]]></content>
    
    <summary type="html">
    
      现在进入你还是先行者，最后观望者进场才是韭菜。

美图董事长蔡文胜曾在三点钟群，高调的说出了这句话，随即被大众疯传。

在他发表完言论没多久，2月美链（BEC）上交易所会暴涨4000%，后又暴跌。尽管他多次否认，聪明的网友早已扒出，他与BEC千丝万缕的关系。



庄家坐庄操控币价，美图的股价随之暴涨，蔡文胜顺利完成了他的韭菜收割大计。

但在币圈，割人者，人恒割之。

随着BEC智能合约的漏洞的爆出，被黑客利用，瞬间套现抛售大额BEC，6亿在瞬间归零。

而这一切，竟然是因为一个简单至极的程序Bug。

背景
今天有人在群里说，Beauty Chain 美蜜 代码里面有bug，已经有人利用该
    
    </summary>
    
    
      <category term="区块链" scheme="https://jin10086.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>爬虫带你发现区块链好游戏</title>
    <link href="https://jin10086.github.io/2018/03/22/%E5%B8%A6%E4%BD%A0%E5%8F%91%E7%8E%B0%E5%A5%BD%E6%B8%B8%E6%88%8F/"/>
    <id>https://jin10086.github.io/2018/03/22/带你发现好游戏/</id>
    <published>2018-03-22T10:38:43.000Z</published>
    <updated>2018-04-04T07:12:10.672Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为啥做这个"><a href="#为啥做这个" class="headerlink" title="为啥做这个?"></a>为啥做这个?</h2><p><a href="https://zhuanlan.zhihu.com/p/34356844" rel="external nofollow noopener noreferrer" target="_blank">花了600万玩区块链游戏，我觉得智能合约还是有点靠谱的</a></p><p>要从这篇文章说起，之前帮nick拿数据的时候，就在想。既然 eth的所有数据都是公开的，那我是不是可以把所有的链上游戏的交易数据都拿下来，然后看看，</p><h3 id="针对所有游戏来说"><a href="#针对所有游戏来说" class="headerlink" title="针对所有游戏来说"></a>针对所有游戏来说</h3><ul><li>有多少人玩了区块链游戏？</li><li>有多少人赚了钱？</li><li>有多少人亏了钱？</li></ul><h3 id="针对某款游戏来说"><a href="#针对某款游戏来说" class="headerlink" title="针对某款游戏来说"></a>针对某款游戏来说</h3><p>有多少人玩过？<br>每天的日活是多少？<br>有多少人赚了钱？<br>有多少人亏了钱？</p><p>通过这些数据，那么我也就能分析出来</p><h1 id="这款游戏我现在玩能赚到钱么？"><a href="#这款游戏我现在玩能赚到钱么？" class="headerlink" title="这款游戏我现在玩能赚到钱么？"></a>这款游戏我现在玩能赚到钱么？</h1><h1 id="哪些游戏可能有猫腻？"><a href="#哪些游戏可能有猫腻？" class="headerlink" title="哪些游戏可能有猫腻？"></a>哪些游戏可能有猫腻？</h1><h1 id="哪些游戏一玩就亏钱？"><a href="#哪些游戏一玩就亏钱？" class="headerlink" title="哪些游戏一玩就亏钱？"></a>哪些游戏一玩就亏钱？</h1><h1 id="甚至还可以跟踪大佬（也就是赚钱最多的人"><a href="#甚至还可以跟踪大佬（也就是赚钱最多的人" class="headerlink" title="甚至还可以跟踪大佬（也就是赚钱最多的人)"></a>甚至还可以跟踪大佬（也就是赚钱最多的人)</h1><p>看看他在玩什么.</p><p>这样我们就可以愉快的”玩游戏”了</p><h2 id="Just-do-it"><a href="#Just-do-it" class="headerlink" title="Just do it!"></a>Just do it!</h2><p>有想法以后，一直想着赶快做出来…<br>然而我是个前端渣渣…<br>到哪里去找人一起来做呢？？？</p><p>刚好看到dorahack在西安举行hackthon.<br>就赶过去了，找到了一帮小伙伴一起把他完成了！</p><h2 id="网站演示"><a href="#网站演示" class="headerlink" title="网站演示"></a>网站演示</h2><p>网址在这&gt;&gt;&gt;<a href="http://www.dapdap.io/#/" rel="external nofollow noopener noreferrer" target="_blank">dapdap</a></p><p>查看所有dapp的情况<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fplswqo4awj211y0hpmz7.jpg" alt=""></p><p>查看某个游戏的收益情况<br><img src="http://ww1.sinaimg.cn/large/cfc08357ly1fplsy6022yj211y0hp75p.jpg" alt=""></p><p>查看某个游戏的收益情况（这是我的…<br><img src="http://ww1.sinaimg.cn/large/cfc08357ly1fplsz2rifyj211y0hpwfw.jpg" alt=""></p><p>某个游戏的用户情况<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fplt44ot0gj20uw0g7gmo.jpg" alt=""></p><h2 id="反馈与交流"><a href="#反馈与交流" class="headerlink" title="反馈与交流"></a>反馈与交流</h2><p>对这个网站有任何建议与吐槽的，欢迎加群！<br>想一起来玩区块链游戏的，欢迎加群讨论！<br>加群请扫描下面二维码<br>或者搜索718944415，加入！<br><img src="http://ww1.sinaimg.cn/large/cfc08357ly1fpltwfteelj206c07n0tf.jpg" alt=""><br>最后，网址是，<a href="http://www.dapdap.io" rel="external nofollow noopener noreferrer" target="_blank">http://www.dapdap.io</a></p>]]></content>
    
    <summary type="html">
    
      为啥做这个?
花了600万玩区块链游戏，我觉得智能合约还是有点靠谱的

要从这篇文章说起，之前帮nick拿数据的时候，就在想。既然 eth的所有数据都是公开的，那我是不是可以把所有的链上游戏的交易数据都拿下来，然后看看，

针对所有游戏来说
 * 有多少人玩了区块链游戏？
 * 有多少人赚了钱？
 * 有多少人亏了钱？

针对某款游戏来说
有多少人玩过？
每天的日活是多少？
有多少人赚了钱？
有多少人亏了钱？

通过这些数据，那么我也就能分析出来

这款游戏我现在玩能赚到钱么？
哪些游戏可能有猫腻？
哪些游戏一玩就亏钱？
甚至还可以跟踪大佬（也就是赚钱最多的人)
看看他在玩什么.

这样我们就
    
    </summary>
    
      <category term="dapp" scheme="https://jin10086.github.io/categories/dapp/"/>
    
    
      <category term="以太坊" scheme="https://jin10086.github.io/tags/%E4%BB%A5%E5%A4%AA%E5%9D%8A/"/>
    
      <category term="dapdap.io" scheme="https://jin10086.github.io/tags/dapdap-io/"/>
    
  </entry>
  
  <entry>
    <title>知乎看图插件</title>
    <link href="https://jin10086.github.io/2018/03/06/%E7%9F%A5%E4%B9%8E%E7%9C%8B%E5%9B%BE%E6%8F%92%E4%BB%B6/"/>
    <id>https://jin10086.github.io/2018/03/06/知乎看图插件/</id>
    <published>2018-03-06T15:59:48.000Z</published>
    <updated>2018-04-04T07:12:10.673Z</updated>
    
    <content type="html"><![CDATA[<p>这个是受路人甲 之前发的一个插件的影响</p><p>我下载下来了 发现 竟然用不了。。。</p><p>而且只支持问题页看图</p><p>所以就修改了下。。。</p><p>而且开源放到了github上，主要是希望大家能一起维护他</p><p>毕竟靠一个人来做的话，是比较难的。。。</p><p>而且我比较懒。。。</p><p>我是个js菜鸟，代码有啥不忍直视的地方。。。</p><p>请随便喷。。。</p><h2 id="如何安装"><a href="#如何安装" class="headerlink" title="如何安装"></a>如何安装</h2><ol><li><p>把项目下载到本地</p></li><li><p>在chrome浏览器的地址栏输入 <code>chrome://extensions/</code></p></li><li>点击加载已解压的扩展程序</li><li>找到刚才下载的目录</li><li>如图所示，你就可以愉快的看图了<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fp3edo75urj20mb05g3yr.jpg" alt=""></li></ol><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p><code>Ctrl + Alt + D</code>开始运行插件<br><code>Ctrl + Alt + F</code>开始看图模式<br>方向键盘左键向左查看，右键向右查看<br>Esc退出看图模式</p><p>目前支持知乎上所有的页面的看图(如有不支持的，欢迎提issue)</p><p>项目地址在<a href="https://github.com/jin10086/zhihukantu" rel="external nofollow noopener noreferrer" target="_blank">知乎看图</a></p><h2 id="功能演示"><a href="#功能演示" class="headerlink" title="功能演示"></a>功能演示</h2><p>就是打开 你想看图的页面，然后输入Ctrl + Alt + D<br>再输入Ctrl + Alt + F 就可以愉快的看图了…</p><p><img src="http://wx1.sinaimg.cn/mw690/cfc08357gy1fp45ejqpryg20dc07i4qs.gif" alt="9gNGRJ.gif"><br><img src="http://wx2.sinaimg.cn/mw690/cfc08357gy1fp45f3pgl1g20dc07i7wj.gif" alt="9gN8G4.gif"></p><h2 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h2><ul><li>自动加载下一页图片</li><li>自动播放图片</li><li>看图支持评论与弹幕展示</li><li>双击图片直接点赞</li><li>右键直接到回答者页面看图</li></ul><h2 id="来贡献代码把"><a href="#来贡献代码把" class="headerlink" title="来贡献代码把"></a>来贡献代码把</h2><p>欢迎来提bug,来贡献代码.</p>]]></content>
    
    <summary type="html">
    
      这个是受路人甲 之前发的一个插件的影响

我下载下来了 发现 竟然用不了。。。

而且只支持问题页看图

所以就修改了下。。。

而且开源放到了github上，主要是希望大家能一起维护他

毕竟靠一个人来做的话，是比较难的。。。

而且我比较懒。。。

我是个js菜鸟，代码有啥不忍直视的地方。。。

请随便喷。。。

如何安装
 1. 把项目下载到本地
    
    
 2. 在chrome浏览器的地址栏输入 chrome://extensions/
    
    
 3. 点击加载已解压的扩展程序
 4. 找到刚才下载的目录
 5. 如图所示，你就可以愉快的看图了
    

如何使
    
    </summary>
    
      <category term="知乎" scheme="https://jin10086.github.io/categories/%E7%9F%A5%E4%B9%8E/"/>
    
    
      <category term="chrome插件" scheme="https://jin10086.github.io/tags/chrome%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>从爬虫角度来说下360快视频事件</title>
    <link href="https://jin10086.github.io/2018/02/21/%E4%BB%8E%E7%88%AC%E8%99%AB%E8%A7%92%E5%BA%A6%E6%9D%A5%E8%AF%B4%E4%B8%8B360%E5%BF%AB%E8%A7%86%E9%A2%91%E4%BA%8B%E4%BB%B6/"/>
    <id>https://jin10086.github.io/2018/02/21/从爬虫角度来说下360快视频事件/</id>
    <published>2018-02-21T04:58:50.000Z</published>
    <updated>2018-04-04T07:12:10.671Z</updated>
    
    <content type="html"><![CDATA[<h2 id="360快视频事件"><a href="#360快视频事件" class="headerlink" title="360快视频事件"></a>360快视频事件</h2><blockquote><p>最开始好像是东方华灯宴的视频被发现被盗用，然后众用户排查发现大量B站视频被快视频盗用，连用户和评论也大量照搬，并有很多B站用户发现使用B站的用户名、密码可以直接在快视频上登录一个账号。</p></blockquote><p>详情可以看知乎问题页 <a href="https://www.zhihu.com/question/267364872" rel="external nofollow noopener noreferrer" target="_blank">如何看待360快视频大量盗用B站视频和用户个人信息数据？</a></p><h2 id="他是怎么实现的"><a href="#他是怎么实现的" class="headerlink" title="他是怎么实现的"></a>他是怎么实现的</h2><p>有网友是这样猜测的</p><blockquote><p>A.360主动参与了针对用户群体个人信息数据库的盗窃和/或非法买卖行为；<br>B.360一直在通过各种渠道(比如某些有名的“安全杀毒软件”)收集用户的录入信息，特别是用户名和密码；<br>C.用户名和密码都是B站用户托梦告诉360的；<br>D.今天天气真好。</p></blockquote><p>以上来自<a href="https://www.zhihu.com/question/267364872/answer/322975937" rel="external nofollow noopener noreferrer" target="_blank">如何看待360快视频大量盗用B站视频和用户<br>个人信息数据？ - 苏翻译的回答 - 知乎</a></p><p>我说句难听的话，这兄弟估计没有听说过爬虫…</p><p>那假如是我，要做出这种软件，我怎么做呢</p><h3 id="视频信息以及个人用户信息的抓取"><a href="#视频信息以及个人用户信息的抓取" class="headerlink" title="视频信息以及个人用户信息的抓取"></a>视频信息以及个人用户信息的抓取</h3><p>这个对360团队来说应该很简单，毕竟自己做了搜索引擎，很多公司都希望他来抓。</p><p>所以抓取视频信息，评论信息，做一个个人页，换上一样的id 以及头像都是很简单的。</p><p>因为这些信息 在B站上完全可以获取到</p><h3 id="为啥能用B站的账号能直接登陆360快视频？"><a href="#为啥能用B站的账号能直接登陆360快视频？" class="headerlink" title="为啥能用B站的账号能直接登陆360快视频？"></a>为啥能用B站的账号能直接登陆360快视频？</h3><p>很多人猜测是被脱裤了<br>也不是没有这个可能，不过这种方法不太好</p><ol><li>实时性不够高</li><li>有法律风险</li></ol><p>最简单的方法也是爬虫</p><p>具体如何实现的呢？<br>我画了一个小图</p><p>正常流程<br><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fonzrwcaimj20dc08174f.jpg" alt=""></p><p>360快视频的流程</p><p><img src="http://ww1.sinaimg.cn/large/cfc08357gy1fonzuj8l8tj20iw0bzwf2.jpg" alt=""></p><p>简单的讲就是 当你在360快视频输入账号密码的时候，<strong>我把你的账号密码拿去B站模拟登陆，登陆成功则获取你在B站的个人页，然后让你跳转到360快视频对应的个人页</strong>，<br>如果登陆不成功，则把B站返回的内容（如用户名或者密码错误）返回给用户</p><h3 id="所以我没有拿到你的账号密码也可以做到和你的网站自动关联"><a href="#所以我没有拿到你的账号密码也可以做到和你的网站自动关联" class="headerlink" title="所以我没有拿到你的账号密码也可以做到和你的网站自动关联."></a>所以我没有拿到你的账号密码也可以做到和你的网站自动关联.</h3><h3 id="这个实现起来难么？"><a href="#这个实现起来难么？" class="headerlink" title="这个实现起来难么？"></a>这个实现起来难么？</h3><p>很简单把…</p><h3 id="你咋知道的？"><a href="#你咋知道的？" class="headerlink" title="你咋知道的？"></a>你咋知道的？</h3><p>我以前做过这种…</p><h3 id="还有别的例子么？"><a href="#还有别的例子么？" class="headerlink" title="还有别的例子么？"></a>还有别的例子么？</h3><ul><li>支付宝里面的公积金账号查询</li><li>一些第三方的学信网信息查询（还让你自己输入手机验证码呢！！！）</li><li>等等等…这个很普遍…</li></ul><h2 id="最后吐槽时间"><a href="#最后吐槽时间" class="headerlink" title="最后吐槽时间"></a>最后吐槽时间</h2><blockquote><p>你只要安装了360安全卫士，不出一个星期，你的电脑上就会莫名其妙出现一系列360的产品，这就是俗称的360全家桶。来源于<a href="http://zhuanlan.zhihu.com/p/33887437" rel="external nofollow noopener noreferrer" target="_blank">快视频：剽窃了B站的数据库？360的常规操作了。 - 温柔的文章 - 知乎</a></p></blockquote><p>我觉得360这件事做的不对，但是也不能随便诬赖人家啊。。。<br>我电脑包括公司里面的，<br>一直装了360<br>都用了接近快5年了，也没有被自动装上360全家桶啊。。。<br>难道是因为我装的是假的360 么？</p>]]></content>
    
    <summary type="html">
    
      360快视频事件
最开始好像是东方华灯宴的视频被发现被盗用，然后众用户排查发现大量B站视频被快视频盗用，连用户和评论也大量照搬，并有很多B站用户发现使用B站的用户名、密码可以直接在快视频上登录一个账号。

详情可以看知乎问题页 如何看待360快视频大量盗用B站视频和用户个人信息数据？

他是怎么实现的
有网友是这样猜测的

A.360主动参与了针对用户群体个人信息数据库的盗窃和/或非法买卖行为；
B.360一直在通过各种渠道(比如某些有名的“安全杀毒软件”)收集用户的录入信息，特别是用户名和密码；
C.用户名和密码都是B站用户托梦告诉360的；
D.今天天气真好。

以上来自如何看待360快视
    
    </summary>
    
      <category term="爬虫" scheme="https://jin10086.github.io/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫的应用" scheme="https://jin10086.github.io/tags/%E7%88%AC%E8%99%AB%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>佛系编程[如何创建一个安全可靠的应用程序]</title>
    <link href="https://jin10086.github.io/2018/02/08/%E4%BD%9B%E6%80%A7%E7%BC%96%E7%A8%8B/"/>
    <id>https://jin10086.github.io/2018/02/08/佛性编程/</id>
    <published>2018-02-08T08:58:56.000Z</published>
    <updated>2018-04-04T07:12:10.671Z</updated>
    
    <content type="html"><![CDATA[<p>推荐最近在GitHub上很火的一个项目，按照介绍，你也可以创建一个安全可靠的应用程序</p><p><a href="https://github.com/kelseyhightower/nocode" rel="external nofollow noopener noreferrer" target="_blank">nocode</a><a href="https://github.com/kelseyhightower/nocode" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/kelseyhightower/nocode</a></p><p>以下是项目介绍</p><h1 id="No-Code"><a href="#No-Code" class="headerlink" title="No Code"></a>No Code</h1><p>No code is the best way to write secure and reliable applications. Write nothing; deploy nowhere.</p><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><p>Start by not writing any code.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>This is just an example application, but imagine it doing anything you want. Adding new features is easy too:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>The possibilities are endless.</p><h3 id="Building-the-Application"><a href="#Building-the-Application" class="headerlink" title="Building the Application"></a>Building the Application</h3><p>Now that you have not done anything it’s time to build your application:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Yep. That’s it. You should see the following output:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Deploying"><a href="#Deploying" class="headerlink" title="Deploying"></a>Deploying</h3><p>While you still have not done anything it’s time to deploy your application. By running the following command you can deploy your application absolutely nowhere.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>It’s that simple. And when it comes time to scale the application, all you have to do is:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>I know right?</p><h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>You don’t.</p>]]></content>
    
    <summary type="html">
    
      推荐最近在GitHub上很火的一个项目，按照介绍，你也可以创建一个安全可靠的应用程序

nocodehttps://github.com/kelseyhightower/nocode

以下是项目介绍

No Code
No code is the best way to write secure and reliable applications. Write nothing; deploy nowhere.

Getting Started
Start by not writing any code.

1
2






This is just an example applicati
    
    </summary>
    
      <category term="编程随想" scheme="https://jin10086.github.io/categories/%E7%BC%96%E7%A8%8B%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="好玩的项目" scheme="https://jin10086.github.io/tags/%E5%A5%BD%E7%8E%A9%E7%9A%84%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
</feed>
